version: '3.8'

services:
  # Single-node Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kibana for visualization and management
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    networks:
      - elastic
    depends_on:
      elasticsearch:
        condition: service_healthy

  # Multi-node Elasticsearch cluster (commented out by default)
  # Uncomment for production-like setup

  # elasticsearch-node1:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  #   container_name: es-node1
  #   environment:
  #     - node.name=es-node1
  #     - cluster.name=es-cluster
  #     - discovery.seed_hosts=es-node2,es-node3
  #     - cluster.initial_master_nodes=es-node1,es-node2,es-node3
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
  #     - xpack.security.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es-node1-data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9201:9200"
  #   networks:
  #     - elastic

  # elasticsearch-node2:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  #   container_name: es-node2
  #   environment:
  #     - node.name=es-node2
  #     - cluster.name=es-cluster
  #     - discovery.seed_hosts=es-node1,es-node3
  #     - cluster.initial_master_nodes=es-node1,es-node2,es-node3
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
  #     - xpack.security.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es-node2-data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9202:9200"
  #   networks:
  #     - elastic

  # elasticsearch-node3:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  #   container_name: es-node3
  #   environment:
  #     - node.name=es-node3
  #     - cluster.name=es-cluster
  #     - discovery.seed_hosts=es-node1,es-node2
  #     - cluster.initial_master_nodes=es-node1,es-node2,es-node3
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
  #     - xpack.security.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es-node3-data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9203:9200"
  #   networks:
  #     - elastic

networks:
  elastic:
    driver: bridge

volumes:
  es-data:
    driver: local
  # es-node1-data:
  #   driver: local
  # es-node2-data:
  #   driver: local
  # es-node3-data:
  #   driver: local
