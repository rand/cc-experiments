version: '3.8'

services:
  # PostgreSQL database for testing migrations
  postgres:
    image: postgres:15-alpine
    container_name: migration_test_db
    environment:
      POSTGRES_DB: migration_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flyway migration runner
  flyway:
    image: flyway/flyway:latest
    container_name: migration_flyway
    command: migrate
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/migration_test
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: postgres
      FLYWAY_BASELINE_ON_MIGRATE: "true"
    volumes:
      - ../sql/safe_migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy

  # pgAdmin for database inspection (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: migration_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - with-pgadmin

volumes:
  postgres_data:
  pgadmin_data:
