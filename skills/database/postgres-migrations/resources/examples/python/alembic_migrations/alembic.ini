# Alembic configuration file

[alembic]
# Path to migration scripts
script_location = alembic

# Template used to generate migration file names
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# Timezone to use when rendering the date within the migration file
# timezone =

# Max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without a source .py file
# sourceless = false

# Version path separator; default is 'os'
# version_path_separator = os
# version_path_separator = space
# version_path_separator = :

# Set to 'true' to search source files recursively
# recursive_version_locations = false

# The output encoding used when revision files are written
# output_encoding = utf-8

# Database connection URL
# Format: postgresql://user:password@host:port/database
sqlalchemy.url = postgresql://postgres:postgres@localhost:5432/migration_example


[post_write_hooks]
# Post-write hooks (optional)
# Format: hook_name = tool_name
# Example: format = black
# hooks = format
# format.type = console_scripts
# format.entrypoint = black
# format.options = -l 79 REVISION_SCRIPT_FILENAME


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
