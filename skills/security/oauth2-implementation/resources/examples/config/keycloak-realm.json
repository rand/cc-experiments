{
  "realm": "demo",
  "enabled": true,
  "displayName": "OAuth 2.0 Demo Realm",
  "displayNameHtml": "<b>OAuth 2.0 Demo</b>",
  "accessTokenLifespan": 900,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "offlineSessionIdleTimeout": 2592000,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 0,
  "clients": [
    {
      "clientId": "demo-web-app",
      "name": "Demo Web Application",
      "description": "Web application using authorization code flow with PKCE",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "demo-web-app-secret",
      "redirectUris": [
        "http://localhost:3000/callback",
        "http://localhost:5000/callback",
        "https://app.example.com/callback"
      ],
      "webOrigins": [
        "http://localhost:3000",
        "http://localhost:5000",
        "https://app.example.com"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": false,
      "consentRequired": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "http://localhost:3000/*##http://localhost:5000/*##https://app.example.com/*",
        "backchannel.logout.url": "",
        "backchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.rotation.enabled": "false",
        "require.pushed.authorization.requests": "false"
      },
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "email",
        "roles"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "demo-spa",
      "name": "Demo Single-Page Application",
      "description": "SPA using authorization code flow with PKCE (public client)",
      "enabled": true,
      "publicClient": true,
      "redirectUris": [
        "http://localhost:3000/callback",
        "https://spa.example.com/callback"
      ],
      "webOrigins": [
        "http://localhost:3000",
        "https://spa.example.com"
      ],
      "protocol": "openid-connect",
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "http://localhost:3000/*##https://spa.example.com/*"
      },
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "email",
        "roles"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "clientId": "demo-service",
      "name": "Demo Backend Service",
      "description": "Backend service using client credentials flow",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "demo-service-secret",
      "protocol": "openid-connect",
      "publicClient": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "fullScopeAllowed": false,
      "attributes": {
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false"
      },
      "defaultClientScopes": [
        "api-scope"
      ]
    },
    {
      "clientId": "demo-mobile",
      "name": "Demo Mobile App",
      "description": "Mobile application using authorization code flow with PKCE",
      "enabled": true,
      "publicClient": true,
      "redirectUris": [
        "com.example.demoapp://oauth/callback",
        "http://localhost/callback"
      ],
      "protocol": "openid-connect",
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": false,
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "defaultClientScopes": [
        "profile",
        "email",
        "roles"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "clientId": "demo-resource-server",
      "name": "Demo Resource Server",
      "description": "Resource server for token introspection",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "demo-resource-server-secret",
      "protocol": "openid-connect",
      "publicClient": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "fullScopeAllowed": false
    }
  ],
  "clientScopes": [
    {
      "name": "api-scope",
      "description": "API access scopes",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "api-audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "config": {
            "included.custom.audience": "https://api.example.com",
            "access.token.claim": "true"
          }
        }
      ]
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "user",
        "description": "Standard user role"
      },
      {
        "name": "admin",
        "description": "Administrator role"
      },
      {
        "name": "api_read",
        "description": "API read access"
      },
      {
        "name": "api_write",
        "description": "API write access"
      }
    ]
  },
  "users": [
    {
      "username": "testuser",
      "enabled": true,
      "email": "testuser@example.com",
      "firstName": "Test",
      "lastName": "User",
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "testpassword",
          "temporary": false
        }
      ],
      "realmRoles": [
        "user",
        "api_read",
        "api_write"
      ]
    },
    {
      "username": "admin",
      "enabled": true,
      "email": "admin@example.com",
      "firstName": "Admin",
      "lastName": "User",
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "adminpassword",
          "temporary": false
        }
      ],
      "realmRoles": [
        "user",
        "admin",
        "api_read",
        "api_write"
      ]
    }
  ],
  "groups": [],
  "requiredActions": [
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "smtpServer": {
    "starttls": "true",
    "port": "587",
    "host": "smtp.example.com",
    "from": "noreply@example.com",
    "fromDisplayName": "OAuth Demo",
    "auth": "true",
    "user": "smtp-username",
    "password": "smtp-password"
  },
  "eventsEnabled": true,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "LOGIN",
    "LOGIN_ERROR",
    "LOGOUT",
    "CODE_TO_TOKEN",
    "CODE_TO_TOKEN_ERROR",
    "REFRESH_TOKEN",
    "REFRESH_TOKEN_ERROR",
    "REVOKE_GRANT",
    "CLIENT_LOGIN",
    "CLIENT_LOGIN_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "internationalizationEnabled": true,
  "supportedLocales": [
    "en",
    "es",
    "fr",
    "de"
  ],
  "defaultLocale": "en",
  "authenticationFlows": [],
  "authenticatorConfig": [],
  "requiredActions": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  }
}
