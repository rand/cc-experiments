# TCP Optimization for High-Latency WAN Links
# Optimized for 100ms+ RTT networks (international links, satellite, etc.)
#
# Usage:
#   sudo cp 05-high-latency-wan-tuning.conf /etc/sysctl.d/99-tcp-wan.conf
#   sudo sysctl -p /etc/sysctl.d/99-tcp-wan.conf

# ============================================================================
# Buffer Sizing for High Latency
# ============================================================================
# For 1 Gbps × 200ms RTT = 25 MB BDP
# Using 2× BDP = 50 MB, rounded to 64 MB for safety

net.ipv4.tcp_rmem = 4096 262144 67108864
net.ipv4.tcp_wmem = 4096 262144 67108864
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864

# ============================================================================
# BBR Congestion Control (Handles High Latency Well)
# ============================================================================
net.ipv4.tcp_congestion_control = bbr
net.core.default_qdisc = fq

# ============================================================================
# Essential TCP Features
# ============================================================================
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
net.ipv4.tcp_dsack = 1

# ============================================================================
# Performance Tuning for High Latency
# ============================================================================
# Don't reset cwnd after idle (critical for bursty WAN traffic)
net.ipv4.tcp_slow_start_after_idle = 0

# Enable MTU probing (discover optimal path MTU)
net.ipv4.tcp_mtu_probing = 1

# TCP Fast Open (reduces handshake latency)
net.ipv4.tcp_fastopen = 3

# ============================================================================
# Keep-Alive (Maintain Connections Across Long Paths)
# ============================================================================
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 3

# ============================================================================
# Retransmission Tuning
# ============================================================================
# More aggressive retransmits for high-latency links
net.ipv4.tcp_retries2 = 15

# ============================================================================
# Notes
# ============================================================================
# High-latency networks benefit most from:
# 1. Large buffers (to match BDP)
# 2. BBR congestion control (doesn't rely on loss signals)
# 3. Window scaling and SACK (efficient use of bandwidth)
# 4. Not resetting cwnd after idle (bursty traffic common)
#
# Calculate your BDP:
#   BDP (bytes) = Bandwidth (bits/sec) × RTT (sec) / 8
#   Example: 1 Gbps × 0.2s / 8 = 25 MB
#   Buffer size = 2 × BDP = 50 MB
#
# Test latency: ping <remote-host>
# Test throughput: iperf3 -c <remote-host> -t 300
