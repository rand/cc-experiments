# Production nginx WebSocket Configuration
#
# Features:
# - WebSocket upgrade headers
# - Sticky sessions (ip_hash)
# - TLS/SSL configuration
# - Health checks
# - Connection limits
# - Timeouts for long-lived connections

# Upstream backend servers
upstream websocket_backend {
    # IP hash for sticky sessions (required for WebSocket)
    ip_hash;

    # Backend servers
    server backend1.example.com:8080 max_fails=3 fail_timeout=30s weight=1;
    server backend2.example.com:8080 max_fails=3 fail_timeout=30s weight=1;
    server backend3.example.com:8080 max_fails=3 fail_timeout=30s weight=1;

    # Keepalive connections
    keepalive 32;
}

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

# HTTP server (redirect to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name ws.example.com;

    # Redirect all HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ws.example.com;

    # TLS configuration
    ssl_certificate /etc/ssl/certs/ws.example.com.crt;
    ssl_certificate_key /etc/ssl/private/ws.example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Connection limits
    limit_conn conn_limit_per_ip 10;
    limit_req zone=req_limit_per_ip burst=20;

    # WebSocket endpoint
    location /ws {
        # Proxy to backend
        proxy_pass http://websocket_backend;

        # Required WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts for long-lived connections
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        # Disable buffering (critical for WebSocket)
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;

        # Connection settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://websocket_backend/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # Short timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;

        access_log off;
    }

    # Default location
    location / {
        return 404;
    }
}
