version: '3.8'

services:
  # RabbitMQ cluster node 1
  rabbitmq1:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq1
    container_name: rabbitmq1
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secret_cookie_value'
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq1_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - rabbitmq_cluster
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ cluster node 2
  rabbitmq2:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq2
    container_name: rabbitmq2
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secret_cookie_value'
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq2_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - rabbitmq_cluster
    depends_on:
      rabbitmq1:
        condition: service_healthy
    entrypoint: >
      sh -c "
        rabbitmq-server -detached &&
        sleep 10 &&
        rabbitmqctl stop_app &&
        rabbitmqctl reset &&
        rabbitmqctl join_cluster rabbit@rabbitmq1 &&
        rabbitmqctl start_app &&
        tail -f /dev/null
      "
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ cluster node 3
  rabbitmq3:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq3
    container_name: rabbitmq3
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secret_cookie_value'
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq3_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - rabbitmq_cluster
    depends_on:
      rabbitmq1:
        condition: service_healthy
    entrypoint: >
      sh -c "
        rabbitmq-server -detached &&
        sleep 10 &&
        rabbitmqctl stop_app &&
        rabbitmqctl reset &&
        rabbitmqctl join_cluster rabbit@rabbitmq1 &&
        rabbitmqctl start_app &&
        tail -f /dev/null
      "
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # HAProxy load balancer
  haproxy:
    image: haproxy:2.8-alpine
    container_name: rabbitmq_haproxy
    ports:
      - "5673:5672"   # Load balanced AMQP
      - "15673:15672" # Load balanced Management
      - "8080:8080"   # HAProxy stats
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - rabbitmq_cluster
    depends_on:
      - rabbitmq1
      - rabbitmq2
      - rabbitmq3

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: rabbitmq_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - rabbitmq_cluster
    depends_on:
      - rabbitmq1

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: rabbitmq_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: flant-statusmap-panel,grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
    networks:
      - rabbitmq_cluster
    depends_on:
      - prometheus

volumes:
  rabbitmq1_data:
  rabbitmq2_data:
  rabbitmq3_data:
  prometheus_data:
  grafana_data:

networks:
  rabbitmq_cluster:
    driver: bridge
