# Mutual TLS (mTLS) Configuration for Nginx
# Requires client certificates for authentication

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.example.com;

    # Server Certificates
    ssl_certificate /etc/ssl/certs/server-fullchain.pem;
    ssl_certificate_key /etc/ssl/private/server-key.pem;

    # Client Certificate Verification
    ssl_client_certificate /etc/ssl/certs/client-ca.pem;
    ssl_verify_client on;
    ssl_verify_depth 2;

    # Optional: Make client certs optional for some paths
    # ssl_verify_client optional;

    # TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # Session Settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location / {
        # Pass client certificate information to backend
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Client certificate details
        proxy_set_header X-Client-Cert-DN $ssl_client_s_dn;
        proxy_set_header X-Client-Cert-Serial $ssl_client_serial;
        proxy_set_header X-Client-Cert-Verify $ssl_client_verify;
        proxy_set_header X-Client-Cert-Issuer-DN $ssl_client_i_dn;
    }

    # Optional: Different verification for different paths
    location /public {
        # No client certificate required for public endpoints
        ssl_verify_client off;
        proxy_pass http://backend:8080;
    }

    location /admin {
        # Strict client certificate required
        ssl_verify_client on;

        # Additional validation in backend based on certificate DN
        proxy_pass http://backend:8080;
        proxy_set_header X-Client-Cert-DN $ssl_client_s_dn;
    }
}

# HTTP redirect
server {
    listen 80;
    listen [::]:80;
    server_name api.example.com;
    return 301 https://$server_name$request_uri;
}
