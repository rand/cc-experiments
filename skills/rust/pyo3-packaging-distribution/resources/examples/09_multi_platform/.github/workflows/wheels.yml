name: Build Multi-Platform Wheels

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
  workflow_dispatch:

jobs:
  # Linux wheels using manylinux
  linux:
    name: Linux ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64, i686]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.8 3.9 3.10 3.11 3.12
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # Linux wheels using musllinux (Alpine)
  linux-musl:
    name: Linux musllinux ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.8 3.9 3.10 3.11 3.12
          manylinux: musllinux_1_2

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # macOS wheels (Intel and Apple Silicon)
  macos:
    name: macOS ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.8 3.9 3.10 3.11 3.12

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # macOS universal2 wheels (both architectures in one wheel)
  macos-universal:
    name: macOS universal2
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --interpreter 3.8 3.9 3.10 3.11 3.12 --target universal2-apple-darwin

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # Windows wheels
  windows:
    name: Windows ${{ matrix.target }}
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.8 3.9 3.10 3.11 3.12

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # Build source distribution
  sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # Test wheels on each platform
  test:
    name: Test ${{ matrix.os }} ${{ matrix.python }}
    needs: [linux, macos, windows]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.8', '3.12']
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install wheel
        shell: bash
        run: |
          pip install multi_platform --no-index --find-links dist --force-reinstall

      - name: Test import
        run: |
          python -c "import multi_platform; print(multi_platform.__version__)"
          python -c "import multi_platform; print(multi_platform.get_platform_info())"

  # Generate matrix summary
  summary:
    name: Build Summary
    needs: [linux, linux-musl, macos, macos-universal, windows, sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - name: List wheels
        run: |
          echo "## Built Wheels" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -lh dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Count wheels
        run: |
          total=$(ls -1 dist/*.whl | wc -l)
          echo "Total wheels built: $total" >> $GITHUB_STEP_SUMMARY
