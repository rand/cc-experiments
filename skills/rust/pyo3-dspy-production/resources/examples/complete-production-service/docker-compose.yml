version: '3.8'

services:
  # =============================================================================
  # Application Service
  # =============================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dspy-production-service
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - REDIS_URL=redis://redis:6379
      - SERVICE_NAME=complete-production-service
      - SERVICE_VERSION=0.1.0
      - MEMORY_CACHE_SIZE=10000
      - MEMORY_CACHE_TTL_SECS=300
      - REDIS_CACHE_TTL_SECS=3600
      - CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
      - CIRCUIT_BREAKER_SUCCESS_THRESHOLD=2
      - CIRCUIT_BREAKER_TIMEOUT_SECS=60
      - AB_TESTING_ENABLED=false
      - DEFAULT_VARIANT=baseline
      # OpenAI API key (provide via .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dspy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # =============================================================================
  # Redis Cache
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: dspy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - dspy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # =============================================================================
  # Prometheus Monitoring
  # =============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: dspy-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - dspy-network
    depends_on:
      - app

  # =============================================================================
  # Grafana Dashboard
  # =============================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: dspy-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: unless-stopped
    networks:
      - dspy-network
    depends_on:
      - prometheus

networks:
  dspy-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
