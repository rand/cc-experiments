events {
    worker_connections 1024;
}

http {
    upstream websocket_backend {
        # Sticky sessions using IP hash
        ip_hash;
        server websocket-service:8080;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=websocket_limit:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost;

        # Redirect to HTTPS (uncomment for production)
        # return 301 https://$server_name$request_uri;

        # WebSocket endpoint
        location /ws {
            limit_req zone=websocket_limit burst=20 nodelay;

            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;

            # WebSocket upgrade headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 60s;

            # Buffering
            proxy_buffering off;
        }

        # Health check
        location /health {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Metrics (restrict access in production)
        location /metrics {
            # allow 10.0.0.0/8;
            # deny all;
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Static files and root
        location / {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #
    #     # ... same locations as above ...
    # }
}
