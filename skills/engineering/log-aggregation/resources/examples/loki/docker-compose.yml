# Loki + Promtail + Grafana - Lightweight Logging Stack
# Cost-effective alternative to ELK stack
#
# Usage:
#   docker-compose up -d
#   docker-compose logs -f
#   docker-compose down -v
#
# Access:
#   Grafana: http://localhost:3000 (admin/admin)
#   Loki: http://localhost:3100

version: '3.8'

services:
  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    hostname: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - logging
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    hostname: promtail
    volumes:
      - /var/log:/var/log:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - promtail_data:/promtail
    command: -config.file=/etc/promtail/config.yml
    networks:
      - logging
    depends_on:
      loki:
        condition: service_healthy

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      # Security
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

      # UI settings
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/logs-overview.json

    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./grafana/logs-overview.json:/etc/grafana/provisioning/dashboards/logs-overview.json:ro

    networks:
      - logging

    depends_on:
      loki:
        condition: service_healthy

    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  loki_data:
    driver: local
  promtail_data:
    driver: local
  grafana_data:
    driver: local

networks:
  logging:
    driver: bridge
