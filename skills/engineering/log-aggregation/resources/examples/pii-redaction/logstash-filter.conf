# PII Redaction Filter for Logstash
# Removes personally identifiable information before logs are stored
#
# Use in Logstash pipeline:
#   input {
#     ...
#   }
#   filter {
#     @include "pii-redaction.conf"
#   }
#   output {
#     ...
#   }

# ============================================================================
# PII REDACTION FILTERS
# ============================================================================

# Redact common PII patterns
mutate {
  # Email addresses
  gsub => [
    "message", "\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b", "[EMAIL]"
  ]
}

mutate {
  # Credit card numbers (various formats)
  gsub => [
    "message", "\b\d{4}[\s-]?\d{4}[\s-]?\d{4}[\s-]?\d{4}\b", "[CC]",
    "message", "\b\d{13,19}\b", "[CC]"
  ]
}

mutate {
  # Social Security Numbers
  gsub => [
    "message", "\b\d{3}-\d{2}-\d{4}\b", "[SSN]",
    "message", "\b\d{9}\b", "[SSN]"
  ]
}

mutate {
  # Phone numbers (US/International)
  gsub => [
    "message", "\b\d{3}[-.]?\d{3}[-.]?\d{4}\b", "[PHONE]",
    "message", "\+\d{1,3}[\s-]?\d{1,14}\b", "[PHONE]"
  ]
}

mutate {
  # IP addresses (optional - may want to keep for security)
  # Uncomment to redact IP addresses
  # gsub => [
  #   "message", "\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b", "[IP]"
  # ]
}

mutate {
  # Passport numbers (generic pattern)
  gsub => [
    "message", "\b[A-Z]{1,2}\d{6,9}\b", "[PASSPORT]"
  ]
}

mutate {
  # Driver's license numbers (generic pattern)
  gsub => [
    "message", "\b[A-Z]{1,2}\d{7,10}\b", "[DL]"
  ]
}

# ============================================================================
# FIELD-LEVEL REDACTION
# ============================================================================

# Remove sensitive fields entirely
mutate {
  remove_field => [
    "password",
    "api_key",
    "secret",
    "token",
    "access_token",
    "refresh_token",
    "credit_card",
    "ssn",
    "social_security_number"
  ]
}

# Hash sensitive fields (for tracking without exposing data)
if [user_id] {
  fingerprint {
    source => "user_id"
    target => "user_id_hash"
    method => "SHA256"
    key => "your-secret-key-here"
  }
  mutate {
    remove_field => ["user_id"]
  }
}

if [email] {
  fingerprint {
    source => "email"
    target => "email_hash"
    method => "SHA256"
    key => "your-secret-key-here"
  }
  mutate {
    remove_field => ["email"]
  }
}

# ============================================================================
# STRUCTURED DATA REDACTION (JSON fields)
# ============================================================================

# Redact nested JSON fields
if [request][body] {
  # Parse nested JSON
  json {
    source => "[request][body]"
    target => "parsed_body"
    skip_on_invalid_json => true
  }

  # Remove sensitive fields from parsed body
  mutate {
    remove_field => [
      "[parsed_body][password]",
      "[parsed_body][credit_card]",
      "[parsed_body][ssn]"
    ]
  }

  # Convert back to JSON string
  mutate {
    add_field => {
      "[request][body_redacted]" => "%{[parsed_body]}"
    }
    remove_field => ["[request][body]", "parsed_body"]
  }
}

# ============================================================================
# CONTEXT-AWARE REDACTION
# ============================================================================

# Only redact in production
if [environment] == "production" {
  # Additional production-specific redactions
  mutate {
    remove_field => [
      "internal_id",
      "database_host",
      "database_password"
    ]
  }
}

# Preserve certain fields for debugging in non-production
if [environment] != "production" {
  mutate {
    add_tag => ["pii_not_redacted"]
  }
}

# ============================================================================
# COMPLIANCE TAGS
# ============================================================================

# Tag logs that may contain PII (before redaction)
if [message] =~ /email|ssn|credit.card|password/ or
   [user_id] or
   [email] or
   [phone_number] {
  mutate {
    add_tag => ["potential_pii"]
  }
}

# Tag logs after redaction
mutate {
  add_tag => ["pii_redacted"]
  add_field => {
    "pii_redaction_version" => "1.0"
    "pii_redacted_at" => "%{@timestamp}"
  }
}

# ============================================================================
# VALIDATION
# ============================================================================

# Check if redaction was successful
if [message] =~ /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/ {
  mutate {
    add_tag => ["redaction_failed_email"]
  }
}

if [message] =~ /\b\d{4}[\s-]?\d{4}[\s-]?\d{4}[\s-]?\d{4}\b/ {
  mutate {
    add_tag => ["redaction_failed_cc"]
  }
}

if [message] =~ /\b\d{3}-\d{2}-\d{4}\b/ {
  mutate {
    add_tag => ["redaction_failed_ssn"]
  }
}

# ============================================================================
# AUDIT LOG
# ============================================================================

# Create audit record if PII was detected and redacted
if "potential_pii" in [tags] and "pii_redacted" in [tags] {
  clone {
    clones => ["pii_audit"]
  }
}

if [type] == "pii_audit" {
  mutate {
    add_field => {
      "audit_type" => "pii_redaction"
      "original_index" => "%{[@metadata][_index]}"
      "original_id" => "%{[@metadata][_id]}"
    }
    remove_field => ["message"]  # Don't include original message in audit
  }
}
